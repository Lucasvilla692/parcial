

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul 27 18:27:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.05
    51                           ; Generated 20/12/2018 GMT
    52                           ; 
    53                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F1937 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0110                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  011A                     	;# 
   149  011B                     	;# 
   150  011D                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018F                     	;# 
   154  0190                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020D                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029C                     	;# 
   200  029D                     	;# 
   201  029E                     	;# 
   202  029F                     	;# 
   203  0311                     	;# 
   204  0311                     	;# 
   205  0312                     	;# 
   206  0313                     	;# 
   207  0314                     	;# 
   208  0315                     	;# 
   209  0315                     	;# 
   210  0316                     	;# 
   211  0318                     	;# 
   212  0318                     	;# 
   213  0319                     	;# 
   214  031A                     	;# 
   215  031C                     	;# 
   216  031C                     	;# 
   217  031D                     	;# 
   218  031E                     	;# 
   219  0394                     	;# 
   220  0395                     	;# 
   221  0396                     	;# 
   222  0415                     	;# 
   223  0416                     	;# 
   224  0417                     	;# 
   225  041C                     	;# 
   226  041D                     	;# 
   227  041E                     	;# 
   228  0791                     	;# 
   229  0792                     	;# 
   230  0793                     	;# 
   231  0794                     	;# 
   232  0795                     	;# 
   233  0798                     	;# 
   234  0799                     	;# 
   235  079A                     	;# 
   236  07A0                     	;# 
   237  07A1                     	;# 
   238  07A2                     	;# 
   239  07A3                     	;# 
   240  07A4                     	;# 
   241  07A5                     	;# 
   242  07A6                     	;# 
   243  07A7                     	;# 
   244  07A8                     	;# 
   245  07A9                     	;# 
   246  07AA                     	;# 
   247  07AB                     	;# 
   248  0FE4                     	;# 
   249  0FE5                     	;# 
   250  0FE6                     	;# 
   251  0FE7                     	;# 
   252  0FE8                     	;# 
   253  0FE9                     	;# 
   254  0FEA                     	;# 
   255  0FEB                     	;# 
   256  0FED                     	;# 
   257  0FEE                     	;# 
   258  0FEF                     	;# 
   259  0000                     	;# 
   260  0001                     	;# 
   261  0002                     	;# 
   262  0003                     	;# 
   263  0004                     	;# 
   264  0005                     	;# 
   265  0006                     	;# 
   266  0007                     	;# 
   267  0008                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  000D                     	;# 
   273  000E                     	;# 
   274  000F                     	;# 
   275  0010                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0016                     	;# 
   282  0017                     	;# 
   283  0018                     	;# 
   284  0019                     	;# 
   285  001A                     	;# 
   286  001B                     	;# 
   287  001C                     	;# 
   288  001E                     	;# 
   289  001F                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0110                     	;# 
   314  0111                     	;# 
   315  0112                     	;# 
   316  0113                     	;# 
   317  0114                     	;# 
   318  0115                     	;# 
   319  0116                     	;# 
   320  0117                     	;# 
   321  0118                     	;# 
   322  0119                     	;# 
   323  011A                     	;# 
   324  011B                     	;# 
   325  011D                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  018F                     	;# 
   329  0190                     	;# 
   330  0191                     	;# 
   331  0191                     	;# 
   332  0192                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0193                     	;# 
   336  0194                     	;# 
   337  0195                     	;# 
   338  0196                     	;# 
   339  0199                     	;# 
   340  019A                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019C                     	;# 
   346  019C                     	;# 
   347  019D                     	;# 
   348  019E                     	;# 
   349  019F                     	;# 
   350  020D                     	;# 
   351  0210                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0213                     	;# 
   355  0214                     	;# 
   356  0215                     	;# 
   357  0215                     	;# 
   358  0216                     	;# 
   359  0217                     	;# 
   360  0291                     	;# 
   361  0291                     	;# 
   362  0292                     	;# 
   363  0293                     	;# 
   364  0294                     	;# 
   365  0295                     	;# 
   366  0295                     	;# 
   367  0296                     	;# 
   368  0298                     	;# 
   369  0298                     	;# 
   370  0299                     	;# 
   371  029A                     	;# 
   372  029B                     	;# 
   373  029C                     	;# 
   374  029C                     	;# 
   375  029D                     	;# 
   376  029E                     	;# 
   377  029F                     	;# 
   378  0311                     	;# 
   379  0311                     	;# 
   380  0312                     	;# 
   381  0313                     	;# 
   382  0314                     	;# 
   383  0315                     	;# 
   384  0315                     	;# 
   385  0316                     	;# 
   386  0318                     	;# 
   387  0318                     	;# 
   388  0319                     	;# 
   389  031A                     	;# 
   390  031C                     	;# 
   391  031C                     	;# 
   392  031D                     	;# 
   393  031E                     	;# 
   394  0394                     	;# 
   395  0395                     	;# 
   396  0396                     	;# 
   397  0415                     	;# 
   398  0416                     	;# 
   399  0417                     	;# 
   400  041C                     	;# 
   401  041D                     	;# 
   402  041E                     	;# 
   403  0791                     	;# 
   404  0792                     	;# 
   405  0793                     	;# 
   406  0794                     	;# 
   407  0795                     	;# 
   408  0798                     	;# 
   409  0799                     	;# 
   410  079A                     	;# 
   411  07A0                     	;# 
   412  07A1                     	;# 
   413  07A2                     	;# 
   414  07A3                     	;# 
   415  07A4                     	;# 
   416  07A5                     	;# 
   417  07A6                     	;# 
   418  07A7                     	;# 
   419  07A8                     	;# 
   420  07A9                     	;# 
   421  07AA                     	;# 
   422  07AB                     	;# 
   423  0FE4                     	;# 
   424  0FE5                     	;# 
   425  0FE6                     	;# 
   426  0FE7                     	;# 
   427  0FE8                     	;# 
   428  0FE9                     	;# 
   429  0FEA                     	;# 
   430  0FEB                     	;# 
   431  0FED                     	;# 
   432  0FEE                     	;# 
   433  0FEF                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000F                     	;# 
   450  0010                     	;# 
   451  0011                     	;# 
   452  0012                     	;# 
   453  0013                     	;# 
   454  0015                     	;# 
   455  0016                     	;# 
   456  0016                     	;# 
   457  0017                     	;# 
   458  0018                     	;# 
   459  0019                     	;# 
   460  001A                     	;# 
   461  001B                     	;# 
   462  001C                     	;# 
   463  001E                     	;# 
   464  001F                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  008F                     	;# 
   469  0090                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0095                     	;# 
   474  0096                     	;# 
   475  0097                     	;# 
   476  0098                     	;# 
   477  0099                     	;# 
   478  009A                     	;# 
   479  009B                     	;# 
   480  009B                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009E                     	;# 
   484  010C                     	;# 
   485  010D                     	;# 
   486  010E                     	;# 
   487  010F                     	;# 
   488  0110                     	;# 
   489  0111                     	;# 
   490  0112                     	;# 
   491  0113                     	;# 
   492  0114                     	;# 
   493  0115                     	;# 
   494  0116                     	;# 
   495  0117                     	;# 
   496  0118                     	;# 
   497  0119                     	;# 
   498  011A                     	;# 
   499  011B                     	;# 
   500  011D                     	;# 
   501  018C                     	;# 
   502  018D                     	;# 
   503  018F                     	;# 
   504  0190                     	;# 
   505  0191                     	;# 
   506  0191                     	;# 
   507  0192                     	;# 
   508  0193                     	;# 
   509  0193                     	;# 
   510  0193                     	;# 
   511  0194                     	;# 
   512  0195                     	;# 
   513  0196                     	;# 
   514  0199                     	;# 
   515  019A                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019B                     	;# 
   520  019C                     	;# 
   521  019C                     	;# 
   522  019D                     	;# 
   523  019E                     	;# 
   524  019F                     	;# 
   525  020D                     	;# 
   526  0210                     	;# 
   527  0211                     	;# 
   528  0212                     	;# 
   529  0213                     	;# 
   530  0214                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0216                     	;# 
   534  0217                     	;# 
   535  0291                     	;# 
   536  0291                     	;# 
   537  0292                     	;# 
   538  0293                     	;# 
   539  0294                     	;# 
   540  0295                     	;# 
   541  0295                     	;# 
   542  0296                     	;# 
   543  0298                     	;# 
   544  0298                     	;# 
   545  0299                     	;# 
   546  029A                     	;# 
   547  029B                     	;# 
   548  029C                     	;# 
   549  029C                     	;# 
   550  029D                     	;# 
   551  029E                     	;# 
   552  029F                     	;# 
   553  0311                     	;# 
   554  0311                     	;# 
   555  0312                     	;# 
   556  0313                     	;# 
   557  0314                     	;# 
   558  0315                     	;# 
   559  0315                     	;# 
   560  0316                     	;# 
   561  0318                     	;# 
   562  0318                     	;# 
   563  0319                     	;# 
   564  031A                     	;# 
   565  031C                     	;# 
   566  031C                     	;# 
   567  031D                     	;# 
   568  031E                     	;# 
   569  0394                     	;# 
   570  0395                     	;# 
   571  0396                     	;# 
   572  0415                     	;# 
   573  0416                     	;# 
   574  0417                     	;# 
   575  041C                     	;# 
   576  041D                     	;# 
   577  041E                     	;# 
   578  0791                     	;# 
   579  0792                     	;# 
   580  0793                     	;# 
   581  0794                     	;# 
   582  0795                     	;# 
   583  0798                     	;# 
   584  0799                     	;# 
   585  079A                     	;# 
   586  07A0                     	;# 
   587  07A1                     	;# 
   588  07A2                     	;# 
   589  07A3                     	;# 
   590  07A4                     	;# 
   591  07A5                     	;# 
   592  07A6                     	;# 
   593  07A7                     	;# 
   594  07A8                     	;# 
   595  07A9                     	;# 
   596  07AA                     	;# 
   597  07AB                     	;# 
   598  0FE4                     	;# 
   599  0FE5                     	;# 
   600  0FE6                     	;# 
   601  0FE7                     	;# 
   602  0FE8                     	;# 
   603  0FE9                     	;# 
   604  0FEA                     	;# 
   605  0FEB                     	;# 
   606  0FED                     	;# 
   607  0FEE                     	;# 
   608  0FEF                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000D                     	;# 
   623  000E                     	;# 
   624  000F                     	;# 
   625  0010                     	;# 
   626  0011                     	;# 
   627  0012                     	;# 
   628  0013                     	;# 
   629  0015                     	;# 
   630  0016                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001C                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  008C                     	;# 
   641  008D                     	;# 
   642  008E                     	;# 
   643  008F                     	;# 
   644  0090                     	;# 
   645  0091                     	;# 
   646  0092                     	;# 
   647  0093                     	;# 
   648  0095                     	;# 
   649  0096                     	;# 
   650  0097                     	;# 
   651  0098                     	;# 
   652  0099                     	;# 
   653  009A                     	;# 
   654  009B                     	;# 
   655  009B                     	;# 
   656  009C                     	;# 
   657  009D                     	;# 
   658  009E                     	;# 
   659  010C                     	;# 
   660  010D                     	;# 
   661  010E                     	;# 
   662  010F                     	;# 
   663  0110                     	;# 
   664  0111                     	;# 
   665  0112                     	;# 
   666  0113                     	;# 
   667  0114                     	;# 
   668  0115                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  0118                     	;# 
   672  0119                     	;# 
   673  011A                     	;# 
   674  011B                     	;# 
   675  011D                     	;# 
   676  018C                     	;# 
   677  018D                     	;# 
   678  018F                     	;# 
   679  0190                     	;# 
   680  0191                     	;# 
   681  0191                     	;# 
   682  0192                     	;# 
   683  0193                     	;# 
   684  0193                     	;# 
   685  0193                     	;# 
   686  0194                     	;# 
   687  0195                     	;# 
   688  0196                     	;# 
   689  0199                     	;# 
   690  019A                     	;# 
   691  019B                     	;# 
   692  019B                     	;# 
   693  019B                     	;# 
   694  019B                     	;# 
   695  019C                     	;# 
   696  019C                     	;# 
   697  019D                     	;# 
   698  019E                     	;# 
   699  019F                     	;# 
   700  020D                     	;# 
   701  0210                     	;# 
   702  0211                     	;# 
   703  0212                     	;# 
   704  0213                     	;# 
   705  0214                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0216                     	;# 
   709  0217                     	;# 
   710  0291                     	;# 
   711  0291                     	;# 
   712  0292                     	;# 
   713  0293                     	;# 
   714  0294                     	;# 
   715  0295                     	;# 
   716  0295                     	;# 
   717  0296                     	;# 
   718  0298                     	;# 
   719  0298                     	;# 
   720  0299                     	;# 
   721  029A                     	;# 
   722  029B                     	;# 
   723  029C                     	;# 
   724  029C                     	;# 
   725  029D                     	;# 
   726  029E                     	;# 
   727  029F                     	;# 
   728  0311                     	;# 
   729  0311                     	;# 
   730  0312                     	;# 
   731  0313                     	;# 
   732  0314                     	;# 
   733  0315                     	;# 
   734  0315                     	;# 
   735  0316                     	;# 
   736  0318                     	;# 
   737  0318                     	;# 
   738  0319                     	;# 
   739  031A                     	;# 
   740  031C                     	;# 
   741  031C                     	;# 
   742  031D                     	;# 
   743  031E                     	;# 
   744  0394                     	;# 
   745  0395                     	;# 
   746  0396                     	;# 
   747  0415                     	;# 
   748  0416                     	;# 
   749  0417                     	;# 
   750  041C                     	;# 
   751  041D                     	;# 
   752  041E                     	;# 
   753  0791                     	;# 
   754  0792                     	;# 
   755  0793                     	;# 
   756  0794                     	;# 
   757  0795                     	;# 
   758  0798                     	;# 
   759  0799                     	;# 
   760  079A                     	;# 
   761  07A0                     	;# 
   762  07A1                     	;# 
   763  07A2                     	;# 
   764  07A3                     	;# 
   765  07A4                     	;# 
   766  07A5                     	;# 
   767  07A6                     	;# 
   768  07A7                     	;# 
   769  07A8                     	;# 
   770  07A9                     	;# 
   771  07AA                     	;# 
   772  07AB                     	;# 
   773  0FE4                     	;# 
   774  0FE5                     	;# 
   775  0FE6                     	;# 
   776  0FE7                     	;# 
   777  0FE8                     	;# 
   778  0FE9                     	;# 
   779  0FEA                     	;# 
   780  0FEB                     	;# 
   781  0FED                     	;# 
   782  0FEE                     	;# 
   783  0FEF                     	;# 
   784  0000                     	;# 
   785  0001                     	;# 
   786  0002                     	;# 
   787  0003                     	;# 
   788  0004                     	;# 
   789  0005                     	;# 
   790  0006                     	;# 
   791  0007                     	;# 
   792  0008                     	;# 
   793  0009                     	;# 
   794  000A                     	;# 
   795  000B                     	;# 
   796  000C                     	;# 
   797  000D                     	;# 
   798  000E                     	;# 
   799  000F                     	;# 
   800  0010                     	;# 
   801  0011                     	;# 
   802  0012                     	;# 
   803  0013                     	;# 
   804  0015                     	;# 
   805  0016                     	;# 
   806  0016                     	;# 
   807  0017                     	;# 
   808  0018                     	;# 
   809  0019                     	;# 
   810  001A                     	;# 
   811  001B                     	;# 
   812  001C                     	;# 
   813  001E                     	;# 
   814  001F                     	;# 
   815  008C                     	;# 
   816  008D                     	;# 
   817  008E                     	;# 
   818  008F                     	;# 
   819  0090                     	;# 
   820  0091                     	;# 
   821  0092                     	;# 
   822  0093                     	;# 
   823  0095                     	;# 
   824  0096                     	;# 
   825  0097                     	;# 
   826  0098                     	;# 
   827  0099                     	;# 
   828  009A                     	;# 
   829  009B                     	;# 
   830  009B                     	;# 
   831  009C                     	;# 
   832  009D                     	;# 
   833  009E                     	;# 
   834  010C                     	;# 
   835  010D                     	;# 
   836  010E                     	;# 
   837  010F                     	;# 
   838  0110                     	;# 
   839  0111                     	;# 
   840  0112                     	;# 
   841  0113                     	;# 
   842  0114                     	;# 
   843  0115                     	;# 
   844  0116                     	;# 
   845  0117                     	;# 
   846  0118                     	;# 
   847  0119                     	;# 
   848  011A                     	;# 
   849  011B                     	;# 
   850  011D                     	;# 
   851  018C                     	;# 
   852  018D                     	;# 
   853  018F                     	;# 
   854  0190                     	;# 
   855  0191                     	;# 
   856  0191                     	;# 
   857  0192                     	;# 
   858  0193                     	;# 
   859  0193                     	;# 
   860  0193                     	;# 
   861  0194                     	;# 
   862  0195                     	;# 
   863  0196                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019C                     	;# 
   871  019C                     	;# 
   872  019D                     	;# 
   873  019E                     	;# 
   874  019F                     	;# 
   875  020D                     	;# 
   876  0210                     	;# 
   877  0211                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0214                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0216                     	;# 
   884  0217                     	;# 
   885  0291                     	;# 
   886  0291                     	;# 
   887  0292                     	;# 
   888  0293                     	;# 
   889  0294                     	;# 
   890  0295                     	;# 
   891  0295                     	;# 
   892  0296                     	;# 
   893  0298                     	;# 
   894  0298                     	;# 
   895  0299                     	;# 
   896  029A                     	;# 
   897  029B                     	;# 
   898  029C                     	;# 
   899  029C                     	;# 
   900  029D                     	;# 
   901  029E                     	;# 
   902  029F                     	;# 
   903  0311                     	;# 
   904  0311                     	;# 
   905  0312                     	;# 
   906  0313                     	;# 
   907  0314                     	;# 
   908  0315                     	;# 
   909  0315                     	;# 
   910  0316                     	;# 
   911  0318                     	;# 
   912  0318                     	;# 
   913  0319                     	;# 
   914  031A                     	;# 
   915  031C                     	;# 
   916  031C                     	;# 
   917  031D                     	;# 
   918  031E                     	;# 
   919  0394                     	;# 
   920  0395                     	;# 
   921  0396                     	;# 
   922  0415                     	;# 
   923  0416                     	;# 
   924  0417                     	;# 
   925  041C                     	;# 
   926  041D                     	;# 
   927  041E                     	;# 
   928  0791                     	;# 
   929  0792                     	;# 
   930  0793                     	;# 
   931  0794                     	;# 
   932  0795                     	;# 
   933  0798                     	;# 
   934  0799                     	;# 
   935  079A                     	;# 
   936  07A0                     	;# 
   937  07A1                     	;# 
   938  07A2                     	;# 
   939  07A3                     	;# 
   940  07A4                     	;# 
   941  07A5                     	;# 
   942  07A6                     	;# 
   943  07A7                     	;# 
   944  07A8                     	;# 
   945  07A9                     	;# 
   946  07AA                     	;# 
   947  07AB                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000D                     	;# 
   973  000E                     	;# 
   974  000F                     	;# 
   975  0010                     	;# 
   976  0011                     	;# 
   977  0012                     	;# 
   978  0013                     	;# 
   979  0015                     	;# 
   980  0016                     	;# 
   981  0016                     	;# 
   982  0017                     	;# 
   983  0018                     	;# 
   984  0019                     	;# 
   985  001A                     	;# 
   986  001B                     	;# 
   987  001C                     	;# 
   988  001E                     	;# 
   989  001F                     	;# 
   990  008C                     	;# 
   991  008D                     	;# 
   992  008E                     	;# 
   993  008F                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0095                     	;# 
   999  0096                     	;# 
  1000  0097                     	;# 
  1001  0098                     	;# 
  1002  0099                     	;# 
  1003  009A                     	;# 
  1004  009B                     	;# 
  1005  009B                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  010C                     	;# 
  1010  010D                     	;# 
  1011  010E                     	;# 
  1012  010F                     	;# 
  1013  0110                     	;# 
  1014  0111                     	;# 
  1015  0112                     	;# 
  1016  0113                     	;# 
  1017  0114                     	;# 
  1018  0115                     	;# 
  1019  0116                     	;# 
  1020  0117                     	;# 
  1021  0118                     	;# 
  1022  0119                     	;# 
  1023  011A                     	;# 
  1024  011B                     	;# 
  1025  011D                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018F                     	;# 
  1029  0190                     	;# 
  1030  0191                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  0193                     	;# 
  1034  0193                     	;# 
  1035  0193                     	;# 
  1036  0194                     	;# 
  1037  0195                     	;# 
  1038  0196                     	;# 
  1039  0199                     	;# 
  1040  019A                     	;# 
  1041  019B                     	;# 
  1042  019B                     	;# 
  1043  019B                     	;# 
  1044  019B                     	;# 
  1045  019C                     	;# 
  1046  019C                     	;# 
  1047  019D                     	;# 
  1048  019E                     	;# 
  1049  019F                     	;# 
  1050  020D                     	;# 
  1051  0210                     	;# 
  1052  0211                     	;# 
  1053  0212                     	;# 
  1054  0213                     	;# 
  1055  0214                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0216                     	;# 
  1059  0217                     	;# 
  1060  0291                     	;# 
  1061  0291                     	;# 
  1062  0292                     	;# 
  1063  0293                     	;# 
  1064  0294                     	;# 
  1065  0295                     	;# 
  1066  0295                     	;# 
  1067  0296                     	;# 
  1068  0298                     	;# 
  1069  0298                     	;# 
  1070  0299                     	;# 
  1071  029A                     	;# 
  1072  029B                     	;# 
  1073  029C                     	;# 
  1074  029C                     	;# 
  1075  029D                     	;# 
  1076  029E                     	;# 
  1077  029F                     	;# 
  1078  0311                     	;# 
  1079  0311                     	;# 
  1080  0312                     	;# 
  1081  0313                     	;# 
  1082  0314                     	;# 
  1083  0315                     	;# 
  1084  0315                     	;# 
  1085  0316                     	;# 
  1086  0318                     	;# 
  1087  0318                     	;# 
  1088  0319                     	;# 
  1089  031A                     	;# 
  1090  031C                     	;# 
  1091  031C                     	;# 
  1092  031D                     	;# 
  1093  031E                     	;# 
  1094  0394                     	;# 
  1095  0395                     	;# 
  1096  0396                     	;# 
  1097  0415                     	;# 
  1098  0416                     	;# 
  1099  0417                     	;# 
  1100  041C                     	;# 
  1101  041D                     	;# 
  1102  041E                     	;# 
  1103  0791                     	;# 
  1104  0792                     	;# 
  1105  0793                     	;# 
  1106  0794                     	;# 
  1107  0795                     	;# 
  1108  0798                     	;# 
  1109  0799                     	;# 
  1110  079A                     	;# 
  1111  07A0                     	;# 
  1112  07A1                     	;# 
  1113  07A2                     	;# 
  1114  07A3                     	;# 
  1115  07A4                     	;# 
  1116  07A5                     	;# 
  1117  07A6                     	;# 
  1118  07A7                     	;# 
  1119  07A8                     	;# 
  1120  07A9                     	;# 
  1121  07AA                     	;# 
  1122  07AB                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134                           
  1135 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1136  0000                     
  1137 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1138  0000                     
  1139 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1140  0000                     
  1141                           	psect	nvBANK2
  1142  0120                     __pnvBANK2:	
  1143  0120                     _EUSART_ErrorHandler:	
  1144  0120                     	ds	2
  1145  0122                     _EUSART_OverrunErrorHandler:	
  1146  0122                     	ds	2
  1147  0124                     _EUSART_FramingErrorHandler:	
  1148  0124                     	ds	2
  1149  0011                     _PIR1bits	set	17
  1150  0095                     _OPTION_REGbits	set	149
  1151  008F                     _TRISD	set	143
  1152  008E                     _TRISC	set	142
  1153  008D                     _TRISB	set	141
  1154  008C                     _TRISA	set	140
  1155  0090                     _TRISE	set	144
  1156  0097                     _WDTCON	set	151
  1157  0098                     _OSCTUNE	set	152
  1158  0099                     _OSCCON	set	153
  1159  009D                     _ADCON0bits	set	157
  1160  009C                     _ADRESH	set	156
  1161  009B                     _ADRESL	set	155
  1162  009E                     _ADCON1	set	158
  1163  009D                     _ADCON0	set	157
  1164  011D                     _APFCON	set	285
  1165  010E                     _LATC	set	270
  1166  010D                     _LATB	set	269
  1167  010C                     _LATA	set	268
  1168  010F                     _LATD	set	271
  1169  0110                     _LATE	set	272
  1170  0116                     _BORCON	set	278
  1171  018C                     _ANSELA	set	396
  1172  0190                     _ANSELE	set	400
  1173  018D                     _ANSELB	set	397
  1174  018F                     _ANSELD	set	399
  1175  019A                     _TXREG	set	410
  1176  0199                     _RCREG	set	409
  1177  019D                     _RCSTAbits	set	413
  1178  019E                     _TXSTAbits	set	414
  1179  019C                     _SPBRGH	set	412
  1180  019B                     _SPBRGL	set	411
  1181  019E                     _TXSTA	set	414
  1182  019D                     _RCSTA	set	413
  1183  019F                     _BAUDCON	set	415
  1184  020D                     _WPUB	set	525
  1185  0210                     _WPUE	set	528
  1186                           
  1187                           	psect	stringtext1
  1188  1000                     __pstringtext1:	
  1189  1000                     STR_1:	
  1190  1000  3425               	retlw	37	;'%'
  1191  1001  3430               	retlw	48	;'0'
  1192  1002  3432               	retlw	50	;'2'
  1193  1003  3458               	retlw	88	;'X'
  1194  1004  3400               	retlw	0
  1195                           
  1196                           	psect	stringtext2
  1197  0000                     __pstringtext2:	
  1198                           
  1199                           ; #config settings
  1200  0000                     
  1201                           	psect	cinit
  1202  07F6                     start_initialization:	
  1203  07F6                     __initialization:	
  1204                           
  1205                           ; Clear objects allocated to BANK1
  1206  07F6  30A0               	movlw	low __pbssBANK1
  1207  07F7  0084               	movwf	4
  1208  07F8  3000               	movlw	high __pbssBANK1
  1209  07F9  0085               	movwf	5
  1210  07FA  303B               	movlw	59
  1211  07FB  318C  2428         	fcall	clear_ram0
  1212  07FD                     end_of_initialization:	
  1213                           ;End of C runtime variable initialization code
  1214                           
  1215  07FD                     __end_of__initialization:	
  1216  07FD  0020               	movlb	0
  1217  07FE  3180  2823         	ljmp	_main	;jump to C main() function
  1218                           
  1219                           	psect	bssBANK1
  1220  00A0                     __pbssBANK1:	
  1221  00A0                     _nout:	
  1222  00A0                     	ds	2
  1223  00A2                     _width:	
  1224  00A2                     	ds	2
  1225  00A4                     _prec:	
  1226  00A4                     	ds	2
  1227  00A6                     _flags:	
  1228  00A6                     	ds	2
  1229  00A8                     _entrada:	
  1230  00A8                     	ds	1
  1231  00A9                     _eusartRxLastError:	
  1232  00A9                     	ds	1
  1233  00AA                     _dbuf:	
  1234  00AA                     	ds	32
  1235  00CA                     _trama2:	
  1236  00CA                     	ds	17
  1237                           
  1238                           	psect	clrtext
  1239  0C28                     clear_ram0:	
  1240                           ;	Called with FSR0 containing the base address, and
  1241                           ;	WREG with the size to clear
  1242                           
  1243  0C28  0064               	clrwdt	;clear the watchdog before getting into this loop
  1244  0C29                     clrloop0:	
  1245  0C29  0180               	clrf	0	;clear RAM location pointed to by FSR
  1246  0C2A  3101               	addfsr 0,1
  1247  0C2B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1248  0C2C  2C29               	goto	clrloop0	;have we reached the end yet?
  1249  0C2D  3400               	retlw	0	;all done for this memory range, return
  1250                           
  1251                           	psect	cstackBANK1
  1252  00DB                     __pcstackBANK1:	
  1253  00DB                     vfprintf@fp:	
  1254                           
  1255                           ; 1 bytes @ 0x0
  1256  00DB                     	ds	1
  1257  00DC                     vfprintf@cfmt:	
  1258                           
  1259                           ; 2 bytes @ 0x1
  1260  00DC                     	ds	2
  1261  00DE                     ?_printf:	
  1262  00DE                     printf@fmt:	
  1263                           ; 2 bytes @ 0x3
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x3
  1267  00DE                     	ds	6
  1268  00E4                     printf@ap:	
  1269                           
  1270                           ; 1 bytes @ 0x9
  1271  00E4                     	ds	1
  1272  00E5                     ??_enviar_trama:	
  1273                           
  1274                           ; 1 bytes @ 0xA
  1275  00E5                     	ds	3
  1276  00E8                     enviar_trama@puntero:	
  1277                           
  1278                           ; 1 bytes @ 0xD
  1279  00E8                     	ds	1
  1280  00E9                     enviar_trama@data:	
  1281                           
  1282                           ; 1 bytes @ 0xE
  1283  00E9                     	ds	1
  1284  00EA                     enviar_trama@i:	
  1285                           
  1286                           ; 1 bytes @ 0xF
  1287  00EA                     	ds	1
  1288  00EB                     ??_main:	
  1289                           
  1290                           ; 1 bytes @ 0x10
  1291  00EB                     	ds	4
  1292                           
  1293                           	psect	cstackCOMMON
  1294  0070                     __pcstackCOMMON:	
  1295  0070                     ?_EUSART_SetFramingErrorHandler:	
  1296  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_EUSART_SetErrorHandler:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_SYSTEM_Initialize:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_PIN_MANAGER_Initialize:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ??_PIN_MANAGER_Initialize:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_OSCILLATOR_Initialize:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ??_OSCILLATOR_Initialize:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_WDT_Initialize:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ??_WDT_Initialize:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_ADC_Initialize:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ??_ADC_Initialize:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ?_EUSART_Initialize:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?_EUSART_Write:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ??_EUSART_Write:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ?_putch:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_checksum:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ?_main:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_strlen:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_isupper:	
  1351                           ; 2 bytes @ 0x0
  1352                           
  1353  0070                     ?_isalpha:	
  1354                           ; 2 bytes @ 0x0
  1355                           
  1356  0070                     ?_isdigit:	
  1357                           ; 2 bytes @ 0x0
  1358                           
  1359  0070                     ?__Umul8_16:	
  1360                           ; 2 bytes @ 0x0
  1361                           
  1362  0070                     ?_isspace:	
  1363                           ; 2 bytes @ 0x0
  1364                           
  1365  0070                     ?_islower:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368  0070                     ?_ADC_GetConversion:	
  1369                           ; 2 bytes @ 0x0
  1370                           
  1371  0070                     ?___wmul:	
  1372                           ; 2 bytes @ 0x0
  1373                           
  1374  0070                     EUSART_Write@txData:	
  1375                           ; 2 bytes @ 0x0
  1376                           
  1377  0070                     checksum@size_trama:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     __Umul8_16@multiplicand:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1390                           ; 2 bytes @ 0x0
  1391                           
  1392  0070                     ___wmul@multiplier:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395  0070                     isalpha@c:	
  1396                           ; 2 bytes @ 0x0
  1397                           
  1398  0070                     isdigit@c:	
  1399                           ; 2 bytes @ 0x0
  1400                           
  1401  0070                     isspace@c:	
  1402                           ; 2 bytes @ 0x0
  1403                           
  1404  0070                     isupper@c:	
  1405                           ; 2 bytes @ 0x0
  1406                           
  1407  0070                     islower@c:	
  1408                           ; 2 bytes @ 0x0
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x0
  1412  0070                     	ds	1
  1413  0071                     ??_putch:	
  1414  0071                     ??_checksum:	
  1415                           ; 1 bytes @ 0x1
  1416                           
  1417  0071                     putch@txData:	
  1418                           ; 1 bytes @ 0x1
  1419                           
  1420                           
  1421                           ; 1 bytes @ 0x1
  1422  0071                     	ds	1
  1423  0072                     ??_EUSART_SetFramingErrorHandler:	
  1424  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1425                           ; 1 bytes @ 0x2
  1426                           
  1427  0072                     ??_EUSART_SetErrorHandler:	
  1428                           ; 1 bytes @ 0x2
  1429                           
  1430  0072                     ??_SYSTEM_Initialize:	
  1431                           ; 1 bytes @ 0x2
  1432                           
  1433  0072                     ??_strlen:	
  1434                           ; 1 bytes @ 0x2
  1435                           
  1436  0072                     ??_isupper:	
  1437                           ; 1 bytes @ 0x2
  1438                           
  1439  0072                     ??_isalpha:	
  1440                           ; 1 bytes @ 0x2
  1441                           
  1442  0072                     ??_isdigit:	
  1443                           ; 1 bytes @ 0x2
  1444                           
  1445  0072                     ??__Umul8_16:	
  1446                           ; 1 bytes @ 0x2
  1447                           
  1448  0072                     ??_isspace:	
  1449                           ; 1 bytes @ 0x2
  1450                           
  1451  0072                     ??_islower:	
  1452                           ; 1 bytes @ 0x2
  1453                           
  1454  0072                     ??_ADC_GetConversion:	
  1455                           ; 1 bytes @ 0x2
  1456                           
  1457  0072                     ??_EUSART_Initialize:	
  1458                           ; 1 bytes @ 0x2
  1459                           
  1460  0072                     ?_fputc:	
  1461                           ; 1 bytes @ 0x2
  1462                           
  1463  0072                     ___wmul@multiplicand:	
  1464                           ; 2 bytes @ 0x2
  1465                           
  1466  0072                     fputc@c:	
  1467                           ; 2 bytes @ 0x2
  1468                           
  1469                           
  1470                           ; 2 bytes @ 0x2
  1471  0072                     	ds	1
  1472  0073                     ADC_GetConversion@channel:	
  1473  0073                     checksum@data:	
  1474                           ; 1 bytes @ 0x3
  1475                           
  1476  0073                     strlen@a:	
  1477                           ; 1 bytes @ 0x3
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0x3
  1481  0073                     	ds	1
  1482  0074                     ??___wmul:	
  1483  0074                     ?___xxtofl:	
  1484                           ; 1 bytes @ 0x4
  1485                           
  1486  0074                     checksum@puntero:	
  1487                           ; 4 bytes @ 0x4
  1488                           
  1489  0074                     _isspace$1003:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492  0074                     fputc@fp:	
  1493                           ; 1 bytes @ 0x4
  1494                           
  1495  0074                     strlen@s:	
  1496                           ; 1 bytes @ 0x4
  1497                           
  1498  0074                     ___wmul@product:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501  0074                     __Umul8_16@product:	
  1502                           ; 2 bytes @ 0x4
  1503                           
  1504  0074                     ___xxtofl@val:	
  1505                           ; 2 bytes @ 0x4
  1506                           
  1507                           
  1508                           ; 4 bytes @ 0x4
  1509  0074                     	ds	1
  1510  0075                     ??_fputc:	
  1511  0075                     checksum@i:	
  1512                           ; 1 bytes @ 0x5
  1513                           
  1514                           
  1515                           ; 1 bytes @ 0x5
  1516  0075                     	ds	1
  1517  0076                     ?_toupper:	
  1518  0076                     ?_atoi:	
  1519                           ; 2 bytes @ 0x6
  1520                           
  1521  0076                     checksum@contador:	
  1522                           ; 2 bytes @ 0x6
  1523                           
  1524  0076                     atoi@s:	
  1525                           ; 1 bytes @ 0x6
  1526                           
  1527  0076                     toupper@c:	
  1528                           ; 2 bytes @ 0x6
  1529                           
  1530  0076                     __Umul8_16@word_mpld:	
  1531                           ; 2 bytes @ 0x6
  1532                           
  1533                           
  1534                           ; 2 bytes @ 0x6
  1535  0076                     	ds	2
  1536  0078                     ??_toupper:	
  1537  0078                     ??_atoi:	
  1538                           ; 1 bytes @ 0x8
  1539                           
  1540  0078                     ??___xxtofl:	
  1541                           ; 1 bytes @ 0x8
  1542                           
  1543  0078                     __Umul8_16@multiplier:	
  1544                           ; 1 bytes @ 0x8
  1545                           
  1546                           
  1547                           ; 1 bytes @ 0x8
  1548  0078                     	ds	2
  1549  007A                     ?_fputs:	
  1550  007A                     fputs@fp:	
  1551                           ; 2 bytes @ 0xA
  1552                           
  1553                           
  1554                           ; 1 bytes @ 0xA
  1555  007A                     	ds	1
  1556  007B                     ??_fputs:	
  1557                           
  1558                           ; 1 bytes @ 0xB
  1559  007B                     	ds	1
  1560  007C                     _toupper$1068:	
  1561                           
  1562                           ; 2 bytes @ 0xC
  1563  007C                     	ds	2
  1564                           
  1565                           	psect	cstackBANK0
  1566  0020                     __pcstackBANK0:	
  1567  0020                     ___xxtofl@sign:	
  1568  0020                     fputs@c:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0020                     atoi@neg:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574                           
  1575                           ; 2 bytes @ 0x0
  1576  0020                     	ds	1
  1577  0021                     ___xxtofl@exp:	
  1578  0021                     fputs@i:	
  1579                           ; 1 bytes @ 0x1
  1580                           
  1581                           
  1582                           ; 2 bytes @ 0x1
  1583  0021                     	ds	1
  1584  0022                     _atoi$976:	
  1585  0022                     ___xxtofl@arg:	
  1586                           ; 2 bytes @ 0x2
  1587                           
  1588                           
  1589                           ; 4 bytes @ 0x2
  1590  0022                     	ds	1
  1591  0023                     fputs@s:	
  1592                           
  1593                           ; 1 bytes @ 0x3
  1594  0023                     	ds	1
  1595  0024                     ?_pad:	
  1596  0024                     pad@buf:	
  1597                           ; 2 bytes @ 0x4
  1598                           
  1599  0024                     _atoi$978:	
  1600                           ; 1 bytes @ 0x4
  1601                           
  1602                           
  1603                           ; 2 bytes @ 0x4
  1604  0024                     	ds	1
  1605  0025                     pad@p:	
  1606                           
  1607                           ; 2 bytes @ 0x5
  1608  0025                     	ds	1
  1609  0026                     ?___fldiv:	
  1610  0026                     _atoi$977:	
  1611                           ; 4 bytes @ 0x6
  1612                           
  1613  0026                     ___fldiv@a:	
  1614                           ; 1 bytes @ 0x6
  1615                           
  1616                           
  1617                           ; 4 bytes @ 0x6
  1618  0026                     	ds	1
  1619  0027                     ??_pad:	
  1620  0027                     atoi@n:	
  1621                           ; 1 bytes @ 0x7
  1622                           
  1623                           
  1624                           ; 2 bytes @ 0x7
  1625  0027                     	ds	1
  1626  0028                     pad@i:	
  1627                           
  1628                           ; 2 bytes @ 0x8
  1629  0028                     	ds	2
  1630  002A                     pad@w:	
  1631  002A                     ___fldiv@b:	
  1632                           ; 2 bytes @ 0xA
  1633                           
  1634                           
  1635                           ; 4 bytes @ 0xA
  1636  002A                     	ds	2
  1637  002C                     pad@fp:	
  1638                           
  1639                           ; 1 bytes @ 0xC
  1640  002C                     	ds	1
  1641  002D                     ?_xtoa:	
  1642  002D                     xtoa@d:	
  1643                           ; 2 bytes @ 0xD
  1644                           
  1645                           
  1646                           ; 8 bytes @ 0xD
  1647  002D                     	ds	1
  1648  002E                     ??___fldiv:	
  1649                           
  1650                           ; 1 bytes @ 0xE
  1651  002E                     	ds	5
  1652  0033                     ___fldiv@rem:	
  1653                           
  1654                           ; 4 bytes @ 0x13
  1655  0033                     	ds	2
  1656  0035                     xtoa@x:	
  1657                           
  1658                           ; 1 bytes @ 0x15
  1659  0035                     	ds	1
  1660  0036                     ??_xtoa:	
  1661                           
  1662                           ; 1 bytes @ 0x16
  1663  0036                     	ds	1
  1664  0037                     ___fldiv@sign:	
  1665                           
  1666                           ; 1 bytes @ 0x17
  1667  0037                     	ds	1
  1668  0038                     ___fldiv@new_exp:	
  1669                           
  1670                           ; 2 bytes @ 0x18
  1671  0038                     	ds	2
  1672  003A                     ___fldiv@grs:	
  1673                           
  1674                           ; 4 bytes @ 0x1A
  1675  003A                     	ds	4
  1676  003E                     ___fldiv@bexp:	
  1677  003E                     _xtoa$667:	
  1678                           ; 1 bytes @ 0x1E
  1679                           
  1680                           
  1681                           ; 2 bytes @ 0x1E
  1682  003E                     	ds	1
  1683  003F                     ___fldiv@aexp:	
  1684                           
  1685                           ; 1 bytes @ 0x1F
  1686  003F                     	ds	1
  1687  0040                     ?___flmul:	
  1688  0040                     _xtoa$668:	
  1689                           ; 4 bytes @ 0x20
  1690                           
  1691  0040                     ___flmul@b:	
  1692                           ; 2 bytes @ 0x20
  1693                           
  1694                           
  1695                           ; 4 bytes @ 0x20
  1696  0040                     	ds	2
  1697  0042                     xtoa@p:	
  1698                           
  1699                           ; 2 bytes @ 0x22
  1700  0042                     	ds	2
  1701  0044                     xtoa@fp:	
  1702  0044                     ___flmul@a:	
  1703                           ; 1 bytes @ 0x24
  1704                           
  1705                           
  1706                           ; 4 bytes @ 0x24
  1707  0044                     	ds	1
  1708  0045                     xtoa@w:	
  1709                           
  1710                           ; 2 bytes @ 0x25
  1711  0045                     	ds	2
  1712  0047                     xtoa@n:	
  1713                           
  1714                           ; 8 bytes @ 0x27
  1715  0047                     	ds	1
  1716  0048                     ??___flmul:	
  1717                           
  1718                           ; 1 bytes @ 0x28
  1719  0048                     	ds	5
  1720  004D                     ___flmul@sign:	
  1721                           
  1722                           ; 1 bytes @ 0x2D
  1723  004D                     	ds	1
  1724  004E                     ___flmul@grs:	
  1725                           
  1726                           ; 4 bytes @ 0x2E
  1727  004E                     	ds	1
  1728  004F                     xtoa@i:	
  1729                           
  1730                           ; 2 bytes @ 0x2F
  1731  004F                     	ds	2
  1732  0051                     xtoa@c:	
  1733                           
  1734                           ; 2 bytes @ 0x31
  1735  0051                     	ds	1
  1736  0052                     ___flmul@aexp:	
  1737                           
  1738                           ; 1 bytes @ 0x32
  1739  0052                     	ds	1
  1740  0053                     ?_vfpfcnvrt:	
  1741  0053                     vfpfcnvrt@fmt:	
  1742                           ; 2 bytes @ 0x33
  1743                           
  1744  0053                     ___flmul@bexp:	
  1745                           ; 1 bytes @ 0x33
  1746                           
  1747                           
  1748                           ; 1 bytes @ 0x33
  1749  0053                     	ds	1
  1750  0054                     vfpfcnvrt@ap:	
  1751  0054                     ___flmul@prod:	
  1752                           ; 1 bytes @ 0x34
  1753                           
  1754                           
  1755                           ; 4 bytes @ 0x34
  1756  0054                     	ds	1
  1757  0055                     ??_vfpfcnvrt:	
  1758                           
  1759                           ; 1 bytes @ 0x35
  1760  0055                     	ds	3
  1761  0058                     ___flmul@temp:	
  1762                           
  1763                           ; 2 bytes @ 0x38
  1764  0058                     	ds	3
  1765  005B                     vfpfcnvrt@llu:	
  1766                           
  1767                           ; 8 bytes @ 0x3B
  1768  005B                     	ds	8
  1769  0063                     vfpfcnvrt@done:	
  1770                           
  1771                           ; 2 bytes @ 0x43
  1772  0063                     	ds	2
  1773  0065                     _vfpfcnvrt$683:	
  1774                           
  1775                           ; 2 bytes @ 0x45
  1776  0065                     	ds	2
  1777  0067                     vfpfcnvrt@c:	
  1778                           
  1779                           ; 1 bytes @ 0x47
  1780  0067                     	ds	1
  1781  0068                     vfpfcnvrt@fp:	
  1782                           
  1783                           ; 1 bytes @ 0x48
  1784  0068                     	ds	1
  1785  0069                     ?_vfprintf:	
  1786  0069                     vfprintf@fmt:	
  1787                           ; 2 bytes @ 0x49
  1788                           
  1789                           
  1790                           ; 2 bytes @ 0x49
  1791  0069                     	ds	2
  1792  006B                     vfprintf@ap:	
  1793                           
  1794                           ; 1 bytes @ 0x4B
  1795  006B                     	ds	1
  1796  006C                     ??_vfprintf:	
  1797                           
  1798                           ; 1 bytes @ 0x4C
  1799  006C                     	ds	2
  1800  006E                     ??_printf:	
  1801                           
  1802                           ; 1 bytes @ 0x4E
  1803  006E                     	ds	1
  1804  006F                     ?_enviar_trama:	
  1805  006F                     enviar_trama@size_trama:	
  1806                           ; 1 bytes @ 0x4F
  1807                           
  1808                           
  1809                           ; 1 bytes @ 0x4F
  1810  006F                     	ds	1
  1811                           
  1812                           	psect	maintext
  1813  0023                     __pmaintext:	
  1814 ;;
  1815 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1816 ;;
  1817 ;; *************** function _main *****************
  1818 ;; Defined at:
  1819 ;;		line 40 in file "main.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : B1F/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1833 ;;      Params:         0       0       0       0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       4       0       0       0       0       0
  1836 ;;      Totals:         0       0       4       0       0       0       0       0
  1837 ;;Total ram usage:        4 bytes
  1838 ;; Hardware stack levels required when called:   10
  1839 ;; This function calls:
  1840 ;;		_ADC_GetConversion
  1841 ;;		_ADC_Initialize
  1842 ;;		_SYSTEM_Initialize
  1843 ;;		___fldiv
  1844 ;;		___flmul
  1845 ;;		___xxtofl
  1846 ;;		_checksum
  1847 ;;		_enviar_trama
  1848 ;; This function is called by:
  1849 ;;		Startup code after reset
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _main
  1855  0023                     _main:	
  1856                           
  1857                           ;main.c: 42:     SYSTEM_Initialize();
  1858                           
  1859                           ;incstack = 0
  1860                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1861  0023  318C  2445  3180   	fcall	_SYSTEM_Initialize
  1862  0026                     l161:	
  1863                           ;main.c: 44:     while (1) {
  1864                           
  1865                           
  1866                           ;main.c: 45:         ADC_Initialize();
  1867  0026  318C  2435  3180   	fcall	_ADC_Initialize
  1868                           
  1869                           ;main.c: 46:         trama2.header = 0XFEEF;
  1870  0029  30EF               	movlw	239
  1871  002A  0021               	movlb	1	; select bank1
  1872  002B  00CA               	movwf	_trama2^(0+128)
  1873  002C  30FE               	movlw	254
  1874  002D  00CB               	movwf	(_trama2^(0+128)+1)
  1875                           
  1876                           ;main.c: 47:         trama2.state = 0X41;
  1877  002E  3041               	movlw	65
  1878  002F  00EB               	movwf	??_main^(0+128)
  1879  0030  086B               	movf	??_main^(0+128),w
  1880  0031  00CC               	movwf	(_trama2^(0+128)+2)
  1881                           
  1882                           ;main.c: 48:         trama2.voltaje1 = (ADC_GetConversion(channel_AN0)/ 1023.0)*5000.0;
  1883  0032  3045               	movlw	69
  1884  0033  0020               	movlb	0	; select bank0
  1885  0034  00C3               	movwf	___flmul@b+3
  1886  0035  309C               	movlw	156
  1887  0036  00C2               	movwf	___flmul@b+2
  1888  0037  3040               	movlw	64
  1889  0038  00C1               	movwf	___flmul@b+1
  1890  0039  3000               	movlw	0
  1891  003A  00C0               	movwf	___flmul@b
  1892  003B  3044               	movlw	68
  1893  003C  00A9               	movwf	___fldiv@a+3
  1894  003D  307F               	movlw	127
  1895  003E  00A8               	movwf	___fldiv@a+2
  1896  003F  30C0               	movlw	192
  1897  0040  00A7               	movwf	___fldiv@a+1
  1898  0041  3000               	movlw	0
  1899  0042  00A6               	movwf	___fldiv@a
  1900  0043  3000               	movlw	0
  1901  0044  318C  24C5  3180   	fcall	_ADC_GetConversion
  1902  0047  0870               	movf	?_ADC_GetConversion,w
  1903  0048  0021               	movlb	1	; select bank1
  1904  0049  00EB               	movwf	??_main^(0+128)
  1905  004A  0871               	movf	?_ADC_GetConversion+1,w
  1906  004B  00EC               	movwf	(??_main^(0+128)+1)
  1907  004C  01ED               	clrf	(??_main^(0+128)+2)
  1908  004D  01EE               	clrf	(??_main^(0+128)+3)
  1909  004E  086E               	movf	(??_main+3)^(0+128),w
  1910  004F  00F7               	movwf	___xxtofl@val+3
  1911  0050  086D               	movf	(??_main+2)^(0+128),w
  1912  0051  00F6               	movwf	___xxtofl@val+2
  1913  0052  086C               	movf	(??_main+1)^(0+128),w
  1914  0053  00F5               	movwf	___xxtofl@val+1
  1915  0054  086B               	movf	??_main^(0+128),w
  1916  0055  00F4               	movwf	___xxtofl@val
  1917  0056  3000               	movlw	0
  1918  0057  318E  26C9  3180   	fcall	___xxtofl
  1919  005A  0877               	movf	?___xxtofl+3,w
  1920  005B  0020               	movlb	0	; select bank0
  1921  005C  00AD               	movwf	___fldiv@b+3
  1922  005D  0876               	movf	?___xxtofl+2,w
  1923  005E  00AC               	movwf	___fldiv@b+2
  1924  005F  0875               	movf	?___xxtofl+1,w
  1925  0060  00AB               	movwf	___fldiv@b+1
  1926  0061  0874               	movf	?___xxtofl,w
  1927  0062  00AA               	movwf	___fldiv@b
  1928  0063  3182  22B7  3180   	fcall	___fldiv
  1929  0066  0020               	movlb	0	; select bank0
  1930  0067  0829               	movf	?___fldiv+3,w
  1931  0068  00C7               	movwf	___flmul@a+3
  1932  0069  0828               	movf	?___fldiv+2,w
  1933  006A  00C6               	movwf	___flmul@a+2
  1934  006B  0827               	movf	?___fldiv+1,w
  1935  006C  00C5               	movwf	___flmul@a+1
  1936  006D  0826               	movf	?___fldiv,w
  1937  006E  00C4               	movwf	___flmul@a
  1938  006F  3185  25CA  3180   	fcall	___flmul
  1939  0072  0020               	movlb	0	; select bank0
  1940  0073  0843               	movf	?___flmul+3,w
  1941  0074  0021               	movlb	1	; select bank1
  1942  0075  00D0               	movwf	((_trama2+3)^(0+128)+3)
  1943  0076  0020               	movlb	0	; select bank0
  1944  0077  0842               	movf	?___flmul+2,w
  1945  0078  0021               	movlb	1	; select bank1
  1946  0079  00CF               	movwf	((_trama2+2)^(0+128)+3)
  1947  007A  0020               	movlb	0	; select bank0
  1948  007B  0841               	movf	?___flmul+1,w
  1949  007C  0021               	movlb	1	; select bank1
  1950  007D  00CE               	movwf	((_trama2+1)^(0+128)+3)
  1951  007E  0020               	movlb	0	; select bank0
  1952  007F  0840               	movf	?___flmul,w
  1953  0080  0021               	movlb	1	; select bank1
  1954  0081  00CD               	movwf	(_trama2^(0+128)+3)
  1955                           
  1956                           ;main.c: 49:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1957  0082  3041               	movlw	65
  1958  0083  0021               	movlb	1	; select bank1
  1959  0084  00EB               	movwf	??_main^(0+128)
  1960  0085  30EE               	movlw	238
  1961  0086                     u2857:	
  1962  0086  0B89               	decfsz	9,f
  1963  0087  2886               	goto	u2857
  1964  0088  0BEB               	decfsz	??_main^(0+128),f
  1965  0089  2886               	goto	u2857
  1966  008A  0000               	nop
  1967                           
  1968                           ;main.c: 50:         trama2.voltaje2 = (ADC_GetConversion(channel_AN1)/ 1023.0)*5.0;
  1969  008B  3040               	movlw	64
  1970  008C  0020               	movlb	0	; select bank0
  1971  008D  00C3               	movwf	___flmul@b+3
  1972  008E  30A0               	movlw	160
  1973  008F  00C2               	movwf	___flmul@b+2
  1974  0090  3000               	movlw	0
  1975  0091  00C1               	movwf	___flmul@b+1
  1976  0092  3000               	movlw	0
  1977  0093  00C0               	movwf	___flmul@b
  1978  0094  3044               	movlw	68
  1979  0095  00A9               	movwf	___fldiv@a+3
  1980  0096  307F               	movlw	127
  1981  0097  00A8               	movwf	___fldiv@a+2
  1982  0098  30C0               	movlw	192
  1983  0099  00A7               	movwf	___fldiv@a+1
  1984  009A  3000               	movlw	0
  1985  009B  00A6               	movwf	___fldiv@a
  1986  009C  3001               	movlw	1
  1987  009D  318C  24C5  3180   	fcall	_ADC_GetConversion
  1988  00A0  0870               	movf	?_ADC_GetConversion,w
  1989  00A1  0021               	movlb	1	; select bank1
  1990  00A2  00EB               	movwf	??_main^(0+128)
  1991  00A3  0871               	movf	?_ADC_GetConversion+1,w
  1992  00A4  00EC               	movwf	(??_main^(0+128)+1)
  1993  00A5  01ED               	clrf	(??_main^(0+128)+2)
  1994  00A6  01EE               	clrf	(??_main^(0+128)+3)
  1995  00A7  086E               	movf	(??_main+3)^(0+128),w
  1996  00A8  00F7               	movwf	___xxtofl@val+3
  1997  00A9  086D               	movf	(??_main+2)^(0+128),w
  1998  00AA  00F6               	movwf	___xxtofl@val+2
  1999  00AB  086C               	movf	(??_main+1)^(0+128),w
  2000  00AC  00F5               	movwf	___xxtofl@val+1
  2001  00AD  086B               	movf	??_main^(0+128),w
  2002  00AE  00F4               	movwf	___xxtofl@val
  2003  00AF  3000               	movlw	0
  2004  00B0  318E  26C9  3180   	fcall	___xxtofl
  2005  00B3  0877               	movf	?___xxtofl+3,w
  2006  00B4  0020               	movlb	0	; select bank0
  2007  00B5  00AD               	movwf	___fldiv@b+3
  2008  00B6  0876               	movf	?___xxtofl+2,w
  2009  00B7  00AC               	movwf	___fldiv@b+2
  2010  00B8  0875               	movf	?___xxtofl+1,w
  2011  00B9  00AB               	movwf	___fldiv@b+1
  2012  00BA  0874               	movf	?___xxtofl,w
  2013  00BB  00AA               	movwf	___fldiv@b
  2014  00BC  3182  22B7  3180   	fcall	___fldiv
  2015  00BF  0020               	movlb	0	; select bank0
  2016  00C0  0829               	movf	?___fldiv+3,w
  2017  00C1  00C7               	movwf	___flmul@a+3
  2018  00C2  0828               	movf	?___fldiv+2,w
  2019  00C3  00C6               	movwf	___flmul@a+2
  2020  00C4  0827               	movf	?___fldiv+1,w
  2021  00C5  00C5               	movwf	___flmul@a+1
  2022  00C6  0826               	movf	?___fldiv,w
  2023  00C7  00C4               	movwf	___flmul@a
  2024  00C8  3185  25CA  3180   	fcall	___flmul
  2025  00CB  0020               	movlb	0	; select bank0
  2026  00CC  0843               	movf	?___flmul+3,w
  2027  00CD  0021               	movlb	1	; select bank1
  2028  00CE  00D4               	movwf	((_trama2+3)^(0+128)+7)
  2029  00CF  0020               	movlb	0	; select bank0
  2030  00D0  0842               	movf	?___flmul+2,w
  2031  00D1  0021               	movlb	1	; select bank1
  2032  00D2  00D3               	movwf	((_trama2+2)^(0+128)+7)
  2033  00D3  0020               	movlb	0	; select bank0
  2034  00D4  0841               	movf	?___flmul+1,w
  2035  00D5  0021               	movlb	1	; select bank1
  2036  00D6  00D2               	movwf	((_trama2+1)^(0+128)+7)
  2037  00D7  0020               	movlb	0	; select bank0
  2038  00D8  0840               	movf	?___flmul,w
  2039  00D9  0021               	movlb	1	; select bank1
  2040  00DA  00D1               	movwf	(_trama2^(0+128)+7)
  2041                           
  2042                           ;main.c: 51:         _delay((unsigned long)((10)*(20000000/4000.0)));
  2043  00DB  3041               	movlw	65
  2044  00DC  0021               	movlb	1	; select bank1
  2045  00DD  00EB               	movwf	??_main^(0+128)
  2046  00DE  30EE               	movlw	238
  2047  00DF                     u2867:	
  2048  00DF  0B89               	decfsz	9,f
  2049  00E0  28DF               	goto	u2867
  2050  00E1  0BEB               	decfsz	??_main^(0+128),f
  2051  00E2  28DF               	goto	u2867
  2052  00E3  0000               	nop
  2053                           
  2054                           ;main.c: 52:         trama2.voltaje3 = (ADC_GetConversion(channel_AN2)/ 1023.0)*5.0;
  2055  00E4  3040               	movlw	64
  2056  00E5  0020               	movlb	0	; select bank0
  2057  00E6  00C3               	movwf	___flmul@b+3
  2058  00E7  30A0               	movlw	160
  2059  00E8  00C2               	movwf	___flmul@b+2
  2060  00E9  3000               	movlw	0
  2061  00EA  00C1               	movwf	___flmul@b+1
  2062  00EB  3000               	movlw	0
  2063  00EC  00C0               	movwf	___flmul@b
  2064  00ED  3044               	movlw	68
  2065  00EE  00A9               	movwf	___fldiv@a+3
  2066  00EF  307F               	movlw	127
  2067  00F0  00A8               	movwf	___fldiv@a+2
  2068  00F1  30C0               	movlw	192
  2069  00F2  00A7               	movwf	___fldiv@a+1
  2070  00F3  3000               	movlw	0
  2071  00F4  00A6               	movwf	___fldiv@a
  2072  00F5  3002               	movlw	2
  2073  00F6  318C  24C5  3180   	fcall	_ADC_GetConversion
  2074  00F9  0870               	movf	?_ADC_GetConversion,w
  2075  00FA  0021               	movlb	1	; select bank1
  2076  00FB  00EB               	movwf	??_main^(0+128)
  2077  00FC  0871               	movf	?_ADC_GetConversion+1,w
  2078  00FD  00EC               	movwf	(??_main^(0+128)+1)
  2079  00FE  01ED               	clrf	(??_main^(0+128)+2)
  2080  00FF  01EE               	clrf	(??_main^(0+128)+3)
  2081  0100  086E               	movf	(??_main+3)^(0+128),w
  2082  0101  00F7               	movwf	___xxtofl@val+3
  2083  0102  086D               	movf	(??_main+2)^(0+128),w
  2084  0103  00F6               	movwf	___xxtofl@val+2
  2085  0104  086C               	movf	(??_main+1)^(0+128),w
  2086  0105  00F5               	movwf	___xxtofl@val+1
  2087  0106  086B               	movf	??_main^(0+128),w
  2088  0107  00F4               	movwf	___xxtofl@val
  2089  0108  3000               	movlw	0
  2090  0109  318E  26C9  3180   	fcall	___xxtofl
  2091  010C  0877               	movf	?___xxtofl+3,w
  2092  010D  0020               	movlb	0	; select bank0
  2093  010E  00AD               	movwf	___fldiv@b+3
  2094  010F  0876               	movf	?___xxtofl+2,w
  2095  0110  00AC               	movwf	___fldiv@b+2
  2096  0111  0875               	movf	?___xxtofl+1,w
  2097  0112  00AB               	movwf	___fldiv@b+1
  2098  0113  0874               	movf	?___xxtofl,w
  2099  0114  00AA               	movwf	___fldiv@b
  2100  0115  3182  22B7  3180   	fcall	___fldiv
  2101  0118  0020               	movlb	0	; select bank0
  2102  0119  0829               	movf	?___fldiv+3,w
  2103  011A  00C7               	movwf	___flmul@a+3
  2104  011B  0828               	movf	?___fldiv+2,w
  2105  011C  00C6               	movwf	___flmul@a+2
  2106  011D  0827               	movf	?___fldiv+1,w
  2107  011E  00C5               	movwf	___flmul@a+1
  2108  011F  0826               	movf	?___fldiv,w
  2109  0120  00C4               	movwf	___flmul@a
  2110  0121  3185  25CA  3180   	fcall	___flmul
  2111  0124  0020               	movlb	0	; select bank0
  2112  0125  0843               	movf	?___flmul+3,w
  2113  0126  0021               	movlb	1	; select bank1
  2114  0127  00D8               	movwf	((_trama2+3)^(0+128)+11)
  2115  0128  0020               	movlb	0	; select bank0
  2116  0129  0842               	movf	?___flmul+2,w
  2117  012A  0021               	movlb	1	; select bank1
  2118  012B  00D7               	movwf	((_trama2+2)^(0+128)+11)
  2119  012C  0020               	movlb	0	; select bank0
  2120  012D  0841               	movf	?___flmul+1,w
  2121  012E  0021               	movlb	1	; select bank1
  2122  012F  00D6               	movwf	((_trama2+1)^(0+128)+11)
  2123  0130  0020               	movlb	0	; select bank0
  2124  0131  0840               	movf	?___flmul,w
  2125  0132  0021               	movlb	1	; select bank1
  2126  0133  00D5               	movwf	(_trama2^(0+128)+11)
  2127                           
  2128                           ;main.c: 53:         _delay((unsigned long)((10)*(20000000/4000.0)));
  2129  0134  3041               	movlw	65
  2130  0135  0021               	movlb	1	; select bank1
  2131  0136  00EB               	movwf	??_main^(0+128)
  2132  0137  30EE               	movlw	238
  2133  0138                     u2877:	
  2134  0138  0B89               	decfsz	9,f
  2135  0139  2938               	goto	u2877
  2136  013A  0BEB               	decfsz	??_main^(0+128),f
  2137  013B  2938               	goto	u2877
  2138  013C  0000               	nop
  2139                           
  2140                           ;main.c: 54:         trama2.otros = 0.0;
  2141  013D  0021               	movlb	1	; select bank1
  2142  013E  01D9               	clrf	(_trama2^(0+128)+15)
  2143                           
  2144                           ;main.c: 55:         trama2.cheksum = checksum(&trama2.state, sizeof (trama2) - 3);
  2145  013F  300E               	movlw	14
  2146  0140  00EB               	movwf	??_main^(0+128)
  2147  0141  086B               	movf	??_main^(0+128),w
  2148  0142  00F0               	movwf	checksum@size_trama
  2149  0143  30CC               	movlw	(low ((_trama2| 0+2)))& (0+255)
  2150  0144  318D  25E3  3180   	fcall	_checksum
  2151  0147  0021               	movlb	1	; select bank1
  2152  0148  00EC               	movwf	(??_main+1)^(0+128)
  2153  0149  086C               	movf	(??_main+1)^(0+128),w
  2154  014A  00DA               	movwf	(_trama2^(0+128)+16)
  2155                           
  2156                           ;main.c: 56:         enviar_trama(&trama2, sizeof (trama2));
  2157  014B  3011               	movlw	17
  2158  014C  00EB               	movwf	??_main^(0+128)
  2159  014D  086B               	movf	??_main^(0+128),w
  2160  014E  0020               	movlb	0	; select bank0
  2161  014F  00EF               	movwf	enviar_trama@size_trama
  2162  0150  30CA               	movlw	(low (_trama2| 0))& (0+255)
  2163  0151  318D  25BC  3180   	fcall	_enviar_trama
  2164                           
  2165                           ;main.c: 57:         _delay((unsigned long)((100)*(20000000/4000.0)));
  2166  0154  3003               	movlw	3
  2167  0155  0021               	movlb	1	; select bank1
  2168  0156  00EC               	movwf	(??_main^(0+128)+1)
  2169  0157  308A               	movlw	138
  2170  0158  00EB               	movwf	??_main^(0+128)
  2171  0159  3055               	movlw	85
  2172  015A                     u2887:	
  2173  015A  0B89               	decfsz	9,f
  2174  015B  295A               	goto	u2887
  2175  015C  0BEB               	decfsz	??_main^(0+128),f
  2176  015D  295A               	goto	u2887
  2177  015E  0BEC               	decfsz	(??_main^(0+128)+1),f
  2178  015F  295A               	goto	u2887
  2179  0160  3200               	nop2
  2180  0161  2826               	goto	l161
  2181  0162                     __end_of_main:	
  2182                           
  2183                           	psect	text1
  2184  0DBC                     __ptext1:	
  2185 ;; *************** function _enviar_trama *****************
  2186 ;; Defined at:
  2187 ;;		line 29 in file "main.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  data            1    wreg     PTR void 
  2190 ;;		 -> trama2(17), 
  2191 ;;  size_trama      1   79[BANK0 ] unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  data            1   14[BANK1 ] PTR void 
  2194 ;;		 -> trama2(17), 
  2195 ;;  i               1   15[BANK1 ] unsigned char 
  2196 ;;  puntero         1   13[BANK1 ] PTR unsigned char 
  2197 ;;		 -> trama2(17), 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2207 ;;      Params:         0       1       0       0       0       0       0       0
  2208 ;;      Locals:         0       0       3       0       0       0       0       0
  2209 ;;      Temps:          0       0       3       0       0       0       0       0
  2210 ;;      Totals:         0       1       6       0       0       0       0       0
  2211 ;;Total ram usage:        7 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    9
  2214 ;; This function calls:
  2215 ;;		_printf
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function _enviar_trama
  2223  0DBC                     _enviar_trama:	
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _enviar_trama: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2227                           ;enviar_trama@data stored from wreg
  2228  0DBC  0021               	movlb	1	; select bank1
  2229  0DBD  00E9               	movwf	enviar_trama@data^(0+128)
  2230                           
  2231                           ;main.c: 30:     unsigned char* puntero = data;
  2232  0DBE  0869               	movf	enviar_trama@data^(0+128),w
  2233  0DBF  00E5               	movwf	??_enviar_trama^(0+128)
  2234  0DC0  0865               	movf	??_enviar_trama^(0+128),w
  2235  0DC1  00E8               	movwf	enviar_trama@puntero^(0+128)
  2236                           
  2237                           ;main.c: 31:     unsigned char i;;main.c: 32:     for (i = 0; i < size_trama; i++) {
  2238  0DC2  01EA               	clrf	enviar_trama@i^(0+128)
  2239  0DC3                     l2404:	
  2240  0DC3  0020               	movlb	0	; select bank0
  2241  0DC4  086F               	movf	enviar_trama@size_trama,w
  2242  0DC5  0021               	movlb	1	; select bank1
  2243  0DC6  026A               	subwf	enviar_trama@i^(0+128),w
  2244  0DC7  1803               	btfsc	3,0
  2245  0DC8  0008               	return
  2246                           
  2247                           ;main.c: 33:         printf("%02X", puntero[i]);
  2248  0DC9  3000               	movlw	low (STR_1| (0+32768))
  2249  0DCA  00DE               	movwf	printf@fmt^(0+128)
  2250  0DCB  3090               	movlw	high (STR_1| (0+32768))
  2251  0DCC  00DF               	movwf	(printf@fmt^(0+128)+1)
  2252  0DCD  086A               	movf	enviar_trama@i^(0+128),w
  2253  0DCE  0768               	addwf	enviar_trama@puntero^(0+128),w
  2254  0DCF  00E5               	movwf	??_enviar_trama^(0+128)
  2255  0DD0  0865               	movf	??_enviar_trama^(0+128),w
  2256  0DD1  0086               	movwf	6
  2257  0DD2  0187               	clrf	7
  2258  0DD3  0801               	movf	1,w
  2259  0DD4  00E6               	movwf	(??_enviar_trama+1)^(0+128)
  2260  0DD5  01E7               	clrf	((??_enviar_trama+1)^(0+128)+1)
  2261  0DD6  0866               	movf	(??_enviar_trama+1)^(0+128),w
  2262  0DD7  00E0               	movwf	(?_printf^(0+128)+2)
  2263  0DD8  0867               	movf	(??_enviar_trama+2)^(0+128),w
  2264  0DD9  00E1               	movwf	((?_printf+1)^(0+128)+2)
  2265  0DDA  318C  2454  318D   	fcall	_printf
  2266                           
  2267                           ;main.c: 35:     }
  2268  0DDD  3001               	movlw	1
  2269  0DDE  0021               	movlb	1	; select bank1
  2270  0DDF  00E5               	movwf	??_enviar_trama^(0+128)
  2271  0DE0  0865               	movf	??_enviar_trama^(0+128),w
  2272  0DE1  07EA               	addwf	enviar_trama@i^(0+128),f
  2273  0DE2  2DC3               	goto	l2404
  2274  0DE3                     __end_of_enviar_trama:	
  2275                           
  2276                           	psect	text2
  2277  0C54                     __ptext2:	
  2278 ;; *************** function _printf *****************
  2279 ;; Defined at:
  2280 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  2283 ;;		 -> STR_1(5), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  ret             2    0        int 
  2286 ;;  ap              1    9[BANK1 ] PTR void [1]
  2287 ;;		 -> ?_printf(2), 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  2    3[BANK1 ] int 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2297 ;;      Params:         0       0       4       0       0       0       0       0
  2298 ;;      Locals:         0       0       3       0       0       0       0       0
  2299 ;;      Temps:          0       1       0       0       0       0       0       0
  2300 ;;      Totals:         0       1       7       0       0       0       0       0
  2301 ;;Total ram usage:        8 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    8
  2304 ;; This function calls:
  2305 ;;		_vfprintf
  2306 ;; This function is called by:
  2307 ;;		_enviar_trama
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _printf
  2313  0C54                     _printf:	
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2317  0C54  30E0               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2318  0C55  0020               	movlb	0	; select bank0
  2319  0C56  00EE               	movwf	??_printf
  2320  0C57  086E               	movf	??_printf,w
  2321  0C58  0021               	movlb	1	; select bank1
  2322  0C59  00E4               	movwf	printf@ap^(0+128)
  2323  0C5A  085F               	movf	(printf@fmt+1)^(0+128),w
  2324  0C5B  0020               	movlb	0	; select bank0
  2325  0C5C  00EA               	movwf	vfprintf@fmt+1
  2326  0C5D  0021               	movlb	1	; select bank1
  2327  0C5E  085E               	movf	printf@fmt^(0+128),w
  2328  0C5F  0020               	movlb	0	; select bank0
  2329  0C60  00E9               	movwf	vfprintf@fmt
  2330  0C61  30E4               	movlw	(low (printf@ap| 0))& (0+255)
  2331  0C62  00EE               	movwf	??_printf
  2332  0C63  086E               	movf	??_printf,w
  2333  0C64  00EB               	movwf	vfprintf@ap
  2334  0C65  3000               	movlw	0
  2335  0C66  318E  2612         	fcall	_vfprintf
  2336  0C68  0008               	return
  2337  0C69                     __end_of_printf:	
  2338                           
  2339                           	psect	text3
  2340  0E12                     __ptext3:	
  2341 ;; *************** function _vfprintf *****************
  2342 ;; Defined at:
  2343 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  fp              1    wreg     PTR struct _IO_FILE
  2346 ;;		 -> NULL(0), 
  2347 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  2348 ;;		 -> STR_1(5), 
  2349 ;;  ap              1   75[BANK0 ] PTR PTR void 
  2350 ;;		 -> printf@ap(1), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
  2353 ;;		 -> NULL(0), 
  2354 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
  2355 ;;		 -> STR_1(5), 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2   73[BANK0 ] int 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2365 ;;      Params:         0       3       0       0       0       0       0       0
  2366 ;;      Locals:         0       0       3       0       0       0       0       0
  2367 ;;      Temps:          0       2       0       0       0       0       0       0
  2368 ;;      Totals:         0       5       3       0       0       0       0       0
  2369 ;;Total ram usage:        8 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    7
  2372 ;; This function calls:
  2373 ;;		_vfpfcnvrt
  2374 ;; This function is called by:
  2375 ;;		_printf
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _vfprintf
  2381  0E12                     _vfprintf:	
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2385                           ;vfprintf@fp stored from wreg
  2386  0E12  0021               	movlb	1	; select bank1
  2387  0E13  00DB               	movwf	vfprintf@fp^(0+128)
  2388                           
  2389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2390  0E14  0020               	movlb	0	; select bank0
  2391  0E15  086A               	movf	vfprintf@fmt+1,w
  2392  0E16  0021               	movlb	1	; select bank1
  2393  0E17  00DD               	movwf	(vfprintf@cfmt+1)^(0+128)
  2394  0E18  0020               	movlb	0	; select bank0
  2395  0E19  0869               	movf	vfprintf@fmt,w
  2396  0E1A  0021               	movlb	1	; select bank1
  2397  0E1B  00DC               	movwf	vfprintf@cfmt^(0+128)
  2398                           
  2399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2400  0E1C  01A0               	clrf	_nout^(0+128)
  2401  0E1D  01A1               	clrf	(_nout+1)^(0+128)
  2402  0E1E                     l2276:	
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2404                           
  2405                           
  2406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2407  0E1E  085C               	movf	vfprintf@cfmt^(0+128),w
  2408  0E1F  0084               	movwf	4
  2409  0E20  085D               	movf	(vfprintf@cfmt+1)^(0+128),w
  2410  0E21  0085               	movwf	5
  2411  0E22  0012               	moviw fsr0++
  2412  0E23  1903               	btfsc	3,2
  2413  0E24  2E3C               	goto	l2278
  2414                           
  2415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2416  0E25  30DC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2417  0E26  0020               	movlb	0	; select bank0
  2418  0E27  00EC               	movwf	??_vfprintf
  2419  0E28  086C               	movf	??_vfprintf,w
  2420  0E29  00D3               	movwf	vfpfcnvrt@fmt
  2421  0E2A  086B               	movf	vfprintf@ap,w
  2422  0E2B  00ED               	movwf	??_vfprintf+1
  2423  0E2C  086D               	movf	??_vfprintf+1,w
  2424  0E2D  00D4               	movwf	vfpfcnvrt@ap
  2425  0E2E  0021               	movlb	1	; select bank1
  2426  0E2F  085B               	movf	vfprintf@fp^(0+128),w
  2427  0E30  3184  2431  318E   	fcall	_vfpfcnvrt
  2428  0E33  0020               	movlb	0	; select bank0
  2429  0E34  0853               	movf	?_vfpfcnvrt,w
  2430  0E35  0021               	movlb	1	; select bank1
  2431  0E36  07A0               	addwf	_nout^(0+128),f
  2432  0E37  0020               	movlb	0	; select bank0
  2433  0E38  0854               	movf	?_vfpfcnvrt+1,w
  2434  0E39  0021               	movlb	1	; select bank1
  2435  0E3A  3DA1               	addwfc	(_nout+1)^(0+128),f
  2436  0E3B  2E1E               	goto	l2276
  2437  0E3C                     l2278:	
  2438                           
  2439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2440  0E3C  0821               	movf	(_nout+1)^(0+128),w
  2441  0E3D  0020               	movlb	0	; select bank0
  2442  0E3E  00EA               	movwf	?_vfprintf+1
  2443  0E3F  0021               	movlb	1	; select bank1
  2444  0E40  0820               	movf	_nout^(0+128),w
  2445  0E41  0020               	movlb	0	; select bank0
  2446  0E42  00E9               	movwf	?_vfprintf
  2447  0E43  0008               	return
  2448  0E44                     __end_of_vfprintf:	
  2449                           
  2450                           	psect	text4
  2451  0431                     __ptext4:	
  2452 ;; *************** function _vfpfcnvrt *****************
  2453 ;; Defined at:
  2454 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  fp              1    wreg     PTR struct _IO_FILE
  2457 ;;		 -> NULL(0), 
  2458 ;;  fmt             1   51[BANK0 ] PTR PTR unsigned char 
  2459 ;;		 -> vfprintf@cfmt(2), 
  2460 ;;  ap              1   52[BANK0 ] PTR PTR void 
  2461 ;;		 -> printf@ap(1), 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
  2464 ;;		 -> NULL(0), 
  2465 ;;  llu             8   59[BANK0 ] unsigned long long 
  2466 ;;  ll              8    0        long long 
  2467 ;;  f               4    0        long long 
  2468 ;;  ct              3    0        unsigned char [3]
  2469 ;;  done            2   67[BANK0 ] int 
  2470 ;;  vp              2    0        PTR void 
  2471 ;;  i               2    0        int 
  2472 ;;  cp              2    0        PTR unsigned char 
  2473 ;;  c               1   71[BANK0 ] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2   51[BANK0 ] int 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2483 ;;      Params:         0       2       0       0       0       0       0       0
  2484 ;;      Locals:         0      14       0       0       0       0       0       0
  2485 ;;      Temps:          0       6       0       0       0       0       0       0
  2486 ;;      Totals:         0      22       0       0       0       0       0       0
  2487 ;;Total ram usage:       22 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    6
  2490 ;; This function calls:
  2491 ;;		_atoi
  2492 ;;		_fputc
  2493 ;;		_isdigit
  2494 ;;		_xtoa
  2495 ;; This function is called by:
  2496 ;;		_vfprintf
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           
  2501                           ;psect for function _vfpfcnvrt
  2502  0431                     _vfpfcnvrt:	
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2506                           ;vfpfcnvrt@fp stored from wreg
  2507  0431  0020               	movlb	0	; select bank0
  2508  0432  00E8               	movwf	vfpfcnvrt@fp
  2509                           
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2511  0433  0853               	movf	vfpfcnvrt@fmt,w
  2512  0434  0086               	movwf	6
  2513  0435  0187               	clrf	7
  2514  0436  3F40               	moviw [0]fsr1
  2515  0437  00D5               	movwf	??_vfpfcnvrt
  2516  0438  3F41               	moviw [1]fsr1
  2517  0439  00D6               	movwf	??_vfpfcnvrt+1
  2518  043A  0855               	movf	??_vfpfcnvrt,w
  2519  043B  0084               	movwf	4
  2520  043C  0856               	movf	??_vfpfcnvrt+1,w
  2521  043D  0085               	movwf	5
  2522  043E  0012               	moviw fsr0++
  2523  043F  3A25               	xorlw	37
  2524  0440  1D03               	btfss	3,2
  2525  0441  2DA7               	goto	l2252
  2526                           
  2527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2528  0442  0853               	movf	vfpfcnvrt@fmt,w
  2529  0443  0086               	movwf	6
  2530  0444  0187               	clrf	7
  2531  0445  3001               	movlw	1
  2532  0446  0781               	addwf	1,f
  2533  0447  3141               	addfsr 1,1
  2534  0448  1803               	skipnc
  2535  0449  0A81               	incf	1,f
  2536                           
  2537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2538  044A  0021               	movlb	1	; select bank1
  2539  044B  01A2               	clrf	_width^(0+128)
  2540  044C  01A3               	clrf	(_width+1)^(0+128)
  2541  044D  01A6               	clrf	_flags^(0+128)
  2542  044E  01A7               	clrf	(_flags+1)^(0+128)
  2543                           
  2544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2545  044F  30FF               	movlw	255
  2546  0450  00A4               	movwf	_prec^(0+128)
  2547  0451  30FF               	movlw	255
  2548  0452  00A5               	movwf	(_prec^(0+128)+1)
  2549                           
  2550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2551  0453  0020               	movlb	0	; select bank0
  2552  0454  01E3               	clrf	vfpfcnvrt@done
  2553  0455  01E4               	clrf	vfpfcnvrt@done+1
  2554                           
  2555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2556  0456  2C73               	goto	l2196
  2557  0457                     l456:	
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  2559                           
  2560                           
  2561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2562  0457  0021               	movlb	1	; select bank1
  2563  0458  1426               	bsf	_flags^(0+128),0
  2564  0459                     l2180:	
  2565                           
  2566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2567  0459  0020               	movlb	0	; select bank0
  2568  045A  0853               	movf	vfpfcnvrt@fmt,w
  2569  045B  0086               	movwf	6
  2570  045C  0187               	clrf	7
  2571  045D  3001               	movlw	1
  2572  045E  0781               	addwf	1,f
  2573  045F  3141               	addfsr 1,1
  2574  0460  1803               	skipnc
  2575  0461  0A81               	incf	1,f
  2576                           
  2577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2578  0462  2C73               	goto	l2196
  2579  0463                     l458:	
  2580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  2581                           
  2582                           
  2583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2584  0463  0021               	movlb	1	; select bank1
  2585  0464  14A6               	bsf	_flags^(0+128),1
  2586  0465  2C59               	goto	l2180
  2587  0466                     l459:	
  2588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  2589                           
  2590                           
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2592  0466  0021               	movlb	1	; select bank1
  2593  0467  1526               	bsf	_flags^(0+128),2
  2594  0468  2C59               	goto	l2180
  2595  0469                     l460:	
  2596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  2597                           
  2598                           
  2599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2600  0469  0021               	movlb	1	; select bank1
  2601  046A  15A6               	bsf	_flags^(0+128),3
  2602  046B  2C59               	goto	l2180
  2603  046C                     l461:	
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  2605                           
  2606                           
  2607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2608  046C  0021               	movlb	1	; select bank1
  2609  046D  1626               	bsf	_flags^(0+128),4
  2610  046E  2C59               	goto	l2180
  2611  046F                     l2190:	
  2612                           
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2614  046F  3001               	movlw	1
  2615  0470  00E3               	movwf	vfpfcnvrt@done
  2616  0471  3000               	movlw	0
  2617  0472  00E4               	movwf	vfpfcnvrt@done+1
  2618  0473                     l2196:	
  2619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2620                           
  2621                           
  2622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2623  0473  0863               	movf	vfpfcnvrt@done,w
  2624  0474  0464               	iorwf	vfpfcnvrt@done+1,w
  2625  0475  1D03               	btfss	3,2
  2626  0476  2C9C               	goto	l463
  2627  0477  0853               	movf	vfpfcnvrt@fmt,w
  2628  0478  0086               	movwf	6
  2629  0479  0187               	clrf	7
  2630  047A  3F40               	moviw [0]fsr1
  2631  047B  00D5               	movwf	??_vfpfcnvrt
  2632  047C  3F41               	moviw [1]fsr1
  2633  047D  00D6               	movwf	??_vfpfcnvrt+1
  2634  047E  0855               	movf	??_vfpfcnvrt,w
  2635  047F  0084               	movwf	4
  2636  0480  0856               	movf	??_vfpfcnvrt+1,w
  2637  0481  0085               	movwf	5
  2638  0482  0800               	movf	0,w	;code access
  2639  0483  00D7               	movwf	??_vfpfcnvrt+2
  2640  0484  01D8               	clrf	??_vfpfcnvrt+3
  2641                           
  2642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2643                           ; Switch size 1, requested type "simple"
  2644                           ; Number of cases is 1, Range of values is 0 to 0
  2645                           ; switch strategies available:
  2646                           ; Name         Instructions Cycles
  2647                           ; simple_byte            4     3 (average)
  2648                           ; direct_byte            8     6 (fixed)
  2649                           ; jumptable            260     6 (fixed)
  2650                           ;	Chosen strategy is simple_byte
  2651  0485  0858               	movf	??_vfpfcnvrt+3,w
  2652  0486  3A00               	xorlw	0	; case 0
  2653  0487  1903               	skipnz
  2654  0488  2C8A               	goto	l2808
  2655  0489  2C6F               	goto	l2190
  2656  048A                     l2808:	
  2657                           
  2658                           ; Switch size 1, requested type "simple"
  2659                           ; Number of cases is 5, Range of values is 32 to 48
  2660                           ; switch strategies available:
  2661                           ; Name         Instructions Cycles
  2662                           ; simple_byte           16     9 (average)
  2663                           ; direct_byte           43     9 (fixed)
  2664                           ; jumptable            263     9 (fixed)
  2665                           ;	Chosen strategy is simple_byte
  2666  048A  0857               	movf	??_vfpfcnvrt+2,w
  2667  048B  3A20               	xorlw	32	; case 32
  2668  048C  1903               	skipnz
  2669  048D  2C69               	goto	l460
  2670  048E  3A03               	xorlw	3	; case 35
  2671  048F  1903               	skipnz
  2672  0490  2C6C               	goto	l461
  2673  0491  3A08               	xorlw	8	; case 43
  2674  0492  1903               	skipnz
  2675  0493  2C66               	goto	l459
  2676  0494  3A06               	xorlw	6	; case 45
  2677  0495  1903               	skipnz
  2678  0496  2C57               	goto	l456
  2679  0497  3A1D               	xorlw	29	; case 48
  2680  0498  1903               	skipnz
  2681  0499  2C63               	goto	l458
  2682  049A  2C6F               	goto	l2190
  2683  049B  2C73               	goto	l2196
  2684  049C                     l463:	
  2685                           
  2686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2687  049C  0021               	movlb	1	; select bank1
  2688  049D  1C26               	btfss	_flags^(0+128),0
  2689  049E  2CA3               	goto	l2200
  2690                           
  2691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2692  049F  30FD               	movlw	253
  2693  04A0  05A6               	andwf	_flags^(0+128),f
  2694  04A1  30FF               	movlw	255
  2695  04A2  05A7               	andwf	(_flags+1)^(0+128),f
  2696  04A3                     l2200:	
  2697                           
  2698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2699  04A3  0020               	movlb	0	; select bank0
  2700  04A4  0853               	movf	vfpfcnvrt@fmt,w
  2701  04A5  0086               	movwf	6
  2702  04A6  0187               	clrf	7
  2703  04A7  3F40               	moviw [0]fsr1
  2704  04A8  00D5               	movwf	??_vfpfcnvrt
  2705  04A9  3F41               	moviw [1]fsr1
  2706  04AA  00D6               	movwf	??_vfpfcnvrt+1
  2707  04AB  0855               	movf	??_vfpfcnvrt,w
  2708  04AC  0084               	movwf	4
  2709  04AD  0856               	movf	??_vfpfcnvrt+1,w
  2710  04AE  0085               	movwf	5
  2711  04AF  0012               	moviw fsr0++
  2712  04B0  3A2A               	xorlw	42
  2713  04B1  1D03               	btfss	3,2
  2714  04B2  2CD1               	goto	l2212
  2715                           
  2716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2717  04B3  0853               	movf	vfpfcnvrt@fmt,w
  2718  04B4  0086               	movwf	6
  2719  04B5  0187               	clrf	7
  2720  04B6  3001               	movlw	1
  2721  04B7  0781               	addwf	1,f
  2722  04B8  3141               	addfsr 1,1
  2723  04B9  1803               	skipnc
  2724  04BA  0A81               	incf	1,f
  2725                           
  2726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2727  04BB  0854               	movf	vfpfcnvrt@ap,w
  2728  04BC  0086               	movwf	6
  2729  04BD  0187               	clrf	7
  2730  04BE  0801               	movf	1,w
  2731  04BF  0084               	movwf	4
  2732  04C0  0185               	clrf	5
  2733  04C1  3002               	movlw	2
  2734  04C2  0781               	addwf	1,f
  2735  04C3  3F00               	moviw [0]fsr0
  2736  04C4  0021               	movlb	1	; select bank1
  2737  04C5  00A2               	movwf	_width^(0+128)
  2738  04C6  3F01               	moviw [1]fsr0
  2739  04C7  00A3               	movwf	(_width+1)^(0+128)
  2740                           
  2741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2742  04C8  1FA3               	btfss	(_width+1)^(0+128),7
  2743  04C9  2D10               	goto	l2222
  2744                           
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2746  04CA  1426               	bsf	_flags^(0+128),0
  2747                           
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2749  04CB  09A2               	comf	_width^(0+128),f
  2750  04CC  09A3               	comf	(_width+1)^(0+128),f
  2751  04CD  0AA2               	incf	_width^(0+128),f
  2752  04CE  1903               	skipnz
  2753  04CF  0AA3               	incf	(_width+1)^(0+128),f
  2754  04D0  2D10               	goto	l2222
  2755  04D1                     l2212:	
  2756                           
  2757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2758  04D1  0853               	movf	vfpfcnvrt@fmt,w
  2759  04D2  0086               	movwf	6
  2760  04D3  0187               	clrf	7
  2761  04D4  3F40               	moviw [0]fsr1
  2762  04D5  00F6               	movwf	atoi@s
  2763  04D6  3F41               	moviw [1]fsr1
  2764  04D7  00F7               	movwf	atoi@s+1
  2765  04D8  318F  275F  3184   	fcall	_atoi
  2766  04DB  0877               	movf	?_atoi+1,w
  2767  04DC  0021               	movlb	1	; select bank1
  2768  04DD  00A3               	movwf	(_width+1)^(0+128)
  2769  04DE  0876               	movf	?_atoi,w
  2770  04DF  00A2               	movwf	_width^(0+128)
  2771                           
  2772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2773  04E0  2CE9               	goto	l2216
  2774  04E1                     l2214:	
  2775                           
  2776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2777  04E1  0853               	movf	vfpfcnvrt@fmt,w
  2778  04E2  0086               	movwf	6
  2779  04E3  0187               	clrf	7
  2780  04E4  3001               	movlw	1
  2781  04E5  0781               	addwf	1,f
  2782  04E6  3141               	addfsr 1,1
  2783  04E7  1803               	skipnc
  2784  04E8  0A81               	incf	1,f
  2785  04E9                     l2216:	
  2786  04E9  0020               	movlb	0	; select bank0
  2787  04EA  0853               	movf	vfpfcnvrt@fmt,w
  2788  04EB  0086               	movwf	6
  2789  04EC  0187               	clrf	7
  2790  04ED  3F40               	moviw [0]fsr1
  2791  04EE  00D5               	movwf	??_vfpfcnvrt
  2792  04EF  3F41               	moviw [1]fsr1
  2793  04F0  00D6               	movwf	??_vfpfcnvrt+1
  2794  04F1  0855               	movf	??_vfpfcnvrt,w
  2795  04F2  0084               	movwf	4
  2796  04F3  0856               	movf	??_vfpfcnvrt+1,w
  2797  04F4  0085               	movwf	5
  2798  04F5  0800               	movf	0,w	;code access
  2799  04F6  3ED0               	addlw	208
  2800  04F7  00D7               	movwf	??_vfpfcnvrt+2
  2801  04F8  30FF               	movlw	255
  2802  04F9  1803               	skipnc
  2803  04FA  3000               	movlw	0
  2804  04FB  00D8               	movwf	??_vfpfcnvrt+3
  2805  04FC  3000               	movlw	0
  2806  04FD  0258               	subwf	??_vfpfcnvrt+3,w
  2807  04FE  300A               	movlw	10
  2808  04FF  1903               	skipnz
  2809  0500  0257               	subwf	??_vfpfcnvrt+2,w
  2810  0501  1803               	btfsc	3,0
  2811  0502  2D05               	goto	u2010
  2812  0503  3001               	movlw	1
  2813  0504  2D06               	goto	u2020
  2814  0505                     u2010:	
  2815  0505  3000               	movlw	0
  2816  0506                     u2020:	
  2817  0506  00D9               	movwf	??_vfpfcnvrt+4
  2818  0507  01DA               	clrf	??_vfpfcnvrt+5
  2819  0508  0859               	movf	??_vfpfcnvrt+4,w
  2820  0509  00E5               	movwf	_vfpfcnvrt$683
  2821  050A  085A               	movf	??_vfpfcnvrt+5,w
  2822  050B  00E6               	movwf	_vfpfcnvrt$683+1
  2823  050C  0865               	movf	_vfpfcnvrt$683,w
  2824  050D  0466               	iorwf	_vfpfcnvrt$683+1,w
  2825  050E  1D03               	btfss	3,2
  2826  050F  2CE1               	goto	l2214
  2827  0510                     l2222:	
  2828                           
  2829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2830  0510  0020               	movlb	0	; select bank0
  2831  0511  0853               	movf	vfpfcnvrt@fmt,w
  2832  0512  0086               	movwf	6
  2833  0513  0187               	clrf	7
  2834  0514  3F40               	moviw [0]fsr1
  2835  0515  00D5               	movwf	??_vfpfcnvrt
  2836  0516  3F41               	moviw [1]fsr1
  2837  0517  00D6               	movwf	??_vfpfcnvrt+1
  2838  0518  0855               	movf	??_vfpfcnvrt,w
  2839  0519  0084               	movwf	4
  2840  051A  0856               	movf	??_vfpfcnvrt+1,w
  2841  051B  0085               	movwf	5
  2842  051C  0012               	moviw fsr0++
  2843  051D  3A78               	xorlw	120
  2844  051E  1903               	btfsc	3,2
  2845  051F  2D2F               	goto	l2226
  2846  0520  0853               	movf	vfpfcnvrt@fmt,w
  2847  0521  0086               	movwf	6
  2848  0522  0187               	clrf	7
  2849  0523  3F40               	moviw [0]fsr1
  2850  0524  00D5               	movwf	??_vfpfcnvrt
  2851  0525  3F41               	moviw [1]fsr1
  2852  0526  00D6               	movwf	??_vfpfcnvrt+1
  2853  0527  0855               	movf	??_vfpfcnvrt,w
  2854  0528  0084               	movwf	4
  2855  0529  0856               	movf	??_vfpfcnvrt+1,w
  2856  052A  0085               	movwf	5
  2857  052B  0012               	moviw fsr0++
  2858  052C  3A58               	xorlw	88
  2859  052D  1D03               	btfss	3,2
  2860  052E  2D75               	goto	l2236
  2861  052F                     l2226:	
  2862                           
  2863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  2864  052F  0853               	movf	vfpfcnvrt@fmt,w
  2865  0530  0086               	movwf	6
  2866  0531  0187               	clrf	7
  2867  0532  3F40               	moviw [0]fsr1
  2868  0533  00D5               	movwf	??_vfpfcnvrt
  2869  0534  3F41               	moviw [1]fsr1
  2870  0535  00D6               	movwf	??_vfpfcnvrt+1
  2871  0536  0855               	movf	??_vfpfcnvrt,w
  2872  0537  0084               	movwf	4
  2873  0538  0856               	movf	??_vfpfcnvrt+1,w
  2874  0539  0085               	movwf	5
  2875  053A  0800               	movf	0,w	;code access
  2876  053B  00D7               	movwf	??_vfpfcnvrt+2
  2877  053C  0857               	movf	??_vfpfcnvrt+2,w
  2878  053D  00E7               	movwf	vfpfcnvrt@c
  2879                           
  2880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  2881  053E  0853               	movf	vfpfcnvrt@fmt,w
  2882  053F  0086               	movwf	6
  2883  0540  0187               	clrf	7
  2884  0541  3001               	movlw	1
  2885  0542  0781               	addwf	1,f
  2886  0543  3141               	addfsr 1,1
  2887  0544  1803               	skipnc
  2888  0545  0A81               	incf	1,f
  2889                           
  2890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2891  0546  0854               	movf	vfpfcnvrt@ap,w
  2892  0547  0086               	movwf	6
  2893  0548  0187               	clrf	7
  2894  0549  0801               	movf	1,w
  2895  054A  0084               	movwf	4
  2896  054B  0185               	clrf	5
  2897  054C  3002               	movlw	2
  2898  054D  0781               	addwf	1,f
  2899  054E  3F00               	moviw [0]fsr0
  2900  054F  00DB               	movwf	vfpfcnvrt@llu
  2901  0550  3F01               	moviw [1]fsr0
  2902  0551  00DC               	movwf	vfpfcnvrt@llu+1
  2903  0552  01DD               	clrf	vfpfcnvrt@llu+2
  2904  0553  01DE               	clrf	vfpfcnvrt@llu+3
  2905  0554  01DF               	clrf	vfpfcnvrt@llu+4
  2906  0555  01E0               	clrf	vfpfcnvrt@llu+5
  2907  0556  01E1               	clrf	vfpfcnvrt@llu+6
  2908  0557  01E2               	clrf	vfpfcnvrt@llu+7
  2909                           
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  2911  0558  085B               	movf	vfpfcnvrt@llu,w
  2912  0559  00AD               	movwf	xtoa@d
  2913  055A  085C               	movf	vfpfcnvrt@llu+1,w
  2914  055B  00AE               	movwf	xtoa@d+1
  2915  055C  085D               	movf	vfpfcnvrt@llu+2,w
  2916  055D  00AF               	movwf	xtoa@d+2
  2917  055E  085E               	movf	vfpfcnvrt@llu+3,w
  2918  055F  00B0               	movwf	xtoa@d+3
  2919  0560  085F               	movf	vfpfcnvrt@llu+4,w
  2920  0561  00B1               	movwf	xtoa@d+4
  2921  0562  0860               	movf	vfpfcnvrt@llu+5,w
  2922  0563  00B2               	movwf	xtoa@d+5
  2923  0564  0861               	movf	vfpfcnvrt@llu+6,w
  2924  0565  00B3               	movwf	xtoa@d+6
  2925  0566  0862               	movf	vfpfcnvrt@llu+7,w
  2926  0567  00B4               	movwf	xtoa@d+7
  2927  0568  0867               	movf	vfpfcnvrt@c,w
  2928  0569  00D5               	movwf	??_vfpfcnvrt
  2929  056A  0855               	movf	??_vfpfcnvrt,w
  2930  056B  00B5               	movwf	xtoa@x
  2931  056C  0868               	movf	vfpfcnvrt@fp,w
  2932  056D  3181  2162         	fcall	_xtoa
  2933  056F  0020               	movlb	0	; select bank0
  2934  0570  082E               	movf	?_xtoa+1,w
  2935  0571  00D4               	movwf	?_vfpfcnvrt+1
  2936  0572  082D               	movf	?_xtoa,w
  2937  0573  00D3               	movwf	?_vfpfcnvrt
  2938  0574  0008               	return
  2939  0575                     l2236:	
  2940                           
  2941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2942  0575  0853               	movf	vfpfcnvrt@fmt,w
  2943  0576  0086               	movwf	6
  2944  0577  0187               	clrf	7
  2945  0578  3F40               	moviw [0]fsr1
  2946  0579  00D5               	movwf	??_vfpfcnvrt
  2947  057A  3F41               	moviw [1]fsr1
  2948  057B  00D6               	movwf	??_vfpfcnvrt+1
  2949  057C  0855               	movf	??_vfpfcnvrt,w
  2950  057D  0084               	movwf	4
  2951  057E  0856               	movf	??_vfpfcnvrt+1,w
  2952  057F  0085               	movwf	5
  2953  0580  0012               	moviw fsr0++
  2954  0581  3A25               	xorlw	37
  2955  0582  1D03               	btfss	3,2
  2956  0583  2D9C               	goto	l2246
  2957                           
  2958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2959  0584  0853               	movf	vfpfcnvrt@fmt,w
  2960  0585  0086               	movwf	6
  2961  0586  0187               	clrf	7
  2962  0587  3001               	movlw	1
  2963  0588  0781               	addwf	1,f
  2964  0589  3141               	addfsr 1,1
  2965  058A  1803               	skipnc
  2966  058B  0A81               	incf	1,f
  2967                           
  2968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2969  058C  3025               	movlw	37
  2970  058D  00F2               	movwf	fputc@c
  2971  058E  3000               	movlw	0
  2972  058F  00F3               	movwf	fputc@c+1
  2973  0590  0868               	movf	vfpfcnvrt@fp,w
  2974  0591  00D5               	movwf	??_vfpfcnvrt
  2975  0592  0855               	movf	??_vfpfcnvrt,w
  2976  0593  00F4               	movwf	fputc@fp
  2977  0594  318E  2644         	fcall	_fputc
  2978  0596                     l2242:	
  2979                           
  2980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2981  0596  3001               	movlw	1
  2982  0597  0020               	movlb	0	; select bank0
  2983  0598  00D3               	movwf	?_vfpfcnvrt
  2984  0599  3000               	movlw	0
  2985  059A  00D4               	movwf	?_vfpfcnvrt+1
  2986  059B  0008               	return
  2987  059C                     l2246:	
  2988                           
  2989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2990  059C  0853               	movf	vfpfcnvrt@fmt,w
  2991  059D  0086               	movwf	6
  2992  059E  0187               	clrf	7
  2993  059F  3001               	movlw	1
  2994  05A0  0781               	addwf	1,f
  2995  05A1  3141               	addfsr 1,1
  2996  05A2  1803               	skipnc
  2997  05A3  0A81               	incf	1,f
  2998                           
  2999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3000  05A4  01D3               	clrf	?_vfpfcnvrt
  3001  05A5  01D4               	clrf	?_vfpfcnvrt+1
  3002  05A6  0008               	return
  3003  05A7                     l2252:	
  3004                           
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3006  05A7  0853               	movf	vfpfcnvrt@fmt,w
  3007  05A8  0086               	movwf	6
  3008  05A9  0187               	clrf	7
  3009  05AA  3F40               	moviw [0]fsr1
  3010  05AB  00D5               	movwf	??_vfpfcnvrt
  3011  05AC  3F41               	moviw [1]fsr1
  3012  05AD  00D6               	movwf	??_vfpfcnvrt+1
  3013  05AE  0855               	movf	??_vfpfcnvrt,w
  3014  05AF  0084               	movwf	4
  3015  05B0  0856               	movf	??_vfpfcnvrt+1,w
  3016  05B1  0085               	movwf	5
  3017  05B2  0800               	movf	0,w	;code access
  3018  05B3  00D7               	movwf	??_vfpfcnvrt+2
  3019  05B4  01D8               	clrf	??_vfpfcnvrt+3
  3020  05B5  0857               	movf	??_vfpfcnvrt+2,w
  3021  05B6  00F2               	movwf	fputc@c
  3022  05B7  0858               	movf	??_vfpfcnvrt+3,w
  3023  05B8  00F3               	movwf	fputc@c+1
  3024  05B9  0868               	movf	vfpfcnvrt@fp,w
  3025  05BA  00D9               	movwf	??_vfpfcnvrt+4
  3026  05BB  0859               	movf	??_vfpfcnvrt+4,w
  3027  05BC  00F4               	movwf	fputc@fp
  3028  05BD  318E  2644  3184   	fcall	_fputc
  3029                           
  3030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3031  05C0  0020               	movlb	0	; select bank0
  3032  05C1  0853               	movf	vfpfcnvrt@fmt,w
  3033  05C2  0086               	movwf	6
  3034  05C3  0187               	clrf	7
  3035  05C4  3001               	movlw	1
  3036  05C5  0781               	addwf	1,f
  3037  05C6  3141               	addfsr 1,1
  3038  05C7  1803               	skipnc
  3039  05C8  0A81               	incf	1,f
  3040  05C9  2D96               	goto	l2242
  3041  05CA                     __end_of_vfpfcnvrt:	
  3042                           
  3043                           	psect	text5
  3044  0162                     __ptext5:	
  3045 ;; *************** function _xtoa *****************
  3046 ;; Defined at:
  3047 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  fp              1    wreg     PTR struct _IO_FILE
  3050 ;;		 -> NULL(0), 
  3051 ;;  d               8   13[BANK0 ] unsigned long long 
  3052 ;;  x               1   21[BANK0 ] unsigned char 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  fp              1   36[BANK0 ] PTR struct _IO_FILE
  3055 ;;		 -> NULL(0), 
  3056 ;;  n               8   39[BANK0 ] unsigned long long 
  3057 ;;  c               2   49[BANK0 ] int 
  3058 ;;  i               2   47[BANK0 ] int 
  3059 ;;  w               2   37[BANK0 ] int 
  3060 ;;  p               2   34[BANK0 ] int 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  2   13[BANK0 ] int 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3070 ;;      Params:         0       9       0       0       0       0       0       0
  3071 ;;      Locals:         0      21       0       0       0       0       0       0
  3072 ;;      Temps:          0       8       0       0       0       0       0       0
  3073 ;;      Totals:         0      38       0       0       0       0       0       0
  3074 ;;Total ram usage:       38 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    5
  3077 ;; This function calls:
  3078 ;;		_isalpha
  3079 ;;		_isupper
  3080 ;;		_pad
  3081 ;;		_toupper
  3082 ;; This function is called by:
  3083 ;;		_vfpfcnvrt
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _xtoa
  3089  0162                     _xtoa:	
  3090                           
  3091                           ;incstack = 0
  3092                           ; Regs used in _xtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3093                           ;xtoa@fp stored from wreg
  3094  0162  0020               	movlb	0	; select bank0
  3095  0163  00C4               	movwf	xtoa@fp
  3096                           
  3097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3098  0164  0021               	movlb	1	; select bank1
  3099  0165  1BA5               	btfsc	(_prec+1)^(0+128),7
  3100  0166  296B               	goto	l422
  3101                           
  3102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3103  0167  30FD               	movlw	253
  3104  0168  05A6               	andwf	_flags^(0+128),f
  3105  0169  30FF               	movlw	255
  3106  016A  05A7               	andwf	(_flags+1)^(0+128),f
  3107  016B                     l422:	
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  3109                           
  3110                           
  3111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3112  016B  0825               	movf	(_prec+1)^(0+128),w
  3113  016C  3A80               	xorlw	128
  3114  016D  0020               	movlb	0	; select bank0
  3115  016E  00B6               	movwf	??_xtoa
  3116  016F  3080               	movlw	128
  3117  0170  0236               	subwf	??_xtoa,w
  3118  0171  1D03               	skipz
  3119  0172  2976               	goto	u1735
  3120  0173  3001               	movlw	1
  3121  0174  0021               	movlb	1	; select bank1
  3122  0175  0224               	subwf	_prec^(0+128),w
  3123  0176                     u1735:	
  3124  0176  1803               	skipnc
  3125  0177  297E               	goto	l2066
  3126  0178  3001               	movlw	1
  3127  0179  0020               	movlb	0	; select bank0
  3128  017A  00C2               	movwf	xtoa@p
  3129  017B  3000               	movlw	0
  3130  017C  00C3               	movwf	xtoa@p+1
  3131  017D  2986               	goto	l426
  3132  017E                     l2066:	
  3133  017E  0021               	movlb	1	; select bank1
  3134  017F  0825               	movf	(_prec+1)^(0+128),w
  3135  0180  0020               	movlb	0	; select bank0
  3136  0181  00C3               	movwf	xtoa@p+1
  3137  0182  0021               	movlb	1	; select bank1
  3138  0183  0824               	movf	_prec^(0+128),w
  3139  0184  0020               	movlb	0	; select bank0
  3140  0185  00C2               	movwf	xtoa@p
  3141  0186                     l426:	
  3142                           
  3143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3144  0186  0021               	movlb	1	; select bank1
  3145  0187  0823               	movf	(_width+1)^(0+128),w
  3146  0188  0020               	movlb	0	; select bank0
  3147  0189  00C6               	movwf	xtoa@w+1
  3148  018A  0021               	movlb	1	; select bank1
  3149  018B  0822               	movf	_width^(0+128),w
  3150  018C  0020               	movlb	0	; select bank0
  3151  018D  00C5               	movwf	xtoa@w
  3152                           
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3154  018E  0021               	movlb	1	; select bank1
  3155  018F  1E26               	btfss	_flags^(0+128),4
  3156  0190  2996               	goto	l2072
  3157                           
  3158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3159  0191  30FE               	movlw	254
  3160  0192  0020               	movlb	0	; select bank0
  3161  0193  07C5               	addwf	xtoa@w,f
  3162  0194  30FF               	movlw	255
  3163  0195  3DC6               	addwfc	xtoa@w+1,f
  3164  0196                     l2072:	
  3165                           
  3166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3167  0196  0020               	movlb	0	; select bank0
  3168  0197  082D               	movf	xtoa@d,w
  3169  0198  00C7               	movwf	xtoa@n
  3170  0199  082E               	movf	xtoa@d+1,w
  3171  019A  00C8               	movwf	xtoa@n+1
  3172  019B  082F               	movf	xtoa@d+2,w
  3173  019C  00C9               	movwf	xtoa@n+2
  3174  019D  0830               	movf	xtoa@d+3,w
  3175  019E  00CA               	movwf	xtoa@n+3
  3176  019F  0831               	movf	xtoa@d+4,w
  3177  01A0  00CB               	movwf	xtoa@n+4
  3178  01A1  0832               	movf	xtoa@d+5,w
  3179  01A2  00CC               	movwf	xtoa@n+5
  3180  01A3  0833               	movf	xtoa@d+6,w
  3181  01A4  00CD               	movwf	xtoa@n+6
  3182  01A5  0834               	movf	xtoa@d+7,w
  3183  01A6  00CE               	movwf	xtoa@n+7
  3184                           
  3185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3186  01A7  301F               	movlw	31
  3187  01A8  00CF               	movwf	xtoa@i
  3188  01A9  3000               	movlw	0
  3189  01AA  00D0               	movwf	xtoa@i+1
  3190                           
  3191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3192  01AB  0021               	movlb	1	; select bank1
  3193  01AC  01C9               	clrf	(_dbuf^(0+128)+31)
  3194                           
  3195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3196  01AD  2A57               	goto	l2104
  3197  01AE                     l2076:	
  3198                           
  3199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3200  01AE  30FF               	movlw	255
  3201  01AF  0020               	movlb	0	; select bank0
  3202  01B0  07CF               	addwf	xtoa@i,f
  3203  01B1  30FF               	movlw	255
  3204  01B2  3DD0               	addwfc	xtoa@i+1,f
  3205                           
  3206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3207  01B3  300F               	movlw	15
  3208  01B4  0547               	andwf	xtoa@n,w
  3209  01B5  00D1               	movwf	xtoa@c
  3210  01B6  3000               	movlw	0
  3211  01B7  0548               	andwf	xtoa@n+1,w
  3212  01B8  00D2               	movwf	xtoa@c+1
  3213                           
  3214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3215  01B9  0852               	movf	xtoa@c+1,w
  3216  01BA  3A80               	xorlw	128
  3217  01BB  00B6               	movwf	??_xtoa
  3218  01BC  3080               	movlw	128
  3219  01BD  0236               	subwf	??_xtoa,w
  3220  01BE  1D03               	skipz
  3221  01BF  29C2               	goto	u1755
  3222  01C0  300A               	movlw	10
  3223  01C1  0251               	subwf	xtoa@c,w
  3224  01C2                     u1755:	
  3225  01C2  1C03               	skipc
  3226  01C3  29C8               	goto	l2080
  3227  01C4  0020               	movlb	0	; select bank0
  3228  01C5  0851               	movf	xtoa@c,w
  3229  01C6  3E57               	addlw	87
  3230  01C7  29CB               	goto	L1
  3231  01C8                     l2080:	
  3232  01C8  0020               	movlb	0	; select bank0
  3233  01C9  0851               	movf	xtoa@c,w
  3234  01CA  3E30               	addlw	48
  3235  01CB                     L1:	
  3236  01CB  00D1               	movwf	xtoa@c
  3237  01CC  3000               	movlw	0
  3238  01CD  3D52               	addwfc	xtoa@c+1,w
  3239  01CE  00D2               	movwf	xtoa@c+1
  3240  01CF  0835               	movf	xtoa@x,w
  3241  01D0  3EBF               	addlw	191
  3242  01D1  00B6               	movwf	??_xtoa
  3243  01D2  30FF               	movlw	255
  3244  01D3  1803               	skipnc
  3245  01D4  3000               	movlw	0
  3246  01D5  00B7               	movwf	??_xtoa+1
  3247  01D6  3000               	movlw	0
  3248  01D7  0237               	subwf	??_xtoa+1,w
  3249  01D8  301A               	movlw	26
  3250  01D9  1903               	skipnz
  3251  01DA  0236               	subwf	??_xtoa,w
  3252  01DB  1803               	btfsc	3,0
  3253  01DC  29DF               	goto	u1760
  3254  01DD  3001               	movlw	1
  3255  01DE  29E0               	goto	u1770
  3256  01DF                     u1760:	
  3257  01DF  3000               	movlw	0
  3258  01E0                     u1770:	
  3259  01E0  00B8               	movwf	??_xtoa+2
  3260  01E1  01B9               	clrf	??_xtoa+3
  3261  01E2  0838               	movf	??_xtoa+2,w
  3262  01E3  00BE               	movwf	_xtoa$667
  3263  01E4  0839               	movf	??_xtoa+3,w
  3264  01E5  00BF               	movwf	_xtoa$667+1
  3265  01E6  083E               	movf	_xtoa$667,w
  3266  01E7  043F               	iorwf	_xtoa$667+1,w
  3267  01E8  1903               	btfsc	3,2
  3268  01E9  2A16               	goto	l2096
  3269  01EA  3020               	movlw	32
  3270  01EB  0451               	iorwf	xtoa@c,w
  3271  01EC  00B6               	movwf	??_xtoa
  3272  01ED  3000               	movlw	0
  3273  01EE  0452               	iorwf	xtoa@c+1,w
  3274  01EF  00B7               	movwf	??_xtoa+1
  3275  01F0  0836               	movf	??_xtoa,w
  3276  01F1  3E9F               	addlw	159
  3277  01F2  00B8               	movwf	??_xtoa+2
  3278  01F3  30FF               	movlw	255
  3279  01F4  3D37               	addwfc	??_xtoa+1,w
  3280  01F5  00B9               	movwf	??_xtoa+3
  3281  01F6  3000               	movlw	0
  3282  01F7  0239               	subwf	??_xtoa+3,w
  3283  01F8  301A               	movlw	26
  3284  01F9  1903               	skipnz
  3285  01FA  0238               	subwf	??_xtoa+2,w
  3286  01FB  1803               	btfsc	3,0
  3287  01FC  29FF               	goto	u1790
  3288  01FD  3001               	movlw	1
  3289  01FE  2A00               	goto	u1800
  3290  01FF                     u1790:	
  3291  01FF  3000               	movlw	0
  3292  0200                     u1800:	
  3293  0200  00BA               	movwf	??_xtoa+4
  3294  0201  01BB               	clrf	??_xtoa+5
  3295  0202  083A               	movf	??_xtoa+4,w
  3296  0203  00C0               	movwf	_xtoa$668
  3297  0204  083B               	movf	??_xtoa+5,w
  3298  0205  00C1               	movwf	_xtoa$668+1
  3299  0206  0840               	movf	_xtoa$668,w
  3300  0207  0441               	iorwf	_xtoa$668+1,w
  3301  0208  1903               	btfsc	3,2
  3302  0209  2A16               	goto	l2096
  3303                           
  3304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3305  020A  0852               	movf	xtoa@c+1,w
  3306  020B  00F7               	movwf	toupper@c+1
  3307  020C  0851               	movf	xtoa@c,w
  3308  020D  00F6               	movwf	toupper@c
  3309  020E  318D  2532  3181   	fcall	_toupper
  3310  0211  0877               	movf	?_toupper+1,w
  3311  0212  0020               	movlb	0	; select bank0
  3312  0213  00D2               	movwf	xtoa@c+1
  3313  0214  0876               	movf	?_toupper,w
  3314  0215  00D1               	movwf	xtoa@c
  3315  0216                     l2096:	
  3316                           
  3317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3318  0216  0851               	movf	xtoa@c,w
  3319  0217  00B6               	movwf	??_xtoa
  3320  0218  084F               	movf	xtoa@i,w
  3321  0219  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  3322  021A  0086               	movwf	6
  3323  021B  0187               	clrf	7
  3324  021C  0836               	movf	??_xtoa,w
  3325  021D  0081               	movwf	1
  3326                           
  3327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3328  021E  30FF               	movlw	255
  3329  021F  07C2               	addwf	xtoa@p,f
  3330  0220  30FF               	movlw	255
  3331  0221  3DC3               	addwfc	xtoa@p+1,f
  3332                           
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3334  0222  30FF               	movlw	255
  3335  0223  07C5               	addwf	xtoa@w,f
  3336  0224  30FF               	movlw	255
  3337  0225  3DC6               	addwfc	xtoa@w+1,f
  3338                           
  3339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3340  0226  3047               	movlw	low xtoa@n
  3341  0227  0086               	movwf	6
  3342  0228  3000               	movlw	high xtoa@n
  3343  0229  0087               	movwf	7
  3344  022A  3F40               	moviw [0]fsr1
  3345  022B  00B6               	movwf	??_xtoa
  3346  022C  3F41               	moviw [1]fsr1
  3347  022D  00B7               	movwf	??_xtoa+1
  3348  022E  3F42               	moviw [2]fsr1
  3349  022F  00B8               	movwf	??_xtoa+2
  3350  0230  3F43               	moviw [3]fsr1
  3351  0231  00B9               	movwf	??_xtoa+3
  3352  0232  3F44               	moviw [4]fsr1
  3353  0233  00BA               	movwf	??_xtoa+4
  3354  0234  3F45               	moviw [5]fsr1
  3355  0235  00BB               	movwf	??_xtoa+5
  3356  0236  3F46               	moviw [6]fsr1
  3357  0237  00BC               	movwf	??_xtoa+6
  3358  0238  3F47               	moviw [7]fsr1
  3359  0239  00BD               	movwf	??_xtoa+7
  3360  023A  3004               	movlw	4
  3361  023B                     u1825:	
  3362  023B  0020               	movlb	0	; select bank0
  3363  023C  36BD               	lsrf	??_xtoa+7,f
  3364  023D  0CBC               	rrf	??_xtoa+6,f
  3365  023E  0CBB               	rrf	??_xtoa+5,f
  3366  023F  0CBA               	rrf	??_xtoa+4,f
  3367  0240  0CB9               	rrf	??_xtoa+3,f
  3368  0241  0CB8               	rrf	??_xtoa+2,f
  3369  0242  0CB7               	rrf	??_xtoa+1,f
  3370  0243  0CB6               	rrf	??_xtoa,f
  3371  0244  0B89               	decfsz	9,f
  3372  0245  2A3B               	goto	u1825
  3373  0246  0020               	movlb	0	; select bank0
  3374  0247  083D               	movf	??_xtoa+7,w
  3375  0248  00CE               	movwf	xtoa@n+7
  3376  0249  083C               	movf	??_xtoa+6,w
  3377  024A  00CD               	movwf	xtoa@n+6
  3378  024B  083B               	movf	??_xtoa+5,w
  3379  024C  00CC               	movwf	xtoa@n+5
  3380  024D  083A               	movf	??_xtoa+4,w
  3381  024E  00CB               	movwf	xtoa@n+4
  3382  024F  0839               	movf	??_xtoa+3,w
  3383  0250  00CA               	movwf	xtoa@n+3
  3384  0251  0838               	movf	??_xtoa+2,w
  3385  0252  00C9               	movwf	xtoa@n+2
  3386  0253  0837               	movf	??_xtoa+1,w
  3387  0254  00C8               	movwf	xtoa@n+1
  3388  0255  0836               	movf	??_xtoa,w
  3389  0256  00C7               	movwf	xtoa@n
  3390  0257                     l2104:	
  3391                           
  3392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3393  0257  0020               	movlb	0	; select bank0
  3394  0258  0850               	movf	xtoa@i+1,w
  3395  0259  3A80               	xorlw	128
  3396  025A  00B6               	movwf	??_xtoa
  3397  025B  3080               	movlw	128
  3398  025C  0236               	subwf	??_xtoa,w
  3399  025D  1D03               	skipz
  3400  025E  2A61               	goto	u1835
  3401  025F  3002               	movlw	2
  3402  0260  024F               	subwf	xtoa@i,w
  3403  0261                     u1835:	
  3404  0261  1C03               	skipc
  3405  0262  2A88               	goto	l447
  3406  0263  0020               	movlb	0	; select bank0
  3407  0264  0847               	movf	xtoa@n,w
  3408  0265  0448               	iorwf	xtoa@n+1,w
  3409  0266  0449               	iorwf	xtoa@n+2,w
  3410  0267  044A               	iorwf	xtoa@n+3,w
  3411  0268  044B               	iorwf	xtoa@n+4,w
  3412  0269  044C               	iorwf	xtoa@n+5,w
  3413  026A  044D               	iorwf	xtoa@n+6,w
  3414  026B  044E               	iorwf	xtoa@n+7,w
  3415  026C  1D03               	skipz
  3416  026D  29AE               	goto	l2076
  3417  026E  0843               	movf	xtoa@p+1,w
  3418  026F  3A80               	xorlw	128
  3419  0270  00B6               	movwf	??_xtoa
  3420  0271  3080               	movlw	128
  3421  0272  0236               	subwf	??_xtoa,w
  3422  0273  1D03               	skipz
  3423  0274  2A77               	goto	u1855
  3424  0275  3001               	movlw	1
  3425  0276  0242               	subwf	xtoa@p,w
  3426  0277                     u1855:	
  3427  0277  1803               	skipnc
  3428  0278  29AE               	goto	l2076
  3429  0279  0020               	movlb	0	; select bank0
  3430  027A  0846               	movf	xtoa@w+1,w
  3431  027B  3A80               	xorlw	128
  3432  027C  00B6               	movwf	??_xtoa
  3433  027D  3080               	movlw	128
  3434  027E  0236               	subwf	??_xtoa,w
  3435  027F  1D03               	skipz
  3436  0280  2A83               	goto	u1865
  3437  0281  3001               	movlw	1
  3438  0282  0245               	subwf	xtoa@w,w
  3439  0283                     u1865:	
  3440  0283  1C03               	skipc
  3441  0284  2A88               	goto	l447
  3442  0285  0021               	movlb	1	; select bank1
  3443  0286  18A6               	btfsc	_flags^(0+128),1
  3444  0287  29AE               	goto	l2076
  3445  0288                     l447:	
  3446                           
  3447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3448  0288  0021               	movlb	1	; select bank1
  3449  0289  1E26               	btfss	_flags^(0+128),4
  3450  028A  2AA4               	goto	l2120
  3451                           
  3452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3453  028B  30FF               	movlw	255
  3454  028C  0020               	movlb	0	; select bank0
  3455  028D  07CF               	addwf	xtoa@i,f
  3456  028E  30FF               	movlw	255
  3457  028F  3DD0               	addwfc	xtoa@i+1,f
  3458                           
  3459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3460  0290  0835               	movf	xtoa@x,w
  3461  0291  00B6               	movwf	??_xtoa
  3462  0292  084F               	movf	xtoa@i,w
  3463  0293  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  3464  0294  0086               	movwf	6
  3465  0295  0187               	clrf	7
  3466  0296  0836               	movf	??_xtoa,w
  3467  0297  0081               	movwf	1
  3468                           
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3470  0298  30FF               	movlw	255
  3471  0299  07CF               	addwf	xtoa@i,f
  3472  029A  30FF               	movlw	255
  3473  029B  3DD0               	addwfc	xtoa@i+1,f
  3474                           
  3475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3476  029C  3030               	movlw	48
  3477  029D  00B6               	movwf	??_xtoa
  3478  029E  084F               	movf	xtoa@i,w
  3479  029F  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  3480  02A0  0086               	movwf	6
  3481  02A1  0187               	clrf	7
  3482  02A2  0836               	movf	??_xtoa,w
  3483  02A3  0081               	movwf	1
  3484  02A4                     l2120:	
  3485                           
  3486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3487  02A4  0020               	movlb	0	; select bank0
  3488  02A5  084F               	movf	xtoa@i,w
  3489  02A6  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  3490  02A7  00B6               	movwf	??_xtoa
  3491  02A8  0836               	movf	??_xtoa,w
  3492  02A9  00A4               	movwf	pad@buf
  3493  02AA  0846               	movf	xtoa@w+1,w
  3494  02AB  00A6               	movwf	pad@p+1
  3495  02AC  0845               	movf	xtoa@w,w
  3496  02AD  00A5               	movwf	pad@p
  3497  02AE  0844               	movf	xtoa@fp,w
  3498  02AF  318E  2679         	fcall	_pad
  3499  02B1  0020               	movlb	0	; select bank0
  3500  02B2  0825               	movf	?_pad+1,w
  3501  02B3  00AE               	movwf	?_xtoa+1
  3502  02B4  0824               	movf	?_pad,w
  3503  02B5  00AD               	movwf	?_xtoa
  3504  02B6  0008               	return
  3505  02B7                     __end_of_xtoa:	
  3506                           
  3507                           	psect	text6
  3508  0D32                     __ptext6:	
  3509 ;; *************** function _toupper *****************
  3510 ;; Defined at:
  3511 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  c               2    6[COMMON] int 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  2    6[COMMON] int 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3525 ;;      Params:         2       0       0       0       0       0       0       0
  3526 ;;      Locals:         2       0       0       0       0       0       0       0
  3527 ;;      Temps:          4       0       0       0       0       0       0       0
  3528 ;;      Totals:         8       0       0       0       0       0       0       0
  3529 ;;Total ram usage:        8 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    1
  3532 ;; This function calls:
  3533 ;;		_islower
  3534 ;; This function is called by:
  3535 ;;		_xtoa
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function _toupper
  3541  0D32                     _toupper:	
  3542                           
  3543                           ;incstack = 0
  3544                           ; Regs used in _toupper: [wreg+status,2+status,0]
  3545  0D32  0876               	movf	toupper@c,w
  3546  0D33  3E9F               	addlw	159
  3547  0D34  00F8               	movwf	??_toupper
  3548  0D35  30FF               	movlw	255
  3549  0D36  3D77               	addwfc	toupper@c+1,w
  3550  0D37  00F9               	movwf	??_toupper+1
  3551  0D38  3000               	movlw	0
  3552  0D39  0279               	subwf	??_toupper+1,w
  3553  0D3A  301A               	movlw	26
  3554  0D3B  1903               	skipnz
  3555  0D3C  0278               	subwf	??_toupper,w
  3556  0D3D  1803               	btfsc	3,0
  3557  0D3E  2D41               	goto	u1610
  3558  0D3F  3001               	movlw	1
  3559  0D40  2D42               	goto	u1620
  3560  0D41                     u1610:	
  3561  0D41  3000               	movlw	0
  3562  0D42                     u1620:	
  3563  0D42  00FA               	movwf	??_toupper+2
  3564  0D43  01FB               	clrf	??_toupper+3
  3565  0D44  087A               	movf	??_toupper+2,w
  3566  0D45  00FC               	movwf	_toupper$1068
  3567  0D46  087B               	movf	??_toupper+3,w
  3568  0D47  00FD               	movwf	_toupper$1068+1
  3569  0D48  087C               	movf	_toupper$1068,w
  3570  0D49  047D               	iorwf	_toupper$1068+1,w
  3571  0D4A  1903               	btfsc	3,2
  3572  0D4B  0008               	return
  3573  0D4C  305F               	movlw	95
  3574  0D4D  0576               	andwf	toupper@c,w
  3575  0D4E  00F6               	movwf	?_toupper
  3576  0D4F  3000               	movlw	0
  3577  0D50  0577               	andwf	toupper@c+1,w
  3578  0D51  00F7               	movwf	?_toupper+1
  3579  0D52  0008               	return
  3580  0D53                     __end_of_toupper:	
  3581                           
  3582                           	psect	text7
  3583  0CAE                     __ptext7:	
  3584 ;; *************** function _islower *****************
  3585 ;; Defined at:
  3586 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  c               2    0[COMMON] int 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    0[COMMON] int 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3600 ;;      Params:         2       0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0
  3602 ;;      Temps:          4       0       0       0       0       0       0       0
  3603 ;;      Totals:         6       0       0       0       0       0       0       0
  3604 ;;Total ram usage:        6 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_toupper
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _islower
  3615  0CAE                     _islower:	
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _islower: [wreg+status,2+status,0]
  3619  0CAE  0870               	movf	islower@c,w
  3620  0CAF  3E9F               	addlw	159
  3621  0CB0  00F2               	movwf	??_islower
  3622  0CB1  30FF               	movlw	255
  3623  0CB2  3D71               	addwfc	islower@c+1,w
  3624  0CB3  00F3               	movwf	??_islower+1
  3625  0CB4  3000               	movlw	0
  3626  0CB5  0273               	subwf	??_islower+1,w
  3627  0CB6  301A               	movlw	26
  3628  0CB7  1903               	skipnz
  3629  0CB8  0272               	subwf	??_islower,w
  3630  0CB9  1803               	btfsc	3,0
  3631  0CBA  2CBD               	goto	u1510
  3632  0CBB  3001               	movlw	1
  3633  0CBC  2CBE               	goto	u1520
  3634  0CBD                     u1510:	
  3635  0CBD  3000               	movlw	0
  3636  0CBE                     u1520:	
  3637  0CBE  00F4               	movwf	??_islower+2
  3638  0CBF  01F5               	clrf	??_islower+3
  3639  0CC0  0874               	movf	??_islower+2,w
  3640  0CC1  00F0               	movwf	?_islower
  3641  0CC2  0875               	movf	??_islower+3,w
  3642  0CC3  00F1               	movwf	?_islower+1
  3643  0CC4  0008               	return
  3644  0CC5                     __end_of_islower:	
  3645                           
  3646                           	psect	text8
  3647  0E79                     __ptext8:	
  3648 ;; *************** function _pad *****************
  3649 ;; Defined at:
  3650 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  fp              1    wreg     PTR struct _IO_FILE
  3653 ;;		 -> NULL(0), 
  3654 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  3655 ;;		 -> dbuf(32), 
  3656 ;;  p               2    5[BANK0 ] int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  3659 ;;		 -> NULL(0), 
  3660 ;;  w               2   10[BANK0 ] int 
  3661 ;;  i               2    8[BANK0 ] int 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  2    4[BANK0 ] int 
  3664 ;; Registers used:
  3665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3671 ;;      Params:         0       3       0       0       0       0       0       0
  3672 ;;      Locals:         0       5       0       0       0       0       0       0
  3673 ;;      Temps:          0       1       0       0       0       0       0       0
  3674 ;;      Totals:         0       9       0       0       0       0       0       0
  3675 ;;Total ram usage:        9 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    4
  3678 ;; This function calls:
  3679 ;;		_fputc
  3680 ;;		_fputs
  3681 ;;		_strlen
  3682 ;; This function is called by:
  3683 ;;		_xtoa
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _pad
  3689  0E79                     _pad:	
  3690                           
  3691                           ;incstack = 0
  3692                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3693                           ;pad@fp stored from wreg
  3694  0E79  0020               	movlb	0	; select bank0
  3695  0E7A  00AC               	movwf	pad@fp
  3696                           
  3697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3698  0E7B  0021               	movlb	1	; select bank1
  3699  0E7C  1C26               	btfss	_flags^(0+128),0
  3700  0E7D  2E87               	goto	l1996
  3701                           
  3702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3703  0E7E  0020               	movlb	0	; select bank0
  3704  0E7F  082C               	movf	pad@fp,w
  3705  0E80  00A7               	movwf	??_pad
  3706  0E81  0827               	movf	??_pad,w
  3707  0E82  00FA               	movwf	fputs@fp
  3708  0E83  0824               	movf	pad@buf,w
  3709  0E84  318D  2597  318E   	fcall	_fputs
  3710  0E87                     l1996:	
  3711                           
  3712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3713  0E87  0020               	movlb	0	; select bank0
  3714  0E88  1BA6               	btfsc	pad@p+1,7
  3715  0E89  2E8F               	goto	l2000
  3716  0E8A  0826               	movf	pad@p+1,w
  3717  0E8B  00AB               	movwf	pad@w+1
  3718  0E8C  0825               	movf	pad@p,w
  3719  0E8D  00AA               	movwf	pad@w
  3720  0E8E  2E91               	goto	l414
  3721  0E8F                     l2000:	
  3722  0E8F  01AA               	clrf	pad@w
  3723  0E90  01AB               	clrf	pad@w+1
  3724  0E91                     l414:	
  3725                           
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3727  0E91  01A8               	clrf	pad@i
  3728  0E92  01A9               	clrf	pad@i+1
  3729  0E93                     l2006:	
  3730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3731                           
  3732                           
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3734  0E93  0829               	movf	pad@i+1,w
  3735  0E94  3A80               	xorlw	128
  3736  0E95  00A7               	movwf	??_pad
  3737  0E96  082B               	movf	pad@w+1,w
  3738  0E97  3A80               	xorlw	128
  3739  0E98  0227               	subwf	??_pad,w
  3740  0E99  1D03               	skipz
  3741  0E9A  2E9D               	goto	u1555
  3742  0E9B  082A               	movf	pad@w,w
  3743  0E9C  0228               	subwf	pad@i,w
  3744  0E9D                     u1555:	
  3745  0E9D  1803               	btfsc	3,0
  3746  0E9E  2EB1               	goto	l417
  3747                           
  3748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3749  0E9F  3020               	movlw	32
  3750  0EA0  00F2               	movwf	fputc@c
  3751  0EA1  3000               	movlw	0
  3752  0EA2  00F3               	movwf	fputc@c+1
  3753  0EA3  0020               	movlb	0	; select bank0
  3754  0EA4  082C               	movf	pad@fp,w
  3755  0EA5  00A7               	movwf	??_pad
  3756  0EA6  0827               	movf	??_pad,w
  3757  0EA7  00F4               	movwf	fputc@fp
  3758  0EA8  318E  2644  318E   	fcall	_fputc
  3759                           
  3760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3761  0EAB  3001               	movlw	1
  3762  0EAC  0020               	movlb	0	; select bank0
  3763  0EAD  07A8               	addwf	pad@i,f
  3764  0EAE  3000               	movlw	0
  3765  0EAF  3DA9               	addwfc	pad@i+1,f
  3766  0EB0  2E93               	goto	l2006
  3767  0EB1                     l417:	
  3768                           
  3769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3770  0EB1  0021               	movlb	1	; select bank1
  3771  0EB2  1826               	btfsc	_flags^(0+128),0
  3772  0EB3  2EBD               	goto	l418
  3773                           
  3774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3775  0EB4  0020               	movlb	0	; select bank0
  3776  0EB5  082C               	movf	pad@fp,w
  3777  0EB6  00A7               	movwf	??_pad
  3778  0EB7  0827               	movf	??_pad,w
  3779  0EB8  00FA               	movwf	fputs@fp
  3780  0EB9  0824               	movf	pad@buf,w
  3781  0EBA  318D  2597  318E   	fcall	_fputs
  3782  0EBD                     l418:	
  3783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  3784                           
  3785                           
  3786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3787  0EBD  0020               	movlb	0	; select bank0
  3788  0EBE  0824               	movf	pad@buf,w
  3789  0EBF  318C  2497         	fcall	_strlen
  3790  0EC1  0020               	movlb	0	; select bank0
  3791  0EC2  082A               	movf	pad@w,w
  3792  0EC3  0770               	addwf	?_strlen,w
  3793  0EC4  00A4               	movwf	?_pad
  3794  0EC5  082B               	movf	pad@w+1,w
  3795  0EC6  3D71               	addwfc	?_strlen+1,w
  3796  0EC7  00A5               	movwf	?_pad+1
  3797  0EC8  0008               	return
  3798  0EC9                     __end_of_pad:	
  3799                           
  3800                           	psect	text9
  3801  0C97                     __ptext9:	
  3802 ;; *************** function _strlen *****************
  3803 ;; Defined at:
  3804 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  s               1    wreg     PTR const unsigned char 
  3807 ;;		 -> dbuf(32), 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  s               1    4[COMMON] PTR const unsigned char 
  3810 ;;		 -> dbuf(32), 
  3811 ;;  a               1    3[COMMON] PTR const unsigned char 
  3812 ;;		 -> dbuf(32), 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  2    0[COMMON] unsigned int 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3822 ;;      Params:         2       0       0       0       0       0       0       0
  3823 ;;      Locals:         2       0       0       0       0       0       0       0
  3824 ;;      Temps:          1       0       0       0       0       0       0       0
  3825 ;;      Totals:         5       0       0       0       0       0       0       0
  3826 ;;Total ram usage:        5 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_pad
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function _strlen
  3837  0C97                     _strlen:	
  3838                           
  3839                           ;incstack = 0
  3840                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3841                           ;strlen@s stored from wreg
  3842  0C97  00F4               	movwf	strlen@s
  3843  0C98  0874               	movf	strlen@s,w
  3844  0C99  00F2               	movwf	??_strlen
  3845  0C9A  0872               	movf	??_strlen,w
  3846  0C9B  00F3               	movwf	strlen@a
  3847  0C9C                     l1982:	
  3848  0C9C  0874               	movf	strlen@s,w
  3849  0C9D  0086               	movwf	6
  3850  0C9E  0187               	clrf	7
  3851  0C9F  0801               	movf	1,w
  3852  0CA0  1903               	btfsc	3,2
  3853  0CA1  2CA7               	goto	l1984
  3854  0CA2  3001               	movlw	1
  3855  0CA3  00F2               	movwf	??_strlen
  3856  0CA4  0872               	movf	??_strlen,w
  3857  0CA5  07F4               	addwf	strlen@s,f
  3858  0CA6  2C9C               	goto	l1982
  3859  0CA7                     l1984:	
  3860  0CA7  0873               	movf	strlen@a,w
  3861  0CA8  0274               	subwf	strlen@s,w
  3862  0CA9  00F0               	movwf	?_strlen
  3863  0CAA  01F1               	clrf	?_strlen+1
  3864  0CAB  1BF0               	btfsc	?_strlen,7
  3865  0CAC  03F1               	decf	?_strlen+1,f
  3866  0CAD  0008               	return
  3867  0CAE                     __end_of_strlen:	
  3868                           
  3869                           	psect	text10
  3870  0D97                     __ptext10:	
  3871 ;; *************** function _fputs *****************
  3872 ;; Defined at:
  3873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  s               1    wreg     PTR const unsigned char 
  3876 ;;		 -> dbuf(32), 
  3877 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  3878 ;;		 -> NULL(0), 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3881 ;;		 -> dbuf(32), 
  3882 ;;  i               2    1[BANK0 ] int 
  3883 ;;  c               1    0[BANK0 ] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  2   10[COMMON] int 
  3886 ;; Registers used:
  3887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3893 ;;      Params:         1       0       0       0       0       0       0       0
  3894 ;;      Locals:         0       4       0       0       0       0       0       0
  3895 ;;      Temps:          3       0       0       0       0       0       0       0
  3896 ;;      Totals:         4       4       0       0       0       0       0       0
  3897 ;;Total ram usage:        8 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    3
  3900 ;; This function calls:
  3901 ;;		_fputc
  3902 ;; This function is called by:
  3903 ;;		_pad
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           
  3908                           ;psect for function _fputs
  3909  0D97                     _fputs:	
  3910                           
  3911                           ;incstack = 0
  3912                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3913                           ;fputs@s stored from wreg
  3914  0D97  0020               	movlb	0	; select bank0
  3915  0D98  00A3               	movwf	fputs@s
  3916  0D99  01A1               	clrf	fputs@i
  3917  0D9A  01A2               	clrf	fputs@i+1
  3918  0D9B                     l1976:	
  3919  0D9B  0821               	movf	fputs@i,w
  3920  0D9C  0723               	addwf	fputs@s,w
  3921  0D9D  00FB               	movwf	??_fputs
  3922  0D9E  087B               	movf	??_fputs,w
  3923  0D9F  0086               	movwf	6
  3924  0DA0  0187               	clrf	7
  3925  0DA1  0801               	movf	1,w
  3926  0DA2  00FC               	movwf	??_fputs+1
  3927  0DA3  087C               	movf	??_fputs+1,w
  3928  0DA4  00A0               	movwf	fputs@c
  3929  0DA5  0820               	movf	fputs@c,w
  3930  0DA6  1903               	btfsc	3,2
  3931  0DA7  0008               	return
  3932  0DA8  0820               	movf	fputs@c,w
  3933  0DA9  00FB               	movwf	??_fputs
  3934  0DAA  01FC               	clrf	??_fputs+1
  3935  0DAB  087B               	movf	??_fputs,w
  3936  0DAC  00F2               	movwf	fputc@c
  3937  0DAD  087C               	movf	??_fputs+1,w
  3938  0DAE  00F3               	movwf	fputc@c+1
  3939  0DAF  087A               	movf	fputs@fp,w
  3940  0DB0  00FD               	movwf	??_fputs+2
  3941  0DB1  087D               	movf	??_fputs+2,w
  3942  0DB2  00F4               	movwf	fputc@fp
  3943  0DB3  318E  2644  318D   	fcall	_fputc
  3944  0DB6  3001               	movlw	1
  3945  0DB7  0020               	movlb	0	; select bank0
  3946  0DB8  07A1               	addwf	fputs@i,f
  3947  0DB9  3000               	movlw	0
  3948  0DBA  3DA2               	addwfc	fputs@i+1,f
  3949  0DBB  2D9B               	goto	l1976
  3950  0DBC                     __end_of_fputs:	
  3951                           
  3952                           	psect	text11
  3953  0E44                     __ptext11:	
  3954 ;; *************** function _fputc *****************
  3955 ;; Defined at:
  3956 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  c               2    2[COMMON] int 
  3959 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  3960 ;;		 -> NULL(0), 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2    2[COMMON] int 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3972 ;;      Params:         3       0       0       0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0
  3974 ;;      Temps:          5       0       0       0       0       0       0       0
  3975 ;;      Totals:         8       0       0       0       0       0       0       0
  3976 ;;Total ram usage:        8 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    2
  3979 ;; This function calls:
  3980 ;;		_putch
  3981 ;; This function is called by:
  3982 ;;		_pad
  3983 ;;		_vfpfcnvrt
  3984 ;;		_fputs
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function _fputc
  3990  0E44                     _fputc:	
  3991                           
  3992                           ;incstack = 0
  3993                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3994  0E44  0874               	movf	fputc@fp,w
  3995  0E45  1D03               	btfss	3,2
  3996  0E46  0874               	movf	fputc@fp,w
  3997  0E47  1D03               	btfss	3,2
  3998  0E48  2E4D               	goto	l1962
  3999  0E49  0872               	movf	fputc@c,w
  4000  0E4A  318C  2411         	fcall	_putch
  4001  0E4C  0008               	return
  4002  0E4D                     l1962:	
  4003  0E4D  0874               	movf	fputc@fp,w
  4004  0E4E  3E03               	addlw	3
  4005  0E4F  0086               	movwf	6
  4006  0E50  0187               	clrf	7
  4007  0E51  0016               	moviw fsr1++
  4008  0E52  0401               	iorwf	1,w
  4009  0E53  1903               	btfsc	3,2
  4010  0E54  2E70               	goto	l1966
  4011  0E55  0874               	movf	fputc@fp,w
  4012  0E56  3E03               	addlw	3
  4013  0E57  0086               	movwf	6
  4014  0E58  0187               	clrf	7
  4015  0E59  3F40               	moviw [0]fsr1
  4016  0E5A  00F5               	movwf	??_fputc
  4017  0E5B  3F41               	moviw [1]fsr1
  4018  0E5C  00F6               	movwf	??_fputc+1
  4019  0E5D  0A74               	incf	fputc@fp,w
  4020  0E5E  0086               	movwf	6
  4021  0E5F  0187               	clrf	7
  4022  0E60  3F40               	moviw [0]fsr1
  4023  0E61  00F7               	movwf	??_fputc+2
  4024  0E62  3F41               	moviw [1]fsr1
  4025  0E63  00F8               	movwf	??_fputc+3
  4026  0E64  0878               	movf	??_fputc+3,w
  4027  0E65  3A80               	xorlw	128
  4028  0E66  00F9               	movwf	??_fputc+4
  4029  0E67  0876               	movf	??_fputc+1,w
  4030  0E68  3A80               	xorlw	128
  4031  0E69  0279               	subwf	??_fputc+4,w
  4032  0E6A  1D03               	skipz
  4033  0E6B  2E6E               	goto	u1485
  4034  0E6C  0875               	movf	??_fputc,w
  4035  0E6D  0277               	subwf	??_fputc+2,w
  4036  0E6E                     u1485:	
  4037  0E6E  1803               	skipnc
  4038  0E6F  0008               	return
  4039  0E70                     l1966:	
  4040  0E70  0A74               	incf	fputc@fp,w
  4041  0E71  0086               	movwf	6
  4042  0E72  0187               	clrf	7
  4043  0E73  3001               	movlw	1
  4044  0E74  0781               	addwf	1,f
  4045  0E75  3141               	addfsr 1,1
  4046  0E76  1803               	skipnc
  4047  0E77  0A81               	incf	1,f
  4048  0E78  0008               	return
  4049  0E79                     __end_of_fputc:	
  4050                           
  4051                           	psect	text12
  4052  0C11                     __ptext12:	
  4053 ;; *************** function _putch *****************
  4054 ;; Defined at:
  4055 ;;		line 146 in file "mcc_generated_files/eusart.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  txData          1    wreg     unsigned char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  txData          1    1[COMMON] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4069 ;;      Params:         0       0       0       0       0       0       0       0
  4070 ;;      Locals:         1       0       0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0
  4072 ;;      Totals:         1       0       0       0       0       0       0       0
  4073 ;;Total ram usage:        1 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    1
  4076 ;; This function calls:
  4077 ;;		_EUSART_Write
  4078 ;; This function is called by:
  4079 ;;		_fputc
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function _putch
  4085  0C11                     _putch:	
  4086                           
  4087                           ;incstack = 0
  4088                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4089                           ;putch@txData stored from wreg
  4090  0C11  00F1               	movwf	putch@txData
  4091                           
  4092                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  4093  0C12  0871               	movf	putch@txData,w
  4094  0C13  318C  243D         	fcall	_EUSART_Write
  4095  0C15  0008               	return
  4096  0C16                     __end_of_putch:	
  4097                           
  4098                           	psect	text13
  4099  0C3D                     __ptext13:	
  4100 ;; *************** function _EUSART_Write *****************
  4101 ;; Defined at:
  4102 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  txData          1    wreg     unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  txData          1    0[COMMON] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      void 
  4109 ;; Registers used:
  4110 ;;		wreg
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4116 ;;      Params:         0       0       0       0       0       0       0       0
  4117 ;;      Locals:         1       0       0       0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0       0       0       0
  4119 ;;      Totals:         1       0       0       0       0       0       0       0
  4120 ;;Total ram usage:        1 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_putch
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function _EUSART_Write
  4131  0C3D                     _EUSART_Write:	
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _EUSART_Write: [wreg]
  4135                           ;EUSART_Write@txData stored from wreg
  4136  0C3D  00F0               	movwf	EUSART_Write@txData
  4137  0C3E                     l103:	
  4138                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4139                           
  4140                           
  4141                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4142  0C3E  0020               	movlb	0	; select bank0
  4143  0C3F  1E11               	btfss	17,4	;volatile
  4144  0C40  2C3E               	goto	l103
  4145                           
  4146                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4147  0C41  0870               	movf	EUSART_Write@txData,w
  4148  0C42  0023               	movlb	3	; select bank3
  4149  0C43  009A               	movwf	26	;volatile
  4150  0C44  0008               	return
  4151  0C45                     __end_of_EUSART_Write:	
  4152                           
  4153                           	psect	text14
  4154  0C80                     __ptext14:	
  4155 ;; *************** function _isupper *****************
  4156 ;; Defined at:
  4157 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  c               2    0[COMMON] int 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  2    0[COMMON] int 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4171 ;;      Params:         2       0       0       0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0
  4173 ;;      Temps:          4       0       0       0       0       0       0       0
  4174 ;;      Totals:         6       0       0       0       0       0       0       0
  4175 ;;Total ram usage:        6 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_xtoa
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function _isupper
  4186  0C80                     _isupper:	
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in _isupper: [wreg+status,2+status,0]
  4190  0C80  0870               	movf	isupper@c,w
  4191  0C81  3EBF               	addlw	191
  4192  0C82  00F2               	movwf	??_isupper
  4193  0C83  30FF               	movlw	255
  4194  0C84  3D71               	addwfc	isupper@c+1,w
  4195  0C85  00F3               	movwf	??_isupper+1
  4196  0C86  3000               	movlw	0
  4197  0C87  0273               	subwf	??_isupper+1,w
  4198  0C88  301A               	movlw	26
  4199  0C89  1903               	skipnz
  4200  0C8A  0272               	subwf	??_isupper,w
  4201  0C8B  1803               	btfsc	3,0
  4202  0C8C  2C8F               	goto	u1570
  4203  0C8D  3001               	movlw	1
  4204  0C8E  2C90               	goto	u1580
  4205  0C8F                     u1570:	
  4206  0C8F  3000               	movlw	0
  4207  0C90                     u1580:	
  4208  0C90  00F4               	movwf	??_isupper+2
  4209  0C91  01F5               	clrf	??_isupper+3
  4210  0C92  0874               	movf	??_isupper+2,w
  4211  0C93  00F0               	movwf	?_isupper
  4212  0C94  0875               	movf	??_isupper+3,w
  4213  0C95  00F1               	movwf	?_isupper+1
  4214  0C96  0008               	return
  4215  0C97                     __end_of_isupper:	
  4216                           
  4217                           	psect	text15
  4218  0D15                     __ptext15:	
  4219 ;; *************** function _isalpha *****************
  4220 ;; Defined at:
  4221 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  c               2    0[COMMON] int 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    0[COMMON] int 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4235 ;;      Params:         2       0       0       0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0
  4237 ;;      Temps:          6       0       0       0       0       0       0       0
  4238 ;;      Totals:         8       0       0       0       0       0       0       0
  4239 ;;Total ram usage:        8 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_xtoa
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _isalpha
  4250  0D15                     _isalpha:	
  4251                           
  4252                           ;incstack = 0
  4253                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  4254  0D15  3020               	movlw	32
  4255  0D16  0470               	iorwf	isalpha@c,w
  4256  0D17  00F2               	movwf	??_isalpha
  4257  0D18  3000               	movlw	0
  4258  0D19  0471               	iorwf	isalpha@c+1,w
  4259  0D1A  00F3               	movwf	??_isalpha+1
  4260  0D1B  0872               	movf	??_isalpha,w
  4261  0D1C  3E9F               	addlw	159
  4262  0D1D  00F4               	movwf	??_isalpha+2
  4263  0D1E  30FF               	movlw	255
  4264  0D1F  3D73               	addwfc	??_isalpha+1,w
  4265  0D20  00F5               	movwf	??_isalpha+3
  4266  0D21  3000               	movlw	0
  4267  0D22  0275               	subwf	??_isalpha+3,w
  4268  0D23  301A               	movlw	26
  4269  0D24  1903               	skipnz
  4270  0D25  0274               	subwf	??_isalpha+2,w
  4271  0D26  1803               	btfsc	3,0
  4272  0D27  2D2A               	goto	u1590
  4273  0D28  3001               	movlw	1
  4274  0D29  2D2B               	goto	u1600
  4275  0D2A                     u1590:	
  4276  0D2A  3000               	movlw	0
  4277  0D2B                     u1600:	
  4278  0D2B  00F6               	movwf	??_isalpha+4
  4279  0D2C  01F7               	clrf	??_isalpha+5
  4280  0D2D  0876               	movf	??_isalpha+4,w
  4281  0D2E  00F0               	movwf	?_isalpha
  4282  0D2F  0877               	movf	??_isalpha+5,w
  4283  0D30  00F1               	movwf	?_isalpha+1
  4284  0D31  0008               	return
  4285  0D32                     __end_of_isalpha:	
  4286                           
  4287                           	psect	text16
  4288  0F5F                     __ptext16:	
  4289 ;; *************** function _atoi *****************
  4290 ;; Defined at:
  4291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  s               2    6[COMMON] PTR const unsigned char 
  4294 ;;		 -> STR_1(5), 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  n               2    7[BANK0 ] int 
  4297 ;;  neg             2    0[BANK0 ] int 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  2    6[COMMON] int 
  4300 ;; Registers used:
  4301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4307 ;;      Params:         2       0       0       0       0       0       0       0
  4308 ;;      Locals:         0       9       0       0       0       0       0       0
  4309 ;;      Temps:          4       0       0       0       0       0       0       0
  4310 ;;      Totals:         6       9       0       0       0       0       0       0
  4311 ;;Total ram usage:       15 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    1
  4314 ;; This function calls:
  4315 ;;		___wmul
  4316 ;;		_isdigit
  4317 ;;		_isspace
  4318 ;; This function is called by:
  4319 ;;		_vfpfcnvrt
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _atoi
  4325  0F5F                     _atoi:	
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4329  0F5F  0020               	movlb	0	; select bank0
  4330  0F60  01A7               	clrf	atoi@n
  4331  0F61  01A8               	clrf	atoi@n+1
  4332  0F62  01A0               	clrf	atoi@neg
  4333  0F63  01A1               	clrf	atoi@neg+1
  4334  0F64                     l2128:	
  4335  0F64  01A6               	clrf	_atoi$977
  4336  0F65  0AA6               	incf	_atoi$977,f
  4337  0F66  0876               	movf	atoi@s,w
  4338  0F67  0084               	movwf	4
  4339  0F68  0877               	movf	atoi@s+1,w
  4340  0F69  0085               	movwf	5
  4341  0F6A  0012               	moviw fsr0++
  4342  0F6B  3A20               	xorlw	32
  4343  0F6C  1903               	btfsc	3,2
  4344  0F6D  2F80               	goto	l2136
  4345  0F6E  0876               	movf	atoi@s,w
  4346  0F6F  0084               	movwf	4
  4347  0F70  0877               	movf	atoi@s+1,w
  4348  0F71  0085               	movwf	5
  4349  0F72  0800               	movf	0,w	;code access
  4350  0F73  3EF7               	addlw	247
  4351  0F74  00F8               	movwf	??_atoi
  4352  0F75  30FF               	movlw	255
  4353  0F76  1803               	skipnc
  4354  0F77  3000               	movlw	0
  4355  0F78  00F9               	movwf	??_atoi+1
  4356  0F79  3000               	movlw	0
  4357  0F7A  0279               	subwf	??_atoi+1,w
  4358  0F7B  3005               	movlw	5
  4359  0F7C  1903               	skipnz
  4360  0F7D  0278               	subwf	??_atoi,w
  4361  0F7E  1803               	btfsc	3,0
  4362  0F7F  01A6               	clrf	_atoi$977
  4363  0F80                     l2136:	
  4364  0F80  0826               	movf	_atoi$977,w
  4365  0F81  00F8               	movwf	??_atoi
  4366  0F82  01F9               	clrf	??_atoi+1
  4367  0F83  0878               	movf	??_atoi,w
  4368  0F84  00A2               	movwf	_atoi$976
  4369  0F85  0879               	movf	??_atoi+1,w
  4370  0F86  00A3               	movwf	_atoi$976+1
  4371  0F87  0822               	movf	_atoi$976,w
  4372  0F88  0423               	iorwf	_atoi$976+1,w
  4373  0F89  1903               	btfsc	3,2
  4374  0F8A  2F95               	goto	l2144
  4375  0F8B  3001               	movlw	1
  4376  0F8C  07F6               	addwf	atoi@s,f
  4377  0F8D  3000               	movlw	0
  4378  0F8E  3DF7               	addwfc	atoi@s+1,f
  4379  0F8F  2F64               	goto	l2128
  4380  0F90                     l2142:	
  4381  0F90  3001               	movlw	1
  4382  0F91  00A0               	movwf	atoi@neg
  4383  0F92  3000               	movlw	0
  4384  0F93  00A1               	movwf	atoi@neg+1
  4385  0F94  2FC8               	goto	l957
  4386  0F95                     l2144:	
  4387  0F95  0876               	movf	atoi@s,w
  4388  0F96  0084               	movwf	4
  4389  0F97  0877               	movf	atoi@s+1,w
  4390  0F98  0085               	movwf	5
  4391  0F99  0800               	movf	0,w	;code access
  4392  0F9A  00F8               	movwf	??_atoi
  4393  0F9B  01F9               	clrf	??_atoi+1
  4394                           
  4395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4396                           ; Switch size 1, requested type "simple"
  4397                           ; Number of cases is 1, Range of values is 0 to 0
  4398                           ; switch strategies available:
  4399                           ; Name         Instructions Cycles
  4400                           ; simple_byte            4     3 (average)
  4401                           ; direct_byte            8     6 (fixed)
  4402                           ; jumptable            260     6 (fixed)
  4403                           ;	Chosen strategy is simple_byte
  4404  0F9C  0879               	movf	??_atoi+1,w
  4405  0F9D  3A00               	xorlw	0	; case 0
  4406  0F9E  1903               	skipnz
  4407  0F9F  2FA1               	goto	l2810
  4408  0FA0  2FCC               	goto	l2150
  4409  0FA1                     l2810:	
  4410                           
  4411                           ; Switch size 1, requested type "simple"
  4412                           ; Number of cases is 2, Range of values is 43 to 45
  4413                           ; switch strategies available:
  4414                           ; Name         Instructions Cycles
  4415                           ; simple_byte            7     4 (average)
  4416                           ; direct_byte           15     9 (fixed)
  4417                           ; jumptable            263     9 (fixed)
  4418                           ;	Chosen strategy is simple_byte
  4419  0FA1  0878               	movf	??_atoi,w
  4420  0FA2  3A2B               	xorlw	43	; case 43
  4421  0FA3  1903               	skipnz
  4422  0FA4  2FC8               	goto	l957
  4423  0FA5  3A06               	xorlw	6	; case 45
  4424  0FA6  1903               	skipnz
  4425  0FA7  2F90               	goto	l2142
  4426  0FA8  2FCC               	goto	l2150
  4427  0FA9                     l2146:	
  4428  0FA9  0876               	movf	atoi@s,w
  4429  0FAA  0084               	movwf	4
  4430  0FAB  0877               	movf	atoi@s+1,w
  4431  0FAC  0085               	movwf	5
  4432  0FAD  0800               	movf	0,w	;code access
  4433  0FAE  00F8               	movwf	??_atoi
  4434  0FAF  0828               	movf	atoi@n+1,w
  4435  0FB0  00F1               	movwf	___wmul@multiplier+1
  4436  0FB1  0827               	movf	atoi@n,w
  4437  0FB2  00F0               	movwf	___wmul@multiplier
  4438  0FB3  300A               	movlw	10
  4439  0FB4  00F2               	movwf	___wmul@multiplicand
  4440  0FB5  3000               	movlw	0
  4441  0FB6  00F3               	movwf	___wmul@multiplicand+1
  4442  0FB7  318C  24DE  318F   	fcall	___wmul
  4443  0FBA  0871               	movf	?___wmul+1,w
  4444  0FBB  00FA               	movwf	??_atoi+2
  4445  0FBC  0878               	movf	??_atoi,w
  4446  0FBD  0270               	subwf	?___wmul,w
  4447  0FBE  00F9               	movwf	??_atoi+1
  4448  0FBF  1C03               	skipc
  4449  0FC0  03FA               	decf	??_atoi+2,f
  4450  0FC1  0879               	movf	??_atoi+1,w
  4451  0FC2  3E30               	addlw	48
  4452  0FC3  0020               	movlb	0	; select bank0
  4453  0FC4  00A7               	movwf	atoi@n
  4454  0FC5  3000               	movlw	0
  4455  0FC6  3D7A               	addwfc	??_atoi+2,w
  4456  0FC7  00A8               	movwf	atoi@n+1
  4457  0FC8                     l957:	
  4458  0FC8  3001               	movlw	1
  4459  0FC9  07F6               	addwf	atoi@s,f
  4460  0FCA  3000               	movlw	0
  4461  0FCB  3DF7               	addwfc	atoi@s+1,f
  4462  0FCC                     l2150:	
  4463  0FCC  0876               	movf	atoi@s,w
  4464  0FCD  0084               	movwf	4
  4465  0FCE  0877               	movf	atoi@s+1,w
  4466  0FCF  0085               	movwf	5
  4467  0FD0  0800               	movf	0,w	;code access
  4468  0FD1  3ED0               	addlw	208
  4469  0FD2  00F8               	movwf	??_atoi
  4470  0FD3  30FF               	movlw	255
  4471  0FD4  1803               	skipnc
  4472  0FD5  3000               	movlw	0
  4473  0FD6  00F9               	movwf	??_atoi+1
  4474  0FD7  3000               	movlw	0
  4475  0FD8  0279               	subwf	??_atoi+1,w
  4476  0FD9  300A               	movlw	10
  4477  0FDA  1903               	skipnz
  4478  0FDB  0278               	subwf	??_atoi,w
  4479  0FDC  1803               	btfsc	3,0
  4480  0FDD  2FE0               	goto	u1920
  4481  0FDE  3001               	movlw	1
  4482  0FDF  2FE1               	goto	u1930
  4483  0FE0                     u1920:	
  4484  0FE0  3000               	movlw	0
  4485  0FE1                     u1930:	
  4486  0FE1  00FA               	movwf	??_atoi+2
  4487  0FE2  01FB               	clrf	??_atoi+3
  4488  0FE3  087A               	movf	??_atoi+2,w
  4489  0FE4  00A4               	movwf	_atoi$978
  4490  0FE5  087B               	movf	??_atoi+3,w
  4491  0FE6  00A5               	movwf	_atoi$978+1
  4492  0FE7  0824               	movf	_atoi$978,w
  4493  0FE8  0425               	iorwf	_atoi$978+1,w
  4494  0FE9  1D03               	btfss	3,2
  4495  0FEA  2FA9               	goto	l2146
  4496  0FEB  0820               	movf	atoi@neg,w
  4497  0FEC  0421               	iorwf	atoi@neg+1,w
  4498  0FED  1D03               	btfss	3,2
  4499  0FEE  2FFB               	goto	l2160
  4500  0FEF  0927               	comf	atoi@n,w
  4501  0FF0  00F8               	movwf	??_atoi
  4502  0FF1  0928               	comf	atoi@n+1,w
  4503  0FF2  00F9               	movwf	??_atoi+1
  4504  0FF3  0AF8               	incf	??_atoi,f
  4505  0FF4  1903               	skipnz
  4506  0FF5  0AF9               	incf	??_atoi+1,f
  4507  0FF6  0878               	movf	??_atoi,w
  4508  0FF7  00F6               	movwf	?_atoi
  4509  0FF8  0879               	movf	??_atoi+1,w
  4510  0FF9  00F7               	movwf	?_atoi+1
  4511  0FFA  0008               	return
  4512  0FFB                     l2160:	
  4513  0FFB  0828               	movf	atoi@n+1,w
  4514  0FFC  00F7               	movwf	?_atoi+1
  4515  0FFD  0827               	movf	atoi@n,w
  4516  0FFE  00F6               	movwf	?_atoi
  4517  0FFF  0008               	return
  4518  1000                     __end_of_atoi:	
  4519                           
  4520                           	psect	text17
  4521  0CF9                     __ptext17:	
  4522 ;; *************** function _isspace *****************
  4523 ;; Defined at:
  4524 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  c               2    0[COMMON] int 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2    0[COMMON] int 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4538 ;;      Params:         2       0       0       0       0       0       0       0
  4539 ;;      Locals:         1       0       0       0       0       0       0       0
  4540 ;;      Temps:          2       0       0       0       0       0       0       0
  4541 ;;      Totals:         5       0       0       0       0       0       0       0
  4542 ;;Total ram usage:        5 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_atoi
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _isspace
  4553  0CF9                     _isspace:	
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _isspace: [wreg+status,2+status,0]
  4557  0CF9  01F4               	clrf	_isspace$1003
  4558  0CFA  0AF4               	incf	_isspace$1003,f
  4559  0CFB  3020               	movlw	32
  4560  0CFC  0670               	xorwf	isspace@c,w
  4561  0CFD  0471               	iorwf	isspace@c+1,w
  4562  0CFE  1903               	btfsc	3,2
  4563  0CFF  2D0D               	goto	l2056
  4564  0D00  0870               	movf	isspace@c,w
  4565  0D01  3EF7               	addlw	247
  4566  0D02  00F2               	movwf	??_isspace
  4567  0D03  30FF               	movlw	255
  4568  0D04  3D71               	addwfc	isspace@c+1,w
  4569  0D05  00F3               	movwf	??_isspace+1
  4570  0D06  3000               	movlw	0
  4571  0D07  0273               	subwf	??_isspace+1,w
  4572  0D08  3005               	movlw	5
  4573  0D09  1903               	skipnz
  4574  0D0A  0272               	subwf	??_isspace,w
  4575  0D0B  1803               	btfsc	3,0
  4576  0D0C  01F4               	clrf	_isspace$1003
  4577  0D0D                     l2056:	
  4578  0D0D  0874               	movf	_isspace$1003,w
  4579  0D0E  00F2               	movwf	??_isspace
  4580  0D0F  01F3               	clrf	??_isspace+1
  4581  0D10  0872               	movf	??_isspace,w
  4582  0D11  00F0               	movwf	?_isspace
  4583  0D12  0873               	movf	??_isspace+1,w
  4584  0D13  00F1               	movwf	?_isspace+1
  4585  0D14  0008               	return
  4586  0D15                     __end_of_isspace:	
  4587                           
  4588                           	psect	text18
  4589  0C69                     __ptext18:	
  4590 ;; *************** function _isdigit *****************
  4591 ;; Defined at:
  4592 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  c               2    0[COMMON] int 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  2    0[COMMON] int 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4606 ;;      Params:         2       0       0       0       0       0       0       0
  4607 ;;      Locals:         0       0       0       0       0       0       0       0
  4608 ;;      Temps:          4       0       0       0       0       0       0       0
  4609 ;;      Totals:         6       0       0       0       0       0       0       0
  4610 ;;Total ram usage:        6 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_vfpfcnvrt
  4616 ;;		_atoi
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function _isdigit
  4622  0C69                     _isdigit:	
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4626  0C69  0870               	movf	isdigit@c,w
  4627  0C6A  3ED0               	addlw	208
  4628  0C6B  00F2               	movwf	??_isdigit
  4629  0C6C  30FF               	movlw	255
  4630  0C6D  3D71               	addwfc	isdigit@c+1,w
  4631  0C6E  00F3               	movwf	??_isdigit+1
  4632  0C6F  3000               	movlw	0
  4633  0C70  0273               	subwf	??_isdigit+1,w
  4634  0C71  300A               	movlw	10
  4635  0C72  1903               	skipnz
  4636  0C73  0272               	subwf	??_isdigit,w
  4637  0C74  1803               	btfsc	3,0
  4638  0C75  2C78               	goto	u1640
  4639  0C76  3001               	movlw	1
  4640  0C77  2C79               	goto	u1650
  4641  0C78                     u1640:	
  4642  0C78  3000               	movlw	0
  4643  0C79                     u1650:	
  4644  0C79  00F4               	movwf	??_isdigit+2
  4645  0C7A  01F5               	clrf	??_isdigit+3
  4646  0C7B  0874               	movf	??_isdigit+2,w
  4647  0C7C  00F0               	movwf	?_isdigit
  4648  0C7D  0875               	movf	??_isdigit+3,w
  4649  0C7E  00F1               	movwf	?_isdigit+1
  4650  0C7F  0008               	return
  4651  0C80                     __end_of_isdigit:	
  4652                           
  4653                           	psect	text19
  4654  0CDE                     __ptext19:	
  4655 ;; *************** function ___wmul *****************
  4656 ;; Defined at:
  4657 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  multiplier      2    0[COMMON] unsigned int 
  4660 ;;  multiplicand    2    2[COMMON] unsigned int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  product         2    4[COMMON] unsigned int 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  2    0[COMMON] unsigned int 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4672 ;;      Params:         4       0       0       0       0       0       0       0
  4673 ;;      Locals:         2       0       0       0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0
  4675 ;;      Totals:         6       0       0       0       0       0       0       0
  4676 ;;Total ram usage:        6 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_atoi
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           
  4686                           ;psect for function ___wmul
  4687  0CDE                     ___wmul:	
  4688                           
  4689                           ;incstack = 0
  4690                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4691  0CDE  01F4               	clrf	___wmul@product
  4692  0CDF  01F5               	clrf	___wmul@product+1
  4693  0CE0                     l2036:	
  4694  0CE0  1C70               	btfss	___wmul@multiplier,0
  4695  0CE1  2CE6               	goto	l489
  4696  0CE2  0872               	movf	___wmul@multiplicand,w
  4697  0CE3  07F4               	addwf	___wmul@product,f
  4698  0CE4  0873               	movf	___wmul@multiplicand+1,w
  4699  0CE5  3DF5               	addwfc	___wmul@product+1,f
  4700  0CE6                     l489:	
  4701  0CE6  3001               	movlw	1
  4702  0CE7                     u1675:	
  4703  0CE7  35F2               	lslf	___wmul@multiplicand,f
  4704  0CE8  0DF3               	rlf	___wmul@multiplicand+1,f
  4705  0CE9  0B89               	decfsz	9,f
  4706  0CEA  2CE7               	goto	u1675
  4707  0CEB  3001               	movlw	1
  4708  0CEC                     u1685:	
  4709  0CEC  36F1               	lsrf	___wmul@multiplier+1,f
  4710  0CED  0CF0               	rrf	___wmul@multiplier,f
  4711  0CEE  0B89               	decfsz	9,f
  4712  0CEF  2CEC               	goto	u1685
  4713  0CF0  0870               	movf	___wmul@multiplier,w
  4714  0CF1  0471               	iorwf	___wmul@multiplier+1,w
  4715  0CF2  1D03               	btfss	3,2
  4716  0CF3  2CE0               	goto	l2036
  4717  0CF4  0875               	movf	___wmul@product+1,w
  4718  0CF5  00F1               	movwf	?___wmul+1
  4719  0CF6  0874               	movf	___wmul@product,w
  4720  0CF7  00F0               	movwf	?___wmul
  4721  0CF8  0008               	return
  4722  0CF9                     __end_of___wmul:	
  4723                           
  4724                           	psect	text20
  4725  0DE3                     __ptext20:	
  4726 ;; *************** function _checksum *****************
  4727 ;; Defined at:
  4728 ;;		line 18 in file "main.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  data            1    wreg     PTR void 
  4731 ;;		 -> trama2(17), 
  4732 ;;  size_trama      1    0[COMMON] unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  data            1    3[COMMON] PTR void 
  4735 ;;		 -> trama2(17), 
  4736 ;;  contador        1    6[COMMON] unsigned char 
  4737 ;;  i               1    5[COMMON] unsigned char 
  4738 ;;  puntero         1    4[COMMON] PTR unsigned char 
  4739 ;;		 -> trama2(17), 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      unsigned char 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4749 ;;      Params:         1       0       0       0       0       0       0       0
  4750 ;;      Locals:         4       0       0       0       0       0       0       0
  4751 ;;      Temps:          2       0       0       0       0       0       0       0
  4752 ;;      Totals:         7       0       0       0       0       0       0       0
  4753 ;;Total ram usage:        7 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           
  4763                           ;psect for function _checksum
  4764  0DE3                     _checksum:	
  4765                           
  4766                           ;incstack = 0
  4767                           ; Regs used in _checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4768                           ;checksum@data stored from wreg
  4769  0DE3  00F3               	movwf	checksum@data
  4770                           
  4771                           ;main.c: 20:     unsigned char* puntero = data;
  4772  0DE4  0873               	movf	checksum@data,w
  4773  0DE5  00F1               	movwf	??_checksum
  4774  0DE6  0871               	movf	??_checksum,w
  4775  0DE7  00F4               	movwf	checksum@puntero
  4776                           
  4777                           ;main.c: 21:     unsigned char i;;main.c: 22:     contador = puntero[0];
  4778  0DE8  0874               	movf	checksum@puntero,w
  4779  0DE9  0086               	movwf	6
  4780  0DEA  0187               	clrf	7
  4781  0DEB  0801               	movf	1,w
  4782  0DEC  00F1               	movwf	??_checksum
  4783  0DED  0871               	movf	??_checksum,w
  4784  0DEE  00F6               	movwf	checksum@contador
  4785                           
  4786                           ;main.c: 23:     for (i = 0; i < size_trama - 1; i++) {
  4787  0DEF  01F5               	clrf	checksum@i
  4788  0DF0                     l2390:	
  4789  0DF0  0870               	movf	checksum@size_trama,w
  4790  0DF1  3EFF               	addlw	255
  4791  0DF2  00F1               	movwf	??_checksum
  4792  0DF3  30FF               	movlw	255
  4793  0DF4  1803               	skipnc
  4794  0DF5  3000               	movlw	0
  4795  0DF6  00F2               	movwf	??_checksum+1
  4796  0DF7  0872               	movf	??_checksum+1,w
  4797  0DF8  3A80               	xorlw	128
  4798  0DF9  3C80               	sublw	128
  4799  0DFA  1D03               	skipz
  4800  0DFB  2DFE               	goto	u2145
  4801  0DFC  0871               	movf	??_checksum,w
  4802  0DFD  0275               	subwf	checksum@i,w
  4803  0DFE                     u2145:	
  4804  0DFE  1803               	btfsc	3,0
  4805  0DFF  2E10               	goto	l2392
  4806                           
  4807                           ;main.c: 24:         contador = contador^puntero[i + 1];
  4808  0E00  0875               	movf	checksum@i,w
  4809  0E01  0774               	addwf	checksum@puntero,w
  4810  0E02  00F1               	movwf	??_checksum
  4811  0E03  0A71               	incf	??_checksum,w
  4812  0E04  0086               	movwf	6
  4813  0E05  0187               	clrf	7
  4814  0E06  0801               	movf	1,w
  4815  0E07  0676               	xorwf	checksum@contador,w
  4816  0E08  00F2               	movwf	??_checksum+1
  4817  0E09  0872               	movf	??_checksum+1,w
  4818  0E0A  00F6               	movwf	checksum@contador
  4819                           
  4820                           ;main.c: 25:     }
  4821  0E0B  3001               	movlw	1
  4822  0E0C  00F1               	movwf	??_checksum
  4823  0E0D  0871               	movf	??_checksum,w
  4824  0E0E  07F5               	addwf	checksum@i,f
  4825  0E0F  2DF0               	goto	l2390
  4826  0E10                     l2392:	
  4827                           
  4828                           ;main.c: 26:     return (contador);
  4829  0E10  0876               	movf	checksum@contador,w
  4830  0E11  0008               	return
  4831  0E12                     __end_of_checksum:	
  4832                           
  4833                           	psect	text21
  4834  0EC9                     __ptext21:	
  4835 ;; *************** function ___xxtofl *****************
  4836 ;; Defined at:
  4837 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  sign            1    wreg     unsigned char 
  4840 ;;  val             4    4[COMMON] long 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  sign            1    0[BANK0 ] unsigned char 
  4843 ;;  arg             4    2[BANK0 ] unsigned long 
  4844 ;;  exp             1    1[BANK0 ] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  4    4[COMMON] unsigned char 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4854 ;;      Params:         4       0       0       0       0       0       0       0
  4855 ;;      Locals:         0       6       0       0       0       0       0       0
  4856 ;;      Temps:          4       0       0       0       0       0       0       0
  4857 ;;      Totals:         8       6       0       0       0       0       0       0
  4858 ;;Total ram usage:       14 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           
  4868                           ;psect for function ___xxtofl
  4869  0EC9                     ___xxtofl:	
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4873                           ;___xxtofl@sign stored from wreg
  4874  0EC9  0020               	movlb	0	; select bank0
  4875  0ECA  00A0               	movwf	___xxtofl@sign
  4876  0ECB  0820               	movf	___xxtofl@sign,w
  4877  0ECC  1D03               	btfss	3,2
  4878  0ECD  1FF7               	btfss	___xxtofl@val+3,7
  4879  0ECE  2EDF               	goto	l2694
  4880  0ECF  0974               	comf	___xxtofl@val,w
  4881  0ED0  00A2               	movwf	___xxtofl@arg
  4882  0ED1  0975               	comf	___xxtofl@val+1,w
  4883  0ED2  00A3               	movwf	___xxtofl@arg+1
  4884  0ED3  0976               	comf	___xxtofl@val+2,w
  4885  0ED4  00A4               	movwf	___xxtofl@arg+2
  4886  0ED5  0977               	comf	___xxtofl@val+3,w
  4887  0ED6  00A5               	movwf	___xxtofl@arg+3
  4888  0ED7  0AA2               	incf	___xxtofl@arg,f
  4889  0ED8  1903               	skipnz
  4890  0ED9  0AA3               	incf	___xxtofl@arg+1,f
  4891  0EDA  1903               	skipnz
  4892  0EDB  0AA4               	incf	___xxtofl@arg+2,f
  4893  0EDC  1903               	skipnz
  4894  0EDD  0AA5               	incf	___xxtofl@arg+3,f
  4895  0EDE  2EE7               	goto	l924
  4896  0EDF                     l2694:	
  4897  0EDF  0877               	movf	___xxtofl@val+3,w
  4898  0EE0  00A5               	movwf	___xxtofl@arg+3
  4899  0EE1  0876               	movf	___xxtofl@val+2,w
  4900  0EE2  00A4               	movwf	___xxtofl@arg+2
  4901  0EE3  0875               	movf	___xxtofl@val+1,w
  4902  0EE4  00A3               	movwf	___xxtofl@arg+1
  4903  0EE5  0874               	movf	___xxtofl@val,w
  4904  0EE6  00A2               	movwf	___xxtofl@arg
  4905  0EE7                     l924:	
  4906  0EE7  0877               	movf	___xxtofl@val+3,w
  4907  0EE8  0476               	iorwf	___xxtofl@val+2,w
  4908  0EE9  0475               	iorwf	___xxtofl@val+1,w
  4909  0EEA  0474               	iorwf	___xxtofl@val,w
  4910  0EEB  1D03               	skipz
  4911  0EEC  2EF6               	goto	l2700
  4912  0EED  3000               	movlw	0
  4913  0EEE  00F7               	movwf	?___xxtofl+3
  4914  0EEF  3000               	movlw	0
  4915  0EF0  00F6               	movwf	?___xxtofl+2
  4916  0EF1  3000               	movlw	0
  4917  0EF2  00F5               	movwf	?___xxtofl+1
  4918  0EF3  3000               	movlw	0
  4919  0EF4  00F4               	movwf	?___xxtofl
  4920  0EF5  0008               	return
  4921  0EF6                     l2700:	
  4922  0EF6  3096               	movlw	150
  4923  0EF7  00F8               	movwf	??___xxtofl
  4924  0EF8  0878               	movf	??___xxtofl,w
  4925  0EF9  00A1               	movwf	___xxtofl@exp
  4926  0EFA                     l2704:	
  4927  0EFA  30FE               	movlw	254
  4928  0EFB  0525               	andwf	___xxtofl@arg+3,w
  4929  0EFC  1903               	btfsc	3,2
  4930  0EFD  2F1D               	goto	l930
  4931  0EFE  3001               	movlw	1
  4932  0EFF  00F8               	movwf	??___xxtofl
  4933  0F00  0878               	movf	??___xxtofl,w
  4934  0F01  07A1               	addwf	___xxtofl@exp,f
  4935  0F02  3001               	movlw	1
  4936  0F03                     u2745:	
  4937  0F03  36A5               	lsrf	___xxtofl@arg+3,f
  4938  0F04  0CA4               	rrf	___xxtofl@arg+2,f
  4939  0F05  0CA3               	rrf	___xxtofl@arg+1,f
  4940  0F06  0CA2               	rrf	___xxtofl@arg,f
  4941  0F07  0B89               	decfsz	9,f
  4942  0F08  2F03               	goto	u2745
  4943  0F09  2EFA               	goto	l2704
  4944  0F0A                     l2706:	
  4945  0F0A  3001               	movlw	1
  4946  0F0B  00F8               	movwf	??___xxtofl
  4947  0F0C  0878               	movf	??___xxtofl,w
  4948  0F0D  07A1               	addwf	___xxtofl@exp,f
  4949  0F0E  3001               	movlw	1
  4950  0F0F  07A2               	addwf	___xxtofl@arg,f
  4951  0F10  3000               	movlw	0
  4952  0F11  3DA3               	addwfc	___xxtofl@arg+1,f
  4953  0F12  3000               	movlw	0
  4954  0F13  3DA4               	addwfc	___xxtofl@arg+2,f
  4955  0F14  3000               	movlw	0
  4956  0F15  3DA5               	addwfc	___xxtofl@arg+3,f
  4957  0F16  3001               	movlw	1
  4958  0F17                     u2765:	
  4959  0F17  36A5               	lsrf	___xxtofl@arg+3,f
  4960  0F18  0CA4               	rrf	___xxtofl@arg+2,f
  4961  0F19  0CA3               	rrf	___xxtofl@arg+1,f
  4962  0F1A  0CA2               	rrf	___xxtofl@arg,f
  4963  0F1B  0B89               	decfsz	9,f
  4964  0F1C  2F17               	goto	u2765
  4965  0F1D                     l930:	
  4966  0F1D  30FF               	movlw	255
  4967  0F1E  0525               	andwf	___xxtofl@arg+3,w
  4968  0F1F  1903               	btfsc	3,2
  4969  0F20  2F2F               	goto	l2714
  4970  0F21  2F0A               	goto	l2706
  4971  0F22                     l2716:	
  4972  0F22  3002               	movlw	2
  4973  0F23  0221               	subwf	___xxtofl@exp,w
  4974  0F24  1C03               	btfss	3,0
  4975  0F25  2F31               	goto	l937
  4976  0F26  3001               	movlw	1
  4977  0F27  02A1               	subwf	___xxtofl@exp,f
  4978  0F28  3001               	movlw	1
  4979  0F29                     u2785:	
  4980  0F29  35A2               	lslf	___xxtofl@arg,f
  4981  0F2A  0DA3               	rlf	___xxtofl@arg+1,f
  4982  0F2B  0DA4               	rlf	___xxtofl@arg+2,f
  4983  0F2C  0DA5               	rlf	___xxtofl@arg+3,f
  4984  0F2D  0B89               	decfsz	9,f
  4985  0F2E  2F29               	goto	u2785
  4986  0F2F                     l2714:	
  4987  0F2F  1FA4               	btfss	___xxtofl@arg+2,7
  4988  0F30  2F22               	goto	l2716
  4989  0F31                     l937:	
  4990  0F31  1821               	btfsc	___xxtofl@exp,0
  4991  0F32  2F3B               	goto	l938
  4992  0F33  30FF               	movlw	255
  4993  0F34  05A2               	andwf	___xxtofl@arg,f
  4994  0F35  30FF               	movlw	255
  4995  0F36  05A3               	andwf	___xxtofl@arg+1,f
  4996  0F37  307F               	movlw	127
  4997  0F38  05A4               	andwf	___xxtofl@arg+2,f
  4998  0F39  30FF               	movlw	255
  4999  0F3A  05A5               	andwf	___xxtofl@arg+3,f
  5000  0F3B                     l938:	
  5001  0F3B  1003               	clrc
  5002  0F3C  0CA1               	rrf	___xxtofl@exp,f
  5003  0F3D  0821               	movf	___xxtofl@exp,w
  5004  0F3E  00F8               	movwf	??___xxtofl
  5005  0F3F  01F9               	clrf	??___xxtofl+1
  5006  0F40  01FA               	clrf	??___xxtofl+2
  5007  0F41  01FB               	clrf	??___xxtofl+3
  5008  0F42  3018               	movlw	24
  5009  0F43                     u2825:	
  5010  0F43  35F8               	lslf	??___xxtofl,f
  5011  0F44  0DF9               	rlf	??___xxtofl+1,f
  5012  0F45  0DFA               	rlf	??___xxtofl+2,f
  5013  0F46  0DFB               	rlf	??___xxtofl+3,f
  5014  0F47  0B89               	decfsz	9,f
  5015  0F48  2F43               	goto	u2825
  5016  0F49  0878               	movf	??___xxtofl,w
  5017  0F4A  04A2               	iorwf	___xxtofl@arg,f
  5018  0F4B  0879               	movf	??___xxtofl+1,w
  5019  0F4C  04A3               	iorwf	___xxtofl@arg+1,f
  5020  0F4D  087A               	movf	??___xxtofl+2,w
  5021  0F4E  04A4               	iorwf	___xxtofl@arg+2,f
  5022  0F4F  087B               	movf	??___xxtofl+3,w
  5023  0F50  04A5               	iorwf	___xxtofl@arg+3,f
  5024  0F51  0820               	movf	___xxtofl@sign,w
  5025  0F52  1D03               	btfss	3,2
  5026  0F53  1FF7               	btfss	___xxtofl@val+3,7
  5027  0F54  2F56               	goto	l2728
  5028  0F55  17A5               	bsf	___xxtofl@arg+3,7
  5029  0F56                     l2728:	
  5030  0F56  0825               	movf	___xxtofl@arg+3,w
  5031  0F57  00F7               	movwf	?___xxtofl+3
  5032  0F58  0824               	movf	___xxtofl@arg+2,w
  5033  0F59  00F6               	movwf	?___xxtofl+2
  5034  0F5A  0823               	movf	___xxtofl@arg+1,w
  5035  0F5B  00F5               	movwf	?___xxtofl+1
  5036  0F5C  0822               	movf	___xxtofl@arg,w
  5037  0F5D  00F4               	movwf	?___xxtofl
  5038  0F5E  0008               	return
  5039  0F5F                     __end_of___xxtofl:	
  5040                           
  5041                           	psect	text22
  5042  05CA                     __ptext22:	
  5043 ;; *************** function ___flmul *****************
  5044 ;; Defined at:
  5045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  b               4   32[BANK0 ] unsigned char 
  5048 ;;  a               4   36[BANK0 ] unsigned char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  prod            4   52[BANK0 ] struct .
  5051 ;;  grs             4   46[BANK0 ] unsigned long 
  5052 ;;  temp            2   56[BANK0 ] struct .
  5053 ;;  bexp            1   51[BANK0 ] unsigned char 
  5054 ;;  aexp            1   50[BANK0 ] unsigned char 
  5055 ;;  sign            1   45[BANK0 ] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  4   32[BANK0 ] unsigned char 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0, pclath, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5065 ;;      Params:         0       8       0       0       0       0       0       0
  5066 ;;      Locals:         0      13       0       0       0       0       0       0
  5067 ;;      Temps:          0       5       0       0       0       0       0       0
  5068 ;;      Totals:         0      26       0       0       0       0       0       0
  5069 ;;Total ram usage:       26 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    1
  5072 ;; This function calls:
  5073 ;;		__Umul8_16
  5074 ;; This function is called by:
  5075 ;;		_main
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           
  5080                           ;psect for function ___flmul
  5081  05CA                     ___flmul:	
  5082                           
  5083                           ;incstack = 0
  5084                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5085  05CA  0020               	movlb	0	; select bank0
  5086  05CB  0843               	movf	___flmul@b+3,w
  5087  05CC  3980               	andlw	128
  5088  05CD  00C8               	movwf	??___flmul
  5089  05CE  0848               	movf	??___flmul,w
  5090  05CF  00CD               	movwf	___flmul@sign
  5091  05D0  3543               	lslf	___flmul@b+3,w
  5092  05D1  00C8               	movwf	??___flmul
  5093  05D2  0848               	movf	??___flmul,w
  5094  05D3  00D3               	movwf	___flmul@bexp
  5095  05D4  1BC2               	btfsc	___flmul@b+2,7
  5096  05D5  1453               	bsf	___flmul@bexp,0
  5097  05D6  0853               	movf	___flmul@bexp,w
  5098  05D7  1903               	btfsc	3,2
  5099  05D8  2DE6               	goto	l2564
  5100  05D9  0A53               	incf	___flmul@bexp,w
  5101  05DA  1D03               	btfss	3,2
  5102  05DB  2DE4               	goto	l2562
  5103  05DC  3000               	movlw	0
  5104  05DD  00C3               	movwf	___flmul@b+3
  5105  05DE  3000               	movlw	0
  5106  05DF  00C2               	movwf	___flmul@b+2
  5107  05E0  3000               	movlw	0
  5108  05E1  00C1               	movwf	___flmul@b+1
  5109  05E2  3000               	movlw	0
  5110  05E3  00C0               	movwf	___flmul@b
  5111  05E4                     l2562:	
  5112  05E4  17C2               	bsf	___flmul@b+2,7
  5113  05E5  2DEE               	goto	l2566
  5114  05E6                     l2564:	
  5115  05E6  3000               	movlw	0
  5116  05E7  00C3               	movwf	___flmul@b+3
  5117  05E8  3000               	movlw	0
  5118  05E9  00C2               	movwf	___flmul@b+2
  5119  05EA  3000               	movlw	0
  5120  05EB  00C1               	movwf	___flmul@b+1
  5121  05EC  3000               	movlw	0
  5122  05ED  00C0               	movwf	___flmul@b
  5123  05EE                     l2566:	
  5124  05EE  0847               	movf	___flmul@a+3,w
  5125  05EF  3980               	andlw	128
  5126  05F0  00C8               	movwf	??___flmul
  5127  05F1  0848               	movf	??___flmul,w
  5128  05F2  06CD               	xorwf	___flmul@sign,f
  5129  05F3  3547               	lslf	___flmul@a+3,w
  5130  05F4  00C8               	movwf	??___flmul
  5131  05F5  0848               	movf	??___flmul,w
  5132  05F6  00D2               	movwf	___flmul@aexp
  5133  05F7  1BC6               	btfsc	___flmul@a+2,7
  5134  05F8  1452               	bsf	___flmul@aexp,0
  5135  05F9  0852               	movf	___flmul@aexp,w
  5136  05FA  1903               	btfsc	3,2
  5137  05FB  2E09               	goto	l2582
  5138  05FC  0A52               	incf	___flmul@aexp,w
  5139  05FD  1D03               	btfss	3,2
  5140  05FE  2E07               	goto	l2580
  5141  05FF  3000               	movlw	0
  5142  0600  00C7               	movwf	___flmul@a+3
  5143  0601  3000               	movlw	0
  5144  0602  00C6               	movwf	___flmul@a+2
  5145  0603  3000               	movlw	0
  5146  0604  00C5               	movwf	___flmul@a+1
  5147  0605  3000               	movlw	0
  5148  0606  00C4               	movwf	___flmul@a
  5149  0607                     l2580:	
  5150  0607  17C6               	bsf	___flmul@a+2,7
  5151  0608  2E11               	goto	l2584
  5152  0609                     l2582:	
  5153  0609  3000               	movlw	0
  5154  060A  00C7               	movwf	___flmul@a+3
  5155  060B  3000               	movlw	0
  5156  060C  00C6               	movwf	___flmul@a+2
  5157  060D  3000               	movlw	0
  5158  060E  00C5               	movwf	___flmul@a+1
  5159  060F  3000               	movlw	0
  5160  0610  00C4               	movwf	___flmul@a
  5161  0611                     l2584:	
  5162  0611  0852               	movf	___flmul@aexp,w
  5163  0612  1D03               	btfss	3,2
  5164  0613  0853               	movf	___flmul@bexp,w
  5165  0614  1D03               	btfss	3,2
  5166  0615  2E1F               	goto	l2592
  5167  0616  3000               	movlw	0
  5168  0617  00C3               	movwf	?___flmul+3
  5169  0618  3000               	movlw	0
  5170  0619  00C2               	movwf	?___flmul+2
  5171  061A  3000               	movlw	0
  5172  061B  00C1               	movwf	?___flmul+1
  5173  061C  3000               	movlw	0
  5174  061D  00C0               	movwf	?___flmul
  5175  061E  0008               	return
  5176  061F                     l2592:	
  5177  061F  0840               	movf	___flmul@b,w
  5178  0620  00C8               	movwf	??___flmul
  5179  0621  0848               	movf	??___flmul,w
  5180  0622  00F0               	movwf	__Umul8_16@multiplicand
  5181  0623  0846               	movf	___flmul@a+2,w
  5182  0624  3180  2004  3185   	fcall	__Umul8_16
  5183  0627  0871               	movf	?__Umul8_16+1,w
  5184  0628  0020               	movlb	0	; select bank0
  5185  0629  00D9               	movwf	___flmul@temp+1
  5186  062A  0870               	movf	?__Umul8_16,w
  5187  062B  00D8               	movwf	___flmul@temp
  5188  062C  0858               	movf	___flmul@temp,w
  5189  062D  00C8               	movwf	??___flmul
  5190  062E  01C9               	clrf	??___flmul+1
  5191  062F  01CA               	clrf	??___flmul+2
  5192  0630  01CB               	clrf	??___flmul+3
  5193  0631  084B               	movf	??___flmul+3,w
  5194  0632  00D1               	movwf	___flmul@grs+3
  5195  0633  084A               	movf	??___flmul+2,w
  5196  0634  00D0               	movwf	___flmul@grs+2
  5197  0635  0849               	movf	??___flmul+1,w
  5198  0636  00CF               	movwf	___flmul@grs+1
  5199  0637  0848               	movf	??___flmul,w
  5200  0638  00CE               	movwf	___flmul@grs
  5201  0639  0859               	movf	___flmul@temp+1,w
  5202  063A  00C8               	movwf	??___flmul
  5203  063B  01C9               	clrf	??___flmul+1
  5204  063C  01CA               	clrf	??___flmul+2
  5205  063D  01CB               	clrf	??___flmul+3
  5206  063E  084B               	movf	??___flmul+3,w
  5207  063F  00D7               	movwf	___flmul@prod+3
  5208  0640  084A               	movf	??___flmul+2,w
  5209  0641  00D6               	movwf	___flmul@prod+2
  5210  0642  0849               	movf	??___flmul+1,w
  5211  0643  00D5               	movwf	___flmul@prod+1
  5212  0644  0848               	movf	??___flmul,w
  5213  0645  00D4               	movwf	___flmul@prod
  5214  0646  0841               	movf	___flmul@b+1,w
  5215  0647  00C8               	movwf	??___flmul
  5216  0648  0848               	movf	??___flmul,w
  5217  0649  00F0               	movwf	__Umul8_16@multiplicand
  5218  064A  0845               	movf	___flmul@a+1,w
  5219  064B  3180  2004  3185   	fcall	__Umul8_16
  5220  064E  0871               	movf	?__Umul8_16+1,w
  5221  064F  0020               	movlb	0	; select bank0
  5222  0650  00D9               	movwf	___flmul@temp+1
  5223  0651  0870               	movf	?__Umul8_16,w
  5224  0652  00D8               	movwf	___flmul@temp
  5225  0653  0858               	movf	___flmul@temp,w
  5226  0654  00C8               	movwf	??___flmul
  5227  0655  01C9               	clrf	??___flmul+1
  5228  0656  01CA               	clrf	??___flmul+2
  5229  0657  01CB               	clrf	??___flmul+3
  5230  0658  0848               	movf	??___flmul,w
  5231  0659  07CE               	addwf	___flmul@grs,f
  5232  065A  0849               	movf	??___flmul+1,w
  5233  065B  3DCF               	addwfc	___flmul@grs+1,f
  5234  065C  084A               	movf	??___flmul+2,w
  5235  065D  3DD0               	addwfc	___flmul@grs+2,f
  5236  065E  084B               	movf	??___flmul+3,w
  5237  065F  3DD1               	addwfc	___flmul@grs+3,f
  5238  0660  0859               	movf	___flmul@temp+1,w
  5239  0661  00C8               	movwf	??___flmul
  5240  0662  01C9               	clrf	??___flmul+1
  5241  0663  01CA               	clrf	??___flmul+2
  5242  0664  01CB               	clrf	??___flmul+3
  5243  0665  0848               	movf	??___flmul,w
  5244  0666  07D4               	addwf	___flmul@prod,f
  5245  0667  0849               	movf	??___flmul+1,w
  5246  0668  3DD5               	addwfc	___flmul@prod+1,f
  5247  0669  084A               	movf	??___flmul+2,w
  5248  066A  3DD6               	addwfc	___flmul@prod+2,f
  5249  066B  084B               	movf	??___flmul+3,w
  5250  066C  3DD7               	addwfc	___flmul@prod+3,f
  5251  066D  0842               	movf	___flmul@b+2,w
  5252  066E  00C8               	movwf	??___flmul
  5253  066F  0848               	movf	??___flmul,w
  5254  0670  00F0               	movwf	__Umul8_16@multiplicand
  5255  0671  0844               	movf	___flmul@a,w
  5256  0672  3180  2004  3185   	fcall	__Umul8_16
  5257  0675  0871               	movf	?__Umul8_16+1,w
  5258  0676  0020               	movlb	0	; select bank0
  5259  0677  00D9               	movwf	___flmul@temp+1
  5260  0678  0870               	movf	?__Umul8_16,w
  5261  0679  00D8               	movwf	___flmul@temp
  5262  067A  0858               	movf	___flmul@temp,w
  5263  067B  00C8               	movwf	??___flmul
  5264  067C  01C9               	clrf	??___flmul+1
  5265  067D  01CA               	clrf	??___flmul+2
  5266  067E  01CB               	clrf	??___flmul+3
  5267  067F  0848               	movf	??___flmul,w
  5268  0680  07CE               	addwf	___flmul@grs,f
  5269  0681  0849               	movf	??___flmul+1,w
  5270  0682  3DCF               	addwfc	___flmul@grs+1,f
  5271  0683  084A               	movf	??___flmul+2,w
  5272  0684  3DD0               	addwfc	___flmul@grs+2,f
  5273  0685  084B               	movf	??___flmul+3,w
  5274  0686  3DD1               	addwfc	___flmul@grs+3,f
  5275  0687  0859               	movf	___flmul@temp+1,w
  5276  0688  00C8               	movwf	??___flmul
  5277  0689  01C9               	clrf	??___flmul+1
  5278  068A  01CA               	clrf	??___flmul+2
  5279  068B  01CB               	clrf	??___flmul+3
  5280  068C  0848               	movf	??___flmul,w
  5281  068D  07D4               	addwf	___flmul@prod,f
  5282  068E  0849               	movf	??___flmul+1,w
  5283  068F  3DD5               	addwfc	___flmul@prod+1,f
  5284  0690  084A               	movf	??___flmul+2,w
  5285  0691  3DD6               	addwfc	___flmul@prod+2,f
  5286  0692  084B               	movf	??___flmul+3,w
  5287  0693  3DD7               	addwfc	___flmul@prod+3,f
  5288  0694  3008               	movlw	8
  5289  0695                     u2535:	
  5290  0695  35CE               	lslf	___flmul@grs,f
  5291  0696  0DCF               	rlf	___flmul@grs+1,f
  5292  0697  0DD0               	rlf	___flmul@grs+2,f
  5293  0698  0DD1               	rlf	___flmul@grs+3,f
  5294  0699  0B89               	decfsz	9,f
  5295  069A  2E95               	goto	u2535
  5296  069B  0841               	movf	___flmul@b+1,w
  5297  069C  00C8               	movwf	??___flmul
  5298  069D  0848               	movf	??___flmul,w
  5299  069E  00F0               	movwf	__Umul8_16@multiplicand
  5300  069F  0844               	movf	___flmul@a,w
  5301  06A0  3180  2004  3185   	fcall	__Umul8_16
  5302  06A3  0871               	movf	?__Umul8_16+1,w
  5303  06A4  0020               	movlb	0	; select bank0
  5304  06A5  00D9               	movwf	___flmul@temp+1
  5305  06A6  0870               	movf	?__Umul8_16,w
  5306  06A7  00D8               	movwf	___flmul@temp
  5307  06A8  0858               	movf	___flmul@temp,w
  5308  06A9  07CE               	addwf	___flmul@grs,f
  5309  06AA  0859               	movf	___flmul@temp+1,w
  5310  06AB  3DCF               	addwfc	___flmul@grs+1,f
  5311  06AC  3000               	movlw	0
  5312  06AD  3DD0               	addwfc	___flmul@grs+2,f
  5313  06AE  3DD1               	addwfc	___flmul@grs+3,f
  5314  06AF  0840               	movf	___flmul@b,w
  5315  06B0  00C8               	movwf	??___flmul
  5316  06B1  0848               	movf	??___flmul,w
  5317  06B2  00F0               	movwf	__Umul8_16@multiplicand
  5318  06B3  0845               	movf	___flmul@a+1,w
  5319  06B4  3180  2004  3185   	fcall	__Umul8_16
  5320  06B7  0871               	movf	?__Umul8_16+1,w
  5321  06B8  0020               	movlb	0	; select bank0
  5322  06B9  00D9               	movwf	___flmul@temp+1
  5323  06BA  0870               	movf	?__Umul8_16,w
  5324  06BB  00D8               	movwf	___flmul@temp
  5325  06BC  0858               	movf	___flmul@temp,w
  5326  06BD  07CE               	addwf	___flmul@grs,f
  5327  06BE  0859               	movf	___flmul@temp+1,w
  5328  06BF  3DCF               	addwfc	___flmul@grs+1,f
  5329  06C0  3000               	movlw	0
  5330  06C1  3DD0               	addwfc	___flmul@grs+2,f
  5331  06C2  3DD1               	addwfc	___flmul@grs+3,f
  5332  06C3  3008               	movlw	8
  5333  06C4                     u2545:	
  5334  06C4  35CE               	lslf	___flmul@grs,f
  5335  06C5  0DCF               	rlf	___flmul@grs+1,f
  5336  06C6  0DD0               	rlf	___flmul@grs+2,f
  5337  06C7  0DD1               	rlf	___flmul@grs+3,f
  5338  06C8  0B89               	decfsz	9,f
  5339  06C9  2EC4               	goto	u2545
  5340  06CA  0840               	movf	___flmul@b,w
  5341  06CB  00C8               	movwf	??___flmul
  5342  06CC  0848               	movf	??___flmul,w
  5343  06CD  00F0               	movwf	__Umul8_16@multiplicand
  5344  06CE  0844               	movf	___flmul@a,w
  5345  06CF  3180  2004  3185   	fcall	__Umul8_16
  5346  06D2  0871               	movf	?__Umul8_16+1,w
  5347  06D3  0020               	movlb	0	; select bank0
  5348  06D4  00D9               	movwf	___flmul@temp+1
  5349  06D5  0870               	movf	?__Umul8_16,w
  5350  06D6  00D8               	movwf	___flmul@temp
  5351  06D7  0858               	movf	___flmul@temp,w
  5352  06D8  07CE               	addwf	___flmul@grs,f
  5353  06D9  0859               	movf	___flmul@temp+1,w
  5354  06DA  3DCF               	addwfc	___flmul@grs+1,f
  5355  06DB  3000               	movlw	0
  5356  06DC  3DD0               	addwfc	___flmul@grs+2,f
  5357  06DD  3DD1               	addwfc	___flmul@grs+3,f
  5358  06DE  0841               	movf	___flmul@b+1,w
  5359  06DF  00C8               	movwf	??___flmul
  5360  06E0  0848               	movf	??___flmul,w
  5361  06E1  00F0               	movwf	__Umul8_16@multiplicand
  5362  06E2  0846               	movf	___flmul@a+2,w
  5363  06E3  3180  2004  3185   	fcall	__Umul8_16
  5364  06E6  0871               	movf	?__Umul8_16+1,w
  5365  06E7  0020               	movlb	0	; select bank0
  5366  06E8  00D9               	movwf	___flmul@temp+1
  5367  06E9  0870               	movf	?__Umul8_16,w
  5368  06EA  00D8               	movwf	___flmul@temp
  5369  06EB  0858               	movf	___flmul@temp,w
  5370  06EC  07D4               	addwf	___flmul@prod,f
  5371  06ED  0859               	movf	___flmul@temp+1,w
  5372  06EE  3DD5               	addwfc	___flmul@prod+1,f
  5373  06EF  3000               	movlw	0
  5374  06F0  3DD6               	addwfc	___flmul@prod+2,f
  5375  06F1  3DD7               	addwfc	___flmul@prod+3,f
  5376  06F2  0842               	movf	___flmul@b+2,w
  5377  06F3  00C8               	movwf	??___flmul
  5378  06F4  0848               	movf	??___flmul,w
  5379  06F5  00F0               	movwf	__Umul8_16@multiplicand
  5380  06F6  0845               	movf	___flmul@a+1,w
  5381  06F7  3180  2004  3185   	fcall	__Umul8_16
  5382  06FA  0871               	movf	?__Umul8_16+1,w
  5383  06FB  0020               	movlb	0	; select bank0
  5384  06FC  00D9               	movwf	___flmul@temp+1
  5385  06FD  0870               	movf	?__Umul8_16,w
  5386  06FE  00D8               	movwf	___flmul@temp
  5387  06FF  0858               	movf	___flmul@temp,w
  5388  0700  07D4               	addwf	___flmul@prod,f
  5389  0701  0859               	movf	___flmul@temp+1,w
  5390  0702  3DD5               	addwfc	___flmul@prod+1,f
  5391  0703  3000               	movlw	0
  5392  0704  3DD6               	addwfc	___flmul@prod+2,f
  5393  0705  3DD7               	addwfc	___flmul@prod+3,f
  5394  0706  0842               	movf	___flmul@b+2,w
  5395  0707  00C8               	movwf	??___flmul
  5396  0708  0848               	movf	??___flmul,w
  5397  0709  00F0               	movwf	__Umul8_16@multiplicand
  5398  070A  0846               	movf	___flmul@a+2,w
  5399  070B  3180  2004  3185   	fcall	__Umul8_16
  5400  070E  0871               	movf	?__Umul8_16+1,w
  5401  070F  0020               	movlb	0	; select bank0
  5402  0710  00D9               	movwf	___flmul@temp+1
  5403  0711  0870               	movf	?__Umul8_16,w
  5404  0712  00D8               	movwf	___flmul@temp
  5405  0713  0858               	movf	___flmul@temp,w
  5406  0714  00C8               	movwf	??___flmul
  5407  0715  0859               	movf	___flmul@temp+1,w
  5408  0716  00C9               	movwf	??___flmul+1
  5409  0717  01CA               	clrf	??___flmul+2
  5410  0718  01CB               	clrf	??___flmul+3
  5411  0719  3008               	movlw	8
  5412  071A                     u2555:	
  5413  071A  35C8               	lslf	??___flmul,f
  5414  071B  0DC9               	rlf	??___flmul+1,f
  5415  071C  0DCA               	rlf	??___flmul+2,f
  5416  071D  0DCB               	rlf	??___flmul+3,f
  5417  071E  0B89               	decfsz	9,f
  5418  071F  2F1A               	goto	u2555
  5419  0720  0848               	movf	??___flmul,w
  5420  0721  07D4               	addwf	___flmul@prod,f
  5421  0722  0849               	movf	??___flmul+1,w
  5422  0723  3DD5               	addwfc	___flmul@prod+1,f
  5423  0724  084A               	movf	??___flmul+2,w
  5424  0725  3DD6               	addwfc	___flmul@prod+2,f
  5425  0726  084B               	movf	??___flmul+3,w
  5426  0727  3DD7               	addwfc	___flmul@prod+3,f
  5427  0728  084E               	movf	___flmul@grs,w
  5428  0729  00C8               	movwf	??___flmul
  5429  072A  084F               	movf	___flmul@grs+1,w
  5430  072B  00C9               	movwf	??___flmul+1
  5431  072C  0850               	movf	___flmul@grs+2,w
  5432  072D  00CA               	movwf	??___flmul+2
  5433  072E  0851               	movf	___flmul@grs+3,w
  5434  072F  00CB               	movwf	??___flmul+3
  5435  0730  3018               	movlw	24
  5436  0731                     u2565:	
  5437  0731  36CB               	lsrf	??___flmul+3,f
  5438  0732  0CCA               	rrf	??___flmul+2,f
  5439  0733  0CC9               	rrf	??___flmul+1,f
  5440  0734  0CC8               	rrf	??___flmul,f
  5441  0735  0B89               	decfsz	9,f
  5442  0736  2F31               	goto	u2565
  5443  0737  0848               	movf	??___flmul,w
  5444  0738  07D4               	addwf	___flmul@prod,f
  5445  0739  0849               	movf	??___flmul+1,w
  5446  073A  3DD5               	addwfc	___flmul@prod+1,f
  5447  073B  084A               	movf	??___flmul+2,w
  5448  073C  3DD6               	addwfc	___flmul@prod+2,f
  5449  073D  084B               	movf	??___flmul+3,w
  5450  073E  3DD7               	addwfc	___flmul@prod+3,f
  5451  073F  3008               	movlw	8
  5452  0740                     u2575:	
  5453  0740  35CE               	lslf	___flmul@grs,f
  5454  0741  0DCF               	rlf	___flmul@grs+1,f
  5455  0742  0DD0               	rlf	___flmul@grs+2,f
  5456  0743  0DD1               	rlf	___flmul@grs+3,f
  5457  0744  0B89               	decfsz	9,f
  5458  0745  2F40               	goto	u2575
  5459  0746  0853               	movf	___flmul@bexp,w
  5460  0747  0752               	addwf	___flmul@aexp,w
  5461  0748  00C8               	movwf	??___flmul
  5462  0749  01C9               	clrf	??___flmul+1
  5463  074A  0DC9               	rlf	??___flmul+1,f
  5464  074B  0848               	movf	??___flmul,w
  5465  074C  3E82               	addlw	130
  5466  074D  00D8               	movwf	___flmul@temp
  5467  074E  30FF               	movlw	255
  5468  074F  3D49               	addwfc	??___flmul+1,w
  5469  0750  00D9               	movwf	___flmul@temp+1
  5470  0751                     l2644:	
  5471  0751  1BD6               	btfsc	___flmul@prod+2,7
  5472  0752  2F68               	goto	l2646
  5473  0753  3001               	movlw	1
  5474  0754                     u2585:	
  5475  0754  35D4               	lslf	___flmul@prod,f
  5476  0755  0DD5               	rlf	___flmul@prod+1,f
  5477  0756  0DD6               	rlf	___flmul@prod+2,f
  5478  0757  0DD7               	rlf	___flmul@prod+3,f
  5479  0758  0B89               	decfsz	9,f
  5480  0759  2F54               	goto	u2585
  5481  075A  1BD1               	btfsc	___flmul@grs+3,7
  5482  075B  1454               	bsf	___flmul@prod,0
  5483  075C  3001               	movlw	1
  5484  075D                     u2605:	
  5485  075D  35CE               	lslf	___flmul@grs,f
  5486  075E  0DCF               	rlf	___flmul@grs+1,f
  5487  075F  0DD0               	rlf	___flmul@grs+2,f
  5488  0760  0DD1               	rlf	___flmul@grs+3,f
  5489  0761  0B89               	decfsz	9,f
  5490  0762  2F5D               	goto	u2605
  5491  0763  30FF               	movlw	255
  5492  0764  07D8               	addwf	___flmul@temp,f
  5493  0765  30FF               	movlw	255
  5494  0766  3DD9               	addwfc	___flmul@temp+1,f
  5495  0767  2F51               	goto	l2644
  5496  0768                     l2646:	
  5497  0768  01D2               	clrf	___flmul@aexp
  5498  0769  1FD1               	btfss	___flmul@grs+3,7
  5499  076A  2F81               	goto	l2656
  5500  076B  30FF               	movlw	255
  5501  076C  054E               	andwf	___flmul@grs,w
  5502  076D  00C8               	movwf	??___flmul
  5503  076E  30FF               	movlw	255
  5504  076F  054F               	andwf	___flmul@grs+1,w
  5505  0770  00C9               	movwf	??___flmul+1
  5506  0771  30FF               	movlw	255
  5507  0772  0550               	andwf	___flmul@grs+2,w
  5508  0773  00CA               	movwf	??___flmul+2
  5509  0774  307F               	movlw	127
  5510  0775  0551               	andwf	___flmul@grs+3,w
  5511  0776  00CB               	movwf	??___flmul+3
  5512  0777  084B               	movf	??___flmul+3,w
  5513  0778  044A               	iorwf	??___flmul+2,w
  5514  0779  0449               	iorwf	??___flmul+1,w
  5515  077A  0448               	iorwf	??___flmul,w
  5516  077B  1903               	skipnz
  5517  077C  1854               	btfsc	___flmul@prod,0
  5518  077D  2F7F               	goto	l2652
  5519  077E  2F81               	goto	l2656
  5520  077F                     l2652:	
  5521  077F  01D2               	clrf	___flmul@aexp
  5522  0780  0AD2               	incf	___flmul@aexp,f
  5523  0781                     l2656:	
  5524  0781  0852               	movf	___flmul@aexp,w
  5525  0782  1903               	btfsc	3,2
  5526  0783  2FAA               	goto	l2666
  5527  0784  3001               	movlw	1
  5528  0785  07D4               	addwf	___flmul@prod,f
  5529  0786  3000               	movlw	0
  5530  0787  3DD5               	addwfc	___flmul@prod+1,f
  5531  0788  3000               	movlw	0
  5532  0789  3DD6               	addwfc	___flmul@prod+2,f
  5533  078A  3000               	movlw	0
  5534  078B  3DD7               	addwfc	___flmul@prod+3,f
  5535  078C  1C57               	btfss	___flmul@prod+3,0
  5536  078D  2FAA               	goto	l2666
  5537  078E  0854               	movf	___flmul@prod,w
  5538  078F  00C8               	movwf	??___flmul
  5539  0790  0855               	movf	___flmul@prod+1,w
  5540  0791  00C9               	movwf	??___flmul+1
  5541  0792  0856               	movf	___flmul@prod+2,w
  5542  0793  00CA               	movwf	??___flmul+2
  5543  0794  0857               	movf	___flmul@prod+3,w
  5544  0795  00CB               	movwf	??___flmul+3
  5545  0796  3001               	movlw	1
  5546  0797  00CC               	movwf	??___flmul+4
  5547  0798                     u2675:	
  5548  0798  37CB               	asrf	??___flmul+3,f
  5549  0799  0CCA               	rrf	??___flmul+2,f
  5550  079A  0CC9               	rrf	??___flmul+1,f
  5551  079B  0CC8               	rrf	??___flmul,f
  5552  079C  0BCC               	decfsz	??___flmul+4,f
  5553  079D  2F98               	goto	u2675
  5554  079E  084B               	movf	??___flmul+3,w
  5555  079F  00D7               	movwf	___flmul@prod+3
  5556  07A0  084A               	movf	??___flmul+2,w
  5557  07A1  00D6               	movwf	___flmul@prod+2
  5558  07A2  0849               	movf	??___flmul+1,w
  5559  07A3  00D5               	movwf	___flmul@prod+1
  5560  07A4  0848               	movf	??___flmul,w
  5561  07A5  00D4               	movwf	___flmul@prod
  5562  07A6  3001               	movlw	1
  5563  07A7  07D8               	addwf	___flmul@temp,f
  5564  07A8  3000               	movlw	0
  5565  07A9  3DD9               	addwfc	___flmul@temp+1,f
  5566  07AA                     l2666:	
  5567  07AA  0859               	movf	___flmul@temp+1,w
  5568  07AB  3A80               	xorlw	128
  5569  07AC  00C8               	movwf	??___flmul
  5570  07AD  3080               	movlw	128
  5571  07AE  0248               	subwf	??___flmul,w
  5572  07AF  1D03               	skipz
  5573  07B0  2FB3               	goto	u2685
  5574  07B1  30FF               	movlw	255
  5575  07B2  0258               	subwf	___flmul@temp,w
  5576  07B3                     u2685:	
  5577  07B3  1C03               	skipc
  5578  07B4  2FBF               	goto	l2670
  5579  07B5  307F               	movlw	127
  5580  07B6  0020               	movlb	0	; select bank0
  5581  07B7  00D7               	movwf	___flmul@prod+3
  5582  07B8  3080               	movlw	128
  5583  07B9  00D6               	movwf	___flmul@prod+2
  5584  07BA  3000               	movlw	0
  5585  07BB  00D5               	movwf	___flmul@prod+1
  5586  07BC  3000               	movlw	0
  5587  07BD  00D4               	movwf	___flmul@prod
  5588  07BE  2FE9               	goto	l898
  5589  07BF                     l2670:	
  5590  07BF  0020               	movlb	0	; select bank0
  5591  07C0  0859               	movf	___flmul@temp+1,w
  5592  07C1  3A80               	xorlw	128
  5593  07C2  00C8               	movwf	??___flmul
  5594  07C3  3080               	movlw	128
  5595  07C4  0248               	subwf	??___flmul,w
  5596  07C5  1D03               	skipz
  5597  07C6  2FC9               	goto	u2695
  5598  07C7  3001               	movlw	1
  5599  07C8  0258               	subwf	___flmul@temp,w
  5600  07C9                     u2695:	
  5601  07C9  1803               	skipnc
  5602  07CA  2FD6               	goto	l2676
  5603  07CB  3000               	movlw	0
  5604  07CC  0020               	movlb	0	; select bank0
  5605  07CD  00D7               	movwf	___flmul@prod+3
  5606  07CE  3000               	movlw	0
  5607  07CF  00D6               	movwf	___flmul@prod+2
  5608  07D0  3000               	movlw	0
  5609  07D1  00D5               	movwf	___flmul@prod+1
  5610  07D2  3000               	movlw	0
  5611  07D3  00D4               	movwf	___flmul@prod
  5612  07D4  01CD               	clrf	___flmul@sign
  5613  07D5  2FE9               	goto	l898
  5614  07D6                     l2676:	
  5615  07D6  0020               	movlb	0	; select bank0
  5616  07D7  0858               	movf	___flmul@temp,w
  5617  07D8  00C8               	movwf	??___flmul
  5618  07D9  0848               	movf	??___flmul,w
  5619  07DA  00D3               	movwf	___flmul@bexp
  5620  07DB  30FF               	movlw	255
  5621  07DC  05D4               	andwf	___flmul@prod,f
  5622  07DD  30FF               	movlw	255
  5623  07DE  05D5               	andwf	___flmul@prod+1,f
  5624  07DF  307F               	movlw	127
  5625  07E0  05D6               	andwf	___flmul@prod+2,f
  5626  07E1  3000               	movlw	0
  5627  07E2  05D7               	andwf	___flmul@prod+3,f
  5628  07E3  1853               	btfsc	___flmul@bexp,0
  5629  07E4  17D6               	bsf	___flmul@prod+2,7
  5630  07E5  3653               	lsrf	___flmul@bexp,w
  5631  07E6  00C8               	movwf	??___flmul
  5632  07E7  0848               	movf	??___flmul,w
  5633  07E8  00D7               	movwf	___flmul@prod+3
  5634  07E9                     l898:	
  5635  07E9  084D               	movf	___flmul@sign,w
  5636  07EA  00C8               	movwf	??___flmul
  5637  07EB  0848               	movf	??___flmul,w
  5638  07EC  04D7               	iorwf	___flmul@prod+3,f
  5639  07ED  0857               	movf	___flmul@prod+3,w
  5640  07EE  00C3               	movwf	?___flmul+3
  5641  07EF  0856               	movf	___flmul@prod+2,w
  5642  07F0  00C2               	movwf	?___flmul+2
  5643  07F1  0855               	movf	___flmul@prod+1,w
  5644  07F2  00C1               	movwf	?___flmul+1
  5645  07F3  0854               	movf	___flmul@prod,w
  5646  07F4  00C0               	movwf	?___flmul
  5647  07F5  0008               	return
  5648  07F6                     __end_of___flmul:	
  5649                           
  5650                           	psect	text23
  5651  0004                     __ptext23:	
  5652 ;; *************** function __Umul8_16 *****************
  5653 ;; Defined at:
  5654 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  multiplier      1    wreg     unsigned char 
  5657 ;;  multiplicand    1    0[COMMON] unsigned char 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  multiplier      1    8[COMMON] unsigned char 
  5660 ;;  word_mpld       2    6[COMMON] unsigned int 
  5661 ;;  product         2    4[COMMON] unsigned int 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  2    0[COMMON] unsigned int 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5671 ;;      Params:         2       0       0       0       0       0       0       0
  5672 ;;      Locals:         5       0       0       0       0       0       0       0
  5673 ;;      Temps:          2       0       0       0       0       0       0       0
  5674 ;;      Totals:         9       0       0       0       0       0       0       0
  5675 ;;Total ram usage:        9 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		___flmul
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           
  5685                           ;psect for function __Umul8_16
  5686  0004                     __Umul8_16:	
  5687                           
  5688                           ;incstack = 0
  5689                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5690                           ;__Umul8_16@multiplier stored from wreg
  5691  0004  00F8               	movwf	__Umul8_16@multiplier
  5692  0005  01F4               	clrf	__Umul8_16@product
  5693  0006  01F5               	clrf	__Umul8_16@product+1
  5694  0007  0870               	movf	__Umul8_16@multiplicand,w
  5695  0008  00F2               	movwf	??__Umul8_16
  5696  0009  01F3               	clrf	??__Umul8_16+1
  5697  000A  0872               	movf	??__Umul8_16,w
  5698  000B  00F6               	movwf	__Umul8_16@word_mpld
  5699  000C  0873               	movf	??__Umul8_16+1,w
  5700  000D  00F7               	movwf	__Umul8_16@word_mpld+1
  5701  000E                     l2344:	
  5702  000E  1C78               	btfss	__Umul8_16@multiplier,0
  5703  000F  2814               	goto	l1046
  5704  0010  0876               	movf	__Umul8_16@word_mpld,w
  5705  0011  07F4               	addwf	__Umul8_16@product,f
  5706  0012  0877               	movf	__Umul8_16@word_mpld+1,w
  5707  0013  3DF5               	addwfc	__Umul8_16@product+1,f
  5708  0014                     l1046:	
  5709  0014  3001               	movlw	1
  5710  0015                     u2095:	
  5711  0015  35F6               	lslf	__Umul8_16@word_mpld,f
  5712  0016  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5713  0017  0B89               	decfsz	9,f
  5714  0018  2815               	goto	u2095
  5715  0019  1003               	clrc
  5716  001A  0CF8               	rrf	__Umul8_16@multiplier,f
  5717  001B  0878               	movf	__Umul8_16@multiplier,w
  5718  001C  1D03               	btfss	3,2
  5719  001D  280E               	goto	l2344
  5720  001E  0875               	movf	__Umul8_16@product+1,w
  5721  001F  00F1               	movwf	?__Umul8_16+1
  5722  0020  0874               	movf	__Umul8_16@product,w
  5723  0021  00F0               	movwf	?__Umul8_16
  5724  0022  0008               	return
  5725  0023                     __end_of__Umul8_16:	
  5726                           
  5727                           	psect	text24
  5728  02B7                     __ptext24:	
  5729 ;; *************** function ___fldiv *****************
  5730 ;; Defined at:
  5731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  a               4    6[BANK0 ] unsigned int 
  5734 ;;  b               4   10[BANK0 ] unsigned int 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  grs             4   26[BANK0 ] unsigned long 
  5737 ;;  rem             4   19[BANK0 ] unsigned long 
  5738 ;;  new_exp         2   24[BANK0 ] int 
  5739 ;;  aexp            1   31[BANK0 ] unsigned char 
  5740 ;;  bexp            1   30[BANK0 ] unsigned char 
  5741 ;;  sign            1   23[BANK0 ] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  4    6[BANK0 ] unsigned char 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5751 ;;      Params:         0       8       0       0       0       0       0       0
  5752 ;;      Locals:         0      13       0       0       0       0       0       0
  5753 ;;      Temps:          0       5       0       0       0       0       0       0
  5754 ;;      Totals:         0      26       0       0       0       0       0       0
  5755 ;;Total ram usage:       26 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_main
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function ___fldiv
  5766  02B7                     ___fldiv:	
  5767                           
  5768                           ;incstack = 0
  5769                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5770  02B7  0020               	movlb	0	; select bank0
  5771  02B8  082D               	movf	___fldiv@b+3,w
  5772  02B9  3980               	andlw	128
  5773  02BA  00AE               	movwf	??___fldiv
  5774  02BB  082E               	movf	??___fldiv,w
  5775  02BC  00B7               	movwf	___fldiv@sign
  5776  02BD  352D               	lslf	___fldiv@b+3,w
  5777  02BE  00AE               	movwf	??___fldiv
  5778  02BF  082E               	movf	??___fldiv,w
  5779  02C0  00BE               	movwf	___fldiv@bexp
  5780  02C1  1BAC               	btfsc	___fldiv@b+2,7
  5781  02C2  143E               	bsf	___fldiv@bexp,0
  5782  02C3  083E               	movf	___fldiv@bexp,w
  5783  02C4  1903               	btfsc	3,2
  5784  02C5  2AD4               	goto	l2426
  5785  02C6  0A3E               	incf	___fldiv@bexp,w
  5786  02C7  1D03               	btfss	3,2
  5787  02C8  2AD1               	goto	l2422
  5788  02C9  3000               	movlw	0
  5789  02CA  00AD               	movwf	___fldiv@b+3
  5790  02CB  3000               	movlw	0
  5791  02CC  00AC               	movwf	___fldiv@b+2
  5792  02CD  3000               	movlw	0
  5793  02CE  00AB               	movwf	___fldiv@b+1
  5794  02CF  3000               	movlw	0
  5795  02D0  00AA               	movwf	___fldiv@b
  5796  02D1                     l2422:	
  5797  02D1  17AC               	bsf	___fldiv@b+2,7
  5798  02D2  01AD               	clrf	___fldiv@b+3
  5799  02D3  2ADC               	goto	l2428
  5800  02D4                     l2426:	
  5801  02D4  3000               	movlw	0
  5802  02D5  00AD               	movwf	___fldiv@b+3
  5803  02D6  3000               	movlw	0
  5804  02D7  00AC               	movwf	___fldiv@b+2
  5805  02D8  3000               	movlw	0
  5806  02D9  00AB               	movwf	___fldiv@b+1
  5807  02DA  3000               	movlw	0
  5808  02DB  00AA               	movwf	___fldiv@b
  5809  02DC                     l2428:	
  5810  02DC  0829               	movf	___fldiv@a+3,w
  5811  02DD  3980               	andlw	128
  5812  02DE  00AE               	movwf	??___fldiv
  5813  02DF  082E               	movf	??___fldiv,w
  5814  02E0  06B7               	xorwf	___fldiv@sign,f
  5815  02E1  3529               	lslf	___fldiv@a+3,w
  5816  02E2  00AE               	movwf	??___fldiv
  5817  02E3  082E               	movf	??___fldiv,w
  5818  02E4  00BF               	movwf	___fldiv@aexp
  5819  02E5  1BA8               	btfsc	___fldiv@a+2,7
  5820  02E6  143F               	bsf	___fldiv@aexp,0
  5821  02E7  083F               	movf	___fldiv@aexp,w
  5822  02E8  1903               	btfsc	3,2
  5823  02E9  2AF8               	goto	l2446
  5824  02EA  0A3F               	incf	___fldiv@aexp,w
  5825  02EB  1D03               	btfss	3,2
  5826  02EC  2AF5               	goto	l2442
  5827  02ED  3000               	movlw	0
  5828  02EE  00A9               	movwf	___fldiv@a+3
  5829  02EF  3000               	movlw	0
  5830  02F0  00A8               	movwf	___fldiv@a+2
  5831  02F1  3000               	movlw	0
  5832  02F2  00A7               	movwf	___fldiv@a+1
  5833  02F3  3000               	movlw	0
  5834  02F4  00A6               	movwf	___fldiv@a
  5835  02F5                     l2442:	
  5836  02F5  17A8               	bsf	___fldiv@a+2,7
  5837  02F6  01A9               	clrf	___fldiv@a+3
  5838  02F7  2B00               	goto	l846
  5839  02F8                     l2446:	
  5840  02F8  3000               	movlw	0
  5841  02F9  00A9               	movwf	___fldiv@a+3
  5842  02FA  3000               	movlw	0
  5843  02FB  00A8               	movwf	___fldiv@a+2
  5844  02FC  3000               	movlw	0
  5845  02FD  00A7               	movwf	___fldiv@a+1
  5846  02FE  3000               	movlw	0
  5847  02FF  00A6               	movwf	___fldiv@a
  5848  0300                     l846:	
  5849  0300  0829               	movf	___fldiv@a+3,w
  5850  0301  0428               	iorwf	___fldiv@a+2,w
  5851  0302  0427               	iorwf	___fldiv@a+1,w
  5852  0303  0426               	iorwf	___fldiv@a,w
  5853  0304  1D03               	skipz
  5854  0305  2B1F               	goto	l2456
  5855  0306  3000               	movlw	0
  5856  0307  00AD               	movwf	___fldiv@b+3
  5857  0308  3000               	movlw	0
  5858  0309  00AC               	movwf	___fldiv@b+2
  5859  030A  3000               	movlw	0
  5860  030B  00AB               	movwf	___fldiv@b+1
  5861  030C  3000               	movlw	0
  5862  030D  00AA               	movwf	___fldiv@b
  5863  030E  3080               	movlw	128
  5864  030F  04AC               	iorwf	___fldiv@b+2,f
  5865  0310  307F               	movlw	127
  5866  0311  04AD               	iorwf	___fldiv@b+3,f
  5867  0312                     L2:	
  5868  0312  0837               	movf	___fldiv@sign,w
  5869  0313  00AE               	movwf	??___fldiv
  5870  0314  082E               	movf	??___fldiv,w
  5871  0315  04AD               	iorwf	___fldiv@b+3,f
  5872  0316  082D               	movf	___fldiv@b+3,w
  5873  0317  00A9               	movwf	?___fldiv+3
  5874  0318  082C               	movf	___fldiv@b+2,w
  5875  0319  00A8               	movwf	?___fldiv+2
  5876  031A  082B               	movf	___fldiv@b+1,w
  5877  031B  00A7               	movwf	?___fldiv+1
  5878  031C  082A               	movf	___fldiv@b,w
  5879  031D  00A6               	movwf	?___fldiv
  5880  031E  0008               	return
  5881  031F                     l2456:	
  5882  031F  083E               	movf	___fldiv@bexp,w
  5883  0320  1D03               	btfss	3,2
  5884  0321  2B2B               	goto	l2462
  5885  0322  3000               	movlw	0
  5886  0323  00A9               	movwf	?___fldiv+3
  5887  0324  3000               	movlw	0
  5888  0325  00A8               	movwf	?___fldiv+2
  5889  0326  3000               	movlw	0
  5890  0327  00A7               	movwf	?___fldiv+1
  5891  0328  3000               	movlw	0
  5892  0329  00A6               	movwf	?___fldiv
  5893  032A  0008               	return
  5894  032B                     l2462:	
  5895  032B  083E               	movf	___fldiv@bexp,w
  5896  032C  00AE               	movwf	??___fldiv
  5897  032D  01AF               	clrf	??___fldiv+1
  5898  032E  082F               	movf	??___fldiv+1,w
  5899  032F  00B1               	movwf	??___fldiv+3
  5900  0330  083F               	movf	___fldiv@aexp,w
  5901  0331  022E               	subwf	??___fldiv,w
  5902  0332  00B0               	movwf	??___fldiv+2
  5903  0333  1C03               	skipc
  5904  0334  03B1               	decf	??___fldiv+3,f
  5905  0335  0830               	movf	??___fldiv+2,w
  5906  0336  3E7F               	addlw	127
  5907  0337  00B8               	movwf	___fldiv@new_exp
  5908  0338  3000               	movlw	0
  5909  0339  3D31               	addwfc	??___fldiv+3,w
  5910  033A  00B9               	movwf	___fldiv@new_exp+1
  5911  033B  082D               	movf	___fldiv@b+3,w
  5912  033C  00B6               	movwf	___fldiv@rem+3
  5913  033D  082C               	movf	___fldiv@b+2,w
  5914  033E  00B5               	movwf	___fldiv@rem+2
  5915  033F  082B               	movf	___fldiv@b+1,w
  5916  0340  00B4               	movwf	___fldiv@rem+1
  5917  0341  082A               	movf	___fldiv@b,w
  5918  0342  00B3               	movwf	___fldiv@rem
  5919  0343  3000               	movlw	0
  5920  0344  00AD               	movwf	___fldiv@b+3
  5921  0345  3000               	movlw	0
  5922  0346  00AC               	movwf	___fldiv@b+2
  5923  0347  3000               	movlw	0
  5924  0348  00AB               	movwf	___fldiv@b+1
  5925  0349  3000               	movlw	0
  5926  034A  00AA               	movwf	___fldiv@b
  5927  034B  3000               	movlw	0
  5928  034C  00BD               	movwf	___fldiv@grs+3
  5929  034D  3000               	movlw	0
  5930  034E  00BC               	movwf	___fldiv@grs+2
  5931  034F  3000               	movlw	0
  5932  0350  00BB               	movwf	___fldiv@grs+1
  5933  0351  3000               	movlw	0
  5934  0352  00BA               	movwf	___fldiv@grs
  5935  0353  01BF               	clrf	___fldiv@aexp
  5936  0354                     l2490:	
  5937  0354  301A               	movlw	26
  5938  0355  023F               	subwf	___fldiv@aexp,w
  5939  0356  1803               	btfsc	3,0
  5940  0357  2B90               	goto	l2492
  5941  0358  083F               	movf	___fldiv@aexp,w
  5942  0359  1903               	btfsc	3,2
  5943  035A  2B72               	goto	l2482
  5944  035B  3001               	movlw	1
  5945  035C                     u2255:	
  5946  035C  35B3               	lslf	___fldiv@rem,f
  5947  035D  0DB4               	rlf	___fldiv@rem+1,f
  5948  035E  0DB5               	rlf	___fldiv@rem+2,f
  5949  035F  0DB6               	rlf	___fldiv@rem+3,f
  5950  0360  0B89               	decfsz	9,f
  5951  0361  2B5C               	goto	u2255
  5952  0362  3001               	movlw	1
  5953  0363                     u2265:	
  5954  0363  35AA               	lslf	___fldiv@b,f
  5955  0364  0DAB               	rlf	___fldiv@b+1,f
  5956  0365  0DAC               	rlf	___fldiv@b+2,f
  5957  0366  0DAD               	rlf	___fldiv@b+3,f
  5958  0367  0B89               	decfsz	9,f
  5959  0368  2B63               	goto	u2265
  5960  0369  1BBD               	btfsc	___fldiv@grs+3,7
  5961  036A  142A               	bsf	___fldiv@b,0
  5962  036B  3001               	movlw	1
  5963  036C                     u2285:	
  5964  036C  35BA               	lslf	___fldiv@grs,f
  5965  036D  0DBB               	rlf	___fldiv@grs+1,f
  5966  036E  0DBC               	rlf	___fldiv@grs+2,f
  5967  036F  0DBD               	rlf	___fldiv@grs+3,f
  5968  0370  0B89               	decfsz	9,f
  5969  0371  2B6C               	goto	u2285
  5970  0372                     l2482:	
  5971  0372  0829               	movf	___fldiv@a+3,w
  5972  0373  0236               	subwf	___fldiv@rem+3,w
  5973  0374  1D03               	skipz
  5974  0375  2B80               	goto	u2295
  5975  0376  0828               	movf	___fldiv@a+2,w
  5976  0377  0235               	subwf	___fldiv@rem+2,w
  5977  0378  1D03               	skipz
  5978  0379  2B80               	goto	u2295
  5979  037A  0827               	movf	___fldiv@a+1,w
  5980  037B  0234               	subwf	___fldiv@rem+1,w
  5981  037C  1D03               	skipz
  5982  037D  2B80               	goto	u2295
  5983  037E  0826               	movf	___fldiv@a,w
  5984  037F  0233               	subwf	___fldiv@rem,w
  5985  0380                     u2295:	
  5986  0380  1C03               	skipc
  5987  0381  2B8B               	goto	l2488
  5988  0382  173D               	bsf	___fldiv@grs+3,6
  5989  0383  0826               	movf	___fldiv@a,w
  5990  0384  02B3               	subwf	___fldiv@rem,f
  5991  0385  0827               	movf	___fldiv@a+1,w
  5992  0386  3BB4               	subwfb	___fldiv@rem+1,f
  5993  0387  0828               	movf	___fldiv@a+2,w
  5994  0388  3BB5               	subwfb	___fldiv@rem+2,f
  5995  0389  0829               	movf	___fldiv@a+3,w
  5996  038A  3BB6               	subwfb	___fldiv@rem+3,f
  5997  038B                     l2488:	
  5998  038B  3001               	movlw	1
  5999  038C  00AE               	movwf	??___fldiv
  6000  038D  082E               	movf	??___fldiv,w
  6001  038E  07BF               	addwf	___fldiv@aexp,f
  6002  038F  2B54               	goto	l2490
  6003  0390                     l2492:	
  6004  0390  0836               	movf	___fldiv@rem+3,w
  6005  0391  0435               	iorwf	___fldiv@rem+2,w
  6006  0392  0434               	iorwf	___fldiv@rem+1,w
  6007  0393  0433               	iorwf	___fldiv@rem,w
  6008  0394  1D03               	btfss	3,2
  6009  0395  143A               	bsf	___fldiv@grs,0
  6010  0396                     l2506:	
  6011  0396  1BAC               	btfsc	___fldiv@b+2,7
  6012  0397  2BAD               	goto	l2508
  6013  0398  3001               	movlw	1
  6014  0399                     u2325:	
  6015  0399  35AA               	lslf	___fldiv@b,f
  6016  039A  0DAB               	rlf	___fldiv@b+1,f
  6017  039B  0DAC               	rlf	___fldiv@b+2,f
  6018  039C  0DAD               	rlf	___fldiv@b+3,f
  6019  039D  0B89               	decfsz	9,f
  6020  039E  2B99               	goto	u2325
  6021  039F  1BBD               	btfsc	___fldiv@grs+3,7
  6022  03A0  142A               	bsf	___fldiv@b,0
  6023  03A1  3001               	movlw	1
  6024  03A2                     u2345:	
  6025  03A2  35BA               	lslf	___fldiv@grs,f
  6026  03A3  0DBB               	rlf	___fldiv@grs+1,f
  6027  03A4  0DBC               	rlf	___fldiv@grs+2,f
  6028  03A5  0DBD               	rlf	___fldiv@grs+3,f
  6029  03A6  0B89               	decfsz	9,f
  6030  03A7  2BA2               	goto	u2345
  6031  03A8  30FF               	movlw	255
  6032  03A9  07B8               	addwf	___fldiv@new_exp,f
  6033  03AA  30FF               	movlw	255
  6034  03AB  3DB9               	addwfc	___fldiv@new_exp+1,f
  6035  03AC  2B96               	goto	l2506
  6036  03AD                     l2508:	
  6037  03AD  01BF               	clrf	___fldiv@aexp
  6038  03AE  1FBD               	btfss	___fldiv@grs+3,7
  6039  03AF  2BC6               	goto	l2518
  6040  03B0  30FF               	movlw	255
  6041  03B1  053A               	andwf	___fldiv@grs,w
  6042  03B2  00AE               	movwf	??___fldiv
  6043  03B3  30FF               	movlw	255
  6044  03B4  053B               	andwf	___fldiv@grs+1,w
  6045  03B5  00AF               	movwf	??___fldiv+1
  6046  03B6  30FF               	movlw	255
  6047  03B7  053C               	andwf	___fldiv@grs+2,w
  6048  03B8  00B0               	movwf	??___fldiv+2
  6049  03B9  307F               	movlw	127
  6050  03BA  053D               	andwf	___fldiv@grs+3,w
  6051  03BB  00B1               	movwf	??___fldiv+3
  6052  03BC  0831               	movf	??___fldiv+3,w
  6053  03BD  0430               	iorwf	??___fldiv+2,w
  6054  03BE  042F               	iorwf	??___fldiv+1,w
  6055  03BF  042E               	iorwf	??___fldiv,w
  6056  03C0  1903               	skipnz
  6057  03C1  182A               	btfsc	___fldiv@b,0
  6058  03C2  2BC4               	goto	l2514
  6059  03C3  2BC6               	goto	l2518
  6060  03C4                     l2514:	
  6061  03C4  01BF               	clrf	___fldiv@aexp
  6062  03C5  0ABF               	incf	___fldiv@aexp,f
  6063  03C6                     l2518:	
  6064  03C6  083F               	movf	___fldiv@aexp,w
  6065  03C7  1903               	btfsc	3,2
  6066  03C8  2BEF               	goto	l2528
  6067  03C9  3001               	movlw	1
  6068  03CA  07AA               	addwf	___fldiv@b,f
  6069  03CB  3000               	movlw	0
  6070  03CC  3DAB               	addwfc	___fldiv@b+1,f
  6071  03CD  3000               	movlw	0
  6072  03CE  3DAC               	addwfc	___fldiv@b+2,f
  6073  03CF  3000               	movlw	0
  6074  03D0  3DAD               	addwfc	___fldiv@b+3,f
  6075  03D1  1C2D               	btfss	___fldiv@b+3,0
  6076  03D2  2BEF               	goto	l2528
  6077  03D3  082A               	movf	___fldiv@b,w
  6078  03D4  00AE               	movwf	??___fldiv
  6079  03D5  082B               	movf	___fldiv@b+1,w
  6080  03D6  00AF               	movwf	??___fldiv+1
  6081  03D7  082C               	movf	___fldiv@b+2,w
  6082  03D8  00B0               	movwf	??___fldiv+2
  6083  03D9  082D               	movf	___fldiv@b+3,w
  6084  03DA  00B1               	movwf	??___fldiv+3
  6085  03DB  3001               	movlw	1
  6086  03DC  00B2               	movwf	??___fldiv+4
  6087  03DD                     u2415:	
  6088  03DD  37B1               	asrf	??___fldiv+3,f
  6089  03DE  0CB0               	rrf	??___fldiv+2,f
  6090  03DF  0CAF               	rrf	??___fldiv+1,f
  6091  03E0  0CAE               	rrf	??___fldiv,f
  6092  03E1  0BB2               	decfsz	??___fldiv+4,f
  6093  03E2  2BDD               	goto	u2415
  6094  03E3  0831               	movf	??___fldiv+3,w
  6095  03E4  00AD               	movwf	___fldiv@b+3
  6096  03E5  0830               	movf	??___fldiv+2,w
  6097  03E6  00AC               	movwf	___fldiv@b+2
  6098  03E7  082F               	movf	??___fldiv+1,w
  6099  03E8  00AB               	movwf	___fldiv@b+1
  6100  03E9  082E               	movf	??___fldiv,w
  6101  03EA  00AA               	movwf	___fldiv@b
  6102  03EB  3001               	movlw	1
  6103  03EC  07B8               	addwf	___fldiv@new_exp,f
  6104  03ED  3000               	movlw	0
  6105  03EE  3DB9               	addwfc	___fldiv@new_exp+1,f
  6106  03EF                     l2528:	
  6107  03EF  0839               	movf	___fldiv@new_exp+1,w
  6108  03F0  3A80               	xorlw	128
  6109  03F1  00AE               	movwf	??___fldiv
  6110  03F2  3080               	movlw	128
  6111  03F3  022E               	subwf	??___fldiv,w
  6112  03F4  1D03               	skipz
  6113  03F5  2BF8               	goto	u2425
  6114  03F6  30FF               	movlw	255
  6115  03F7  0238               	subwf	___fldiv@new_exp,w
  6116  03F8                     u2425:	
  6117  03F8  1C03               	skipc
  6118  03F9  2C07               	goto	l867
  6119  03FA  30FF               	movlw	255
  6120  03FB  0020               	movlb	0	; select bank0
  6121  03FC  00B8               	movwf	___fldiv@new_exp
  6122  03FD  3000               	movlw	0
  6123  03FE  00B9               	movwf	___fldiv@new_exp+1
  6124  03FF  3000               	movlw	0
  6125  0400  00AD               	movwf	___fldiv@b+3
  6126  0401  3000               	movlw	0
  6127  0402  00AC               	movwf	___fldiv@b+2
  6128  0403  3000               	movlw	0
  6129  0404  00AB               	movwf	___fldiv@b+1
  6130  0405  3000               	movlw	0
  6131  0406  00AA               	movwf	___fldiv@b
  6132  0407                     l867:	
  6133  0407  0020               	movlb	0	; select bank0
  6134  0408  0839               	movf	___fldiv@new_exp+1,w
  6135  0409  3A80               	xorlw	128
  6136  040A  00AE               	movwf	??___fldiv
  6137  040B  3080               	movlw	128
  6138  040C  022E               	subwf	??___fldiv,w
  6139  040D  1D03               	skipz
  6140  040E  2C11               	goto	u2435
  6141  040F  3001               	movlw	1
  6142  0410  0238               	subwf	___fldiv@new_exp,w
  6143  0411                     u2435:	
  6144  0411  1803               	skipnc
  6145  0412  2C1F               	goto	l868
  6146  0413  0020               	movlb	0	; select bank0
  6147  0414  01B8               	clrf	___fldiv@new_exp
  6148  0415  01B9               	clrf	___fldiv@new_exp+1
  6149  0416  3000               	movlw	0
  6150  0417  00AD               	movwf	___fldiv@b+3
  6151  0418  3000               	movlw	0
  6152  0419  00AC               	movwf	___fldiv@b+2
  6153  041A  3000               	movlw	0
  6154  041B  00AB               	movwf	___fldiv@b+1
  6155  041C  3000               	movlw	0
  6156  041D  00AA               	movwf	___fldiv@b
  6157  041E  01B7               	clrf	___fldiv@sign
  6158  041F                     l868:	
  6159  041F  0020               	movlb	0	; select bank0
  6160  0420  0838               	movf	___fldiv@new_exp,w
  6161  0421  00AE               	movwf	??___fldiv
  6162  0422  082E               	movf	??___fldiv,w
  6163  0423  00BE               	movwf	___fldiv@bexp
  6164  0424  1C3E               	btfss	___fldiv@bexp,0
  6165  0425  2C28               	goto	l2542
  6166  0426  17AC               	bsf	___fldiv@b+2,7
  6167  0427  2C2C               	goto	l870
  6168  0428                     l2542:	
  6169  0428  307F               	movlw	127
  6170  0429  00AE               	movwf	??___fldiv
  6171  042A  082E               	movf	??___fldiv,w
  6172  042B  05AC               	andwf	___fldiv@b+2,f
  6173  042C                     l870:	
  6174  042C  363E               	lsrf	___fldiv@bexp,w
  6175  042D  00AE               	movwf	??___fldiv
  6176  042E  082E               	movf	??___fldiv,w
  6177  042F  00AD               	movwf	___fldiv@b+3
  6178  0430  2B12               	goto	L2
  6179  0431                     __end_of___fldiv:	
  6180                           
  6181                           	psect	text25
  6182  0C45                     __ptext25:	
  6183 ;; *************** function _SYSTEM_Initialize *****************
  6184 ;; Defined at:
  6185 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0, pclath, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6199 ;;      Params:         0       0       0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    2
  6206 ;; This function calls:
  6207 ;;		_ADC_Initialize
  6208 ;;		_EUSART_Initialize
  6209 ;;		_OSCILLATOR_Initialize
  6210 ;;		_PIN_MANAGER_Initialize
  6211 ;;		_WDT_Initialize
  6212 ;; This function is called by:
  6213 ;;		_main
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           
  6218                           ;psect for function _SYSTEM_Initialize
  6219  0C45                     _SYSTEM_Initialize:	
  6220                           
  6221                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6222                           
  6223                           ;incstack = 0
  6224                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6225  0C45  318D  2575  318C   	fcall	_PIN_MANAGER_Initialize
  6226                           
  6227                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6228  0C48  318C  242E  318C   	fcall	_OSCILLATOR_Initialize
  6229                           
  6230                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6231  0C4B  318C  240D  318C   	fcall	_WDT_Initialize
  6232                           
  6233                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  6234  0C4E  318C  2435  318C   	fcall	_ADC_Initialize
  6235                           
  6236                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  6237  0C51  318D  2553         	fcall	_EUSART_Initialize
  6238  0C53  0008               	return
  6239  0C54                     __end_of_SYSTEM_Initialize:	
  6240                           
  6241                           	psect	text26
  6242  0C0D                     __ptext26:	
  6243 ;; *************** function _WDT_Initialize *****************
  6244 ;; Defined at:
  6245 ;;		line 70 in file "mcc_generated_files/mcc.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      void 
  6252 ;; Registers used:
  6253 ;;		wreg
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6259 ;;      Params:         0       0       0       0       0       0       0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0       0
  6262 ;;      Totals:         0       0       0       0       0       0       0       0
  6263 ;;Total ram usage:        0 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_SYSTEM_Initialize
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           
  6273                           ;psect for function _WDT_Initialize
  6274  0C0D                     _WDT_Initialize:	
  6275                           
  6276                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  6277                           
  6278                           ;incstack = 0
  6279                           ; Regs used in _WDT_Initialize: [wreg]
  6280  0C0D  3016               	movlw	22
  6281  0C0E  0021               	movlb	1	; select bank1
  6282  0C0F  0097               	movwf	23	;volatile
  6283  0C10  0008               	return
  6284  0C11                     __end_of_WDT_Initialize:	
  6285                           
  6286                           	psect	text27
  6287  0D75                     __ptext27:	
  6288 ;; *************** function _PIN_MANAGER_Initialize *****************
  6289 ;; Defined at:
  6290 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6304 ;;      Params:         0       0       0       0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0       0
  6307 ;;      Totals:         0       0       0       0       0       0       0       0
  6308 ;;Total ram usage:        0 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_SYSTEM_Initialize
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           
  6318                           ;psect for function _PIN_MANAGER_Initialize
  6319  0D75                     _PIN_MANAGER_Initialize:	
  6320                           
  6321                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6322                           
  6323                           ;incstack = 0
  6324                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6325  0D75  0022               	movlb	2	; select bank2
  6326  0D76  0190               	clrf	16	;volatile
  6327                           
  6328                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6329  0D77  018F               	clrf	15	;volatile
  6330                           
  6331                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6332  0D78  018C               	clrf	12	;volatile
  6333                           
  6334                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6335  0D79  018D               	clrf	13	;volatile
  6336                           
  6337                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6338  0D7A  018E               	clrf	14	;volatile
  6339                           
  6340                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
  6341  0D7B  300F               	movlw	15
  6342  0D7C  0021               	movlb	1	; select bank1
  6343  0D7D  0090               	movwf	16	;volatile
  6344                           
  6345                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  6346  0D7E  30FF               	movlw	255
  6347  0D7F  008C               	movwf	12	;volatile
  6348                           
  6349                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  6350  0D80  30FF               	movlw	255
  6351  0D81  008D               	movwf	13	;volatile
  6352                           
  6353                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  6354  0D82  30BF               	movlw	191
  6355  0D83  008E               	movwf	14	;volatile
  6356                           
  6357                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  6358  0D84  30FF               	movlw	255
  6359  0D85  008F               	movwf	15	;volatile
  6360                           
  6361                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  6362  0D86  30FF               	movlw	255
  6363  0D87  0023               	movlb	3	; select bank3
  6364  0D88  008F               	movwf	15	;volatile
  6365                           
  6366                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x3F;
  6367  0D89  303F               	movlw	63
  6368  0D8A  008D               	movwf	13	;volatile
  6369                           
  6370                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  6371  0D8B  3007               	movlw	7
  6372  0D8C  0090               	movwf	16	;volatile
  6373                           
  6374                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3F;
  6375  0D8D  303F               	movlw	63
  6376  0D8E  008C               	movwf	12	;volatile
  6377                           
  6378                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  6379  0D8F  0024               	movlb	4	; select bank4
  6380  0D90  0190               	clrf	16	;volatile
  6381                           
  6382                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  6383  0D91  018D               	clrf	13	;volatile
  6384                           
  6385                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  6386  0D92  0021               	movlb	1	; select bank1
  6387  0D93  1795               	bsf	21,7	;volatile
  6388                           
  6389                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  6390  0D94  0022               	movlb	2	; select bank2
  6391  0D95  019D               	clrf	29	;volatile
  6392  0D96  0008               	return
  6393  0D97                     __end_of_PIN_MANAGER_Initialize:	
  6394                           
  6395                           	psect	text28
  6396  0C2E                     __ptext28:	
  6397 ;; *************** function _OSCILLATOR_Initialize *****************
  6398 ;; Defined at:
  6399 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6413 ;;      Params:         0       0       0       0       0       0       0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0
  6416 ;;      Totals:         0       0       0       0       0       0       0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_SYSTEM_Initialize
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           
  6427                           ;psect for function _OSCILLATOR_Initialize
  6428  0C2E                     _OSCILLATOR_Initialize:	
  6429                           
  6430                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x38;
  6431                           
  6432                           ;incstack = 0
  6433                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6434  0C2E  3038               	movlw	56
  6435  0C2F  0021               	movlb	1	; select bank1
  6436  0C30  0099               	movwf	25	;volatile
  6437                           
  6438                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  6439  0C31  0198               	clrf	24	;volatile
  6440                           
  6441                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  6442  0C32  0022               	movlb	2	; select bank2
  6443  0C33  0196               	clrf	22	;volatile
  6444  0C34  0008               	return
  6445  0C35                     __end_of_OSCILLATOR_Initialize:	
  6446                           
  6447                           	psect	text29
  6448  0D53                     __ptext29:	
  6449 ;; *************** function _EUSART_Initialize *****************
  6450 ;; Defined at:
  6451 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;		None
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;		None
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0, pclath, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6465 ;;      Params:         0       0       0       0       0       0       0       0
  6466 ;;      Locals:         0       0       0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0
  6468 ;;      Totals:         0       0       0       0       0       0       0       0
  6469 ;;Total ram usage:        0 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    1
  6472 ;; This function calls:
  6473 ;;		_EUSART_SetErrorHandler
  6474 ;;		_EUSART_SetFramingErrorHandler
  6475 ;;		_EUSART_SetOverrunErrorHandler
  6476 ;; This function is called by:
  6477 ;;		_SYSTEM_Initialize
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           
  6482                           ;psect for function _EUSART_Initialize
  6483  0D53                     _EUSART_Initialize:	
  6484                           
  6485                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6486                           
  6487                           ;incstack = 0
  6488                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6489  0D53  3008               	movlw	8
  6490  0D54  0023               	movlb	3	; select bank3
  6491  0D55  009F               	movwf	31	;volatile
  6492                           
  6493                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  6494  0D56  3080               	movlw	128
  6495  0D57  009D               	movwf	29	;volatile
  6496                           
  6497                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  6498  0D58  3024               	movlw	36
  6499  0D59  009E               	movwf	30	;volatile
  6500                           
  6501                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x08;
  6502  0D5A  3008               	movlw	8
  6503  0D5B  009B               	movwf	27	;volatile
  6504                           
  6505                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x02;
  6506  0D5C  3002               	movlw	2
  6507  0D5D  009C               	movwf	28	;volatile
  6508                           
  6509                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6510  0D5E  3000               	movlw	0
  6511  0D5F  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6512  0D60  3000               	movlw	0
  6513  0D61  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6514  0D62  318C  241C  318D   	fcall	_EUSART_SetFramingErrorHandler
  6515                           
  6516                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6517  0D65  3000               	movlw	0
  6518  0D66  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6519  0D67  3000               	movlw	0
  6520  0D68  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6521  0D69  318C  2422  318D   	fcall	_EUSART_SetOverrunErrorHandler
  6522                           
  6523                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6524  0D6C  3000               	movlw	0
  6525  0D6D  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6526  0D6E  3000               	movlw	0
  6527  0D6F  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6528  0D70  318C  2416         	fcall	_EUSART_SetErrorHandler
  6529                           
  6530                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6531  0D72  0021               	movlb	1	; select bank1
  6532  0D73  01A9               	clrf	_eusartRxLastError^(0+128)	;volatile
  6533  0D74  0008               	return
  6534  0D75                     __end_of_EUSART_Initialize:	
  6535                           
  6536                           	psect	text30
  6537  0C22                     __ptext30:	
  6538 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6539 ;; Defined at:
  6540 ;;		line 170 in file "mcc_generated_files/eusart.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6543 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6555 ;;      Params:         2       0       0       0       0       0       0       0
  6556 ;;      Locals:         0       0       0       0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0       0
  6558 ;;      Totals:         2       0       0       0       0       0       0       0
  6559 ;;Total ram usage:        2 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_EUSART_Initialize
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           
  6569                           ;psect for function _EUSART_SetOverrunErrorHandler
  6570  0C22                     _EUSART_SetOverrunErrorHandler:	
  6571                           
  6572                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  6573                           
  6574                           ;incstack = 0
  6575                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6576  0C22  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6577  0C23  0022               	movlb	2	; select bank2
  6578  0C24  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  6579  0C25  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6580  0C26  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  6581  0C27  0008               	return
  6582  0C28                     __end_of_EUSART_SetOverrunErrorHandler:	
  6583                           
  6584                           	psect	text31
  6585  0C1C                     __ptext31:	
  6586 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6587 ;; Defined at:
  6588 ;;		line 166 in file "mcc_generated_files/eusart.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6591 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;		None
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  1    wreg      void 
  6596 ;; Registers used:
  6597 ;;		wreg
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6603 ;;      Params:         2       0       0       0       0       0       0       0
  6604 ;;      Locals:         0       0       0       0       0       0       0       0
  6605 ;;      Temps:          0       0       0       0       0       0       0       0
  6606 ;;      Totals:         2       0       0       0       0       0       0       0
  6607 ;;Total ram usage:        2 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_EUSART_Initialize
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           
  6617                           ;psect for function _EUSART_SetFramingErrorHandler
  6618  0C1C                     _EUSART_SetFramingErrorHandler:	
  6619                           
  6620                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  6621                           
  6622                           ;incstack = 0
  6623                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6624  0C1C  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6625  0C1D  0022               	movlb	2	; select bank2
  6626  0C1E  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  6627  0C1F  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6628  0C20  00A4               	movwf	_EUSART_FramingErrorHandler^(0+256)
  6629  0C21  0008               	return
  6630  0C22                     __end_of_EUSART_SetFramingErrorHandler:	
  6631                           
  6632                           	psect	text32
  6633  0C16                     __ptext32:	
  6634 ;; *************** function _EUSART_SetErrorHandler *****************
  6635 ;; Defined at:
  6636 ;;		line 174 in file "mcc_generated_files/eusart.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6639 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6651 ;;      Params:         2       0       0       0       0       0       0       0
  6652 ;;      Locals:         0       0       0       0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0       0
  6654 ;;      Totals:         2       0       0       0       0       0       0       0
  6655 ;;Total ram usage:        2 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_EUSART_Initialize
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           
  6665                           ;psect for function _EUSART_SetErrorHandler
  6666  0C16                     _EUSART_SetErrorHandler:	
  6667                           
  6668                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6672  0C16  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6673  0C17  0022               	movlb	2	; select bank2
  6674  0C18  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  6675  0C19  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6676  0C1A  00A0               	movwf	_EUSART_ErrorHandler^(0+256)
  6677  0C1B  0008               	return
  6678  0C1C                     __end_of_EUSART_SetErrorHandler:	
  6679                           
  6680                           	psect	text33
  6681  0C35                     __ptext33:	
  6682 ;; *************** function _ADC_Initialize *****************
  6683 ;; Defined at:
  6684 ;;		line 65 in file "mcc_generated_files/adc.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6698 ;;      Params:         0       0       0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;;		_SYSTEM_Initialize
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _ADC_Initialize
  6714  0C35                     _ADC_Initialize:	
  6715                           
  6716                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6720  0C35  3001               	movlw	1
  6721  0C36  0021               	movlb	1	; select bank1
  6722  0C37  009D               	movwf	29	;volatile
  6723                           
  6724                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xA0;
  6725  0C38  30A0               	movlw	160
  6726  0C39  009E               	movwf	30	;volatile
  6727                           
  6728                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  6729  0C3A  019B               	clrf	27	;volatile
  6730                           
  6731                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  6732  0C3B  019C               	clrf	28	;volatile
  6733  0C3C  0008               	return
  6734  0C3D                     __end_of_ADC_Initialize:	
  6735                           
  6736                           	psect	text34
  6737  0CC5                     __ptext34:	
  6738 ;; *************** function _ADC_GetConversion *****************
  6739 ;; Defined at:
  6740 ;;		line 110 in file "mcc_generated_files/adc.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  channel         1    wreg     enum E2950
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  channel         1    3[COMMON] enum E2950
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  2    0[COMMON] unsigned short 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6754 ;;      Params:         2       0       0       0       0       0       0       0
  6755 ;;      Locals:         1       0       0       0       0       0       0       0
  6756 ;;      Temps:          1       0       0       0       0       0       0       0
  6757 ;;      Totals:         4       0       0       0       0       0       0       0
  6758 ;;Total ram usage:        4 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_main
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           
  6768                           ;psect for function _ADC_GetConversion
  6769  0CC5                     _ADC_GetConversion:	
  6770                           
  6771                           ;incstack = 0
  6772                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6773                           ;ADC_GetConversion@channel stored from wreg
  6774  0CC5  00F3               	movwf	ADC_GetConversion@channel
  6775                           
  6776                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  6777  0CC6  0873               	movf	ADC_GetConversion@channel,w
  6778  0CC7  00F2               	movwf	??_ADC_GetConversion
  6779  0CC8  0DF2               	rlf	??_ADC_GetConversion,f
  6780  0CC9  0DF2               	rlf	??_ADC_GetConversion,f
  6781  0CCA  0021               	movlb	1	; select bank1
  6782  0CCB  081D               	movf	29,w	;volatile
  6783  0CCC  0672               	xorwf	??_ADC_GetConversion,w
  6784  0CCD  3983               	andlw	-125
  6785  0CCE  0672               	xorwf	??_ADC_GetConversion,w
  6786  0CCF  009D               	movwf	29	;volatile
  6787                           
  6788                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  6789  0CD0  141D               	bsf	29,0	;volatile
  6790                           
  6791                           ;mcc_generated_files/adc.c: 119:     _delay((unsigned long)((5)*(20000000/4000000.0)));
  6792  0CD1  3008               	movlw	8
  6793  0CD2                     u2897:	
  6794  0CD2  0B89               	decfsz	9,f
  6795  0CD3  2CD2               	goto	u2897
  6796  0CD4  0000               	nop
  6797                           
  6798                           ;mcc_generated_files/adc.c: 122:     ADCON0bits.GO_nDONE = 1;
  6799  0CD5  0021               	movlb	1	; select bank1
  6800  0CD6  149D               	bsf	29,1	;volatile
  6801  0CD7                     l30:	
  6802                           ;mcc_generated_files/adc.c: 126:     {;mcc_generated_files/adc.c: 127:     }
  6803                           
  6804                           
  6805                           ;mcc_generated_files/adc.c: 125:     while (ADCON0bits.GO_nDONE)
  6806  0CD7  189D               	btfsc	29,1	;volatile
  6807  0CD8  2CD7               	goto	l30
  6808                           
  6809                           ;mcc_generated_files/adc.c: 130:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6810  0CD9  081C               	movf	28,w	;volatile
  6811  0CDA  00F1               	movwf	?_ADC_GetConversion+1
  6812  0CDB  081B               	movf	27,w	;volatile
  6813  0CDC  00F0               	movwf	?_ADC_GetConversion
  6814  0CDD  0008               	return
  6815  0CDE                     __end_of_ADC_GetConversion:	
  6816  007E                     btemp	set	126	;btemp
  6817  007E                     wtemp0	set	126


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         59
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     20      79
    BANK2            80      0       6
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1016_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    enviar_trama@data	PTR void  size(1) Largest target is 17
		 -> trama2(BANK1[17]), 

    enviar_trama@puntero	PTR unsigned char  size(1) Largest target is 17
		 -> trama2(BANK1[17]), 

    checksum@data	PTR void  size(1) Largest target is 17
		 -> trama2(BANK1[17]), 

    checksum@puntero	PTR unsigned char  size(1) Largest target is 17
		 -> trama2(BANK1[17]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _xtoa->_toupper
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _atoi->___wmul
    _atoi->_isdigit
    ___xxtofl->_ADC_GetConversion
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_enviar_trama
    _enviar_trama->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _pad->_fputs
    ___flmul->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK1

    _main->_enviar_trama
    _enviar_trama->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13241
                                             16 BANK1      4     4      0
                  _ADC_GetConversion
                     _ADC_Initialize
                  _SYSTEM_Initialize
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _checksum
                       _enviar_trama
 ---------------------------------------------------------------------------------
 (1) _enviar_trama                                         7     6      1    7786
                                             79 BANK0      1     0      1
                                             10 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    7564
                                             78 BANK0      1     1      0
                                              3 BANK1      7     3      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    7432
                                             73 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    41      2    7084
                                             51 BANK0     22    20      2
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                38    29      9    4038
                                             13 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMMON     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2510
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1127
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     812
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              8     6      2     161
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1085
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _checksum                                             7     6      1     291
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             32 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1577
                                              6 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___fldiv
     _ADC_GetConversion (ARG)
     ___xxtofl (ARG)
       _ADC_GetConversion (ARG)
   ___flmul
     _ADC_GetConversion (ARG)
     __Umul8_16 (ARG)
     ___fldiv (ARG)
       _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___xxtofl (ARG)
       _ADC_GetConversion (ARG)
   ___xxtofl
     _ADC_GetConversion (ARG)
   _checksum
   _enviar_trama
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _fputc
             _putch
               _EUSART_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _toupper
               _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     14      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       6      10        7.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      B3      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul 27 18:27:40 2019

                                 ___fldiv@aexp 003F                                   ___fldiv@bexp 003E  
                                 ___fldiv@sign 0037                                    __CFG_CP$OFF 0000  
                                           l30 0CD7                            ___wmul@multiplicand 0072  
                          __Umul8_16@word_mpld 0076                                            l103 0C3E  
                                          l161 0026                                            l414 0E91  
                                          l422 016B                                            l417 0EB1  
                                          l418 0EBD                                            l426 0186  
                                          l460 0469                                            l461 046C  
                                          l447 0288                                            l463 049C  
                                          l456 0457                                            l458 0463  
                                          l459 0466                                            l489 0CE6  
                                          l930 0F1D                                            l924 0EE7  
                                          l870 042C                                            l846 0300  
                                          l937 0F31                                            l938 0F3B  
                                          l867 0407                                            l868 041F  
                                          l957 0FC8                                            l898 07E9  
                                 __CFG_CPD$OFF 0000                                            _pad 0E79  
               ?_EUSART_SetFramingErrorHandler 0070                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 __CFG_FOSC$HS 0000                                   ___flmul@aexp 0052  
                                 ___flmul@bexp 0053                                   ___flmul@sign 004D  
                                 ___flmul@temp 0058                                   ___flmul@prod 0054  
                                 __CFG_LVP$OFF 0000                                           l2000 0E8F  
                                         l1046 0014                                           l2006 0E93  
                                         l2120 02A4                                           l2104 0257  
                                         l2200 04A3                                           l2036 0CE0  
                                         l2212 04D1                                           l2150 0FCC  
                                         l2142 0F90                                           l2214 04E1  
                                         l2222 0510                                           l2056 0D0D  
                                         l2160 0FFB                                           l2144 0F95  
                                         l2136 0F80                                           l2128 0F64  
                                         l2080 01C8                                           l2072 0196  
                                         l2216 04E9                                           l2146 0FA9  
                                         l2066 017E                                           l2242 0596  
                                         l2226 052F                                           l2076 01AE  
                                         l2236 0575                                           l2180 0459  
                                         l2252 05A7                                           l2404 0DC3  
                                         l2422 02D1                                           l2246 059C  
                                         l2190 046F                                           l2344 000E  
                                         l2096 0216                                           l2514 03C4  
                                         l2506 0396                                           l2442 02F5  
                                         l2426 02D4                                           l2508 03AD  
                                         l2428 02DC                                           l2700 0EF6  
                                         l2196 0473                                           l2276 0E1E  
                                         l2542 0428                                           l2518 03C6  
                                         l2462 032B                                           l2446 02F8  
                                         l2390 0DF0                                           l2278 0E3C  
                                         l2528 03EF                                           l2456 031F  
                                         l2704 0EFA                                           l2392 0E10  
                                         l2482 0372                                           l2490 0354  
                                         l2562 05E4                                           l2714 0F2F  
                                         l2706 0F0A                                           l2810 0FA1  
                                         l2492 0390                                           l2652 077F  
                                         l2644 0751                                           l2580 0607  
                                         l2564 05E6                                           l2716 0F22  
                                         l2670 07BF                                           l2646 0768  
                                         l2582 0609                                           l2566 05EE  
                                         l2488 038B                                           l2656 0781  
                                         l2592 061F                                           l2584 0611  
                                         l2728 0F56                                           l2808 048A  
                                         l2666 07AA                                           l1962 0E4D  
                                         l2676 07D6                                           l2694 0EDF  
                                         l1966 0E70                                           l1982 0C9C  
                                         ?_pad 0024                                           l1976 0D9B  
                                         l1984 0CA7                                           l1996 0E87  
                                         STR_1 1000                                           u2010 0505  
                                         u2020 0506                                           _LATA 010C  
                                         u1510 0CBD                                           _LATB 010D  
                                         _LATC 010E                                           u1600 0D2B  
                                         u1520 0CBE                                           _LATD 010F  
                                         u2145 0DFE                                           _LATE 0110  
                                         u1610 0D41                                           u1620 0D42  
                                         u2325 0399                                           u2415 03DD  
                                         u2255 035C                                           u2095 0015  
                                         u1640 0C78                                           u1800 0200  
                                         u2425 03F8                                           u2345 03A2  
                                         u2265 0363                                           u1650 0C79  
                                         u1570 0C8F                                           u2435 0411  
                                         u1555 0E9D                                           u1580 0C90  
                                         u2285 036C                                           u2605 075D  
                                         u1485 0E6E                                           u1590 0D2A  
                                         u2295 0380                                           u2535 0695  
                                         u1735 0176                                           u1920 0FE0  
                                         u1760 01DF                                           u2545 06C4  
                                         u1825 023B                                           u1930 0FE1  
                                         u1770 01E0                                           u2555 071A  
                                         u1675 0CE7                                           u1835 0261  
                                         u1755 01C2                                           u2565 0731  
                                         u1685 0CEC                                           u1790 01FF  
                                         u2575 0740                                           u1855 0277  
                                         u2585 0754                                           u2825 0F43  
                                         u2745 0F03                                           u1865 0283  
                                         u2675 0798                                           u2685 07B3  
                                         u2765 0F17                                           u2695 07C9  
                                         u2785 0F29                                           u2857 0086  
                                         u2867 00DF                                           u2877 0138  
                                         u2887 015A                                           u2897 0CD2  
                                         _WPUB 020D                                           _WPUE 0210  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _dbuf 00AA                                           _atoi 0F5F  
                                         _main 0023                                           _prec 00A4  
                                         _nout 00A0                                           pad@i 0028  
                                         pad@p 0025                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002A  
                                         btemp 007E                                           _xtoa 0162  
                                __CFG_BOREN$ON 0000                                           start 0002  
                              ___fldiv@new_exp 0038                                  __CFG_MCLRE$ON 0000  
                                        ??_pad 0027                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 0C35  
                                        ?_atoi 0076                                          ?_main 0070  
                              __end_of___fldiv 0431                                  __CFG_WDTE$OFF 0000  
                              __end_of___flmul 07F6                                          ?_xtoa 002D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                 vfpfcnvrt@fmt 0053                                   vfpfcnvrt@llu 005B  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISD 008F  
                                        _TRISE 0090                                          _TXREG 019A  
                                        _TXSTA 019E                               enviar_trama@data 00E9  
                             checksum@contador 0076                                          _flags 00A6  
                               _WDT_Initialize 0C0D                                          _fputc 0E44  
                              __end_of_isalpha 0D32                                          _fputs 0D97  
                              __end_of_isdigit 0C80                                          atoi@n 0027  
                                        pad@fp 002C                                          atoi@s 0076  
                                        _width 00A2                                          _putch 0C11  
                              __end_of_islower 0CC5                                __end_of_isspace 0D15  
                              __end_of_isupper 0C97                                          status 0003  
                                        wtemp0 007E                                          xtoa@c 0051  
                                        xtoa@d 002D                                          xtoa@i 004F  
                                        xtoa@n 0047                                          xtoa@p 0042  
                                        xtoa@w 0045                                          xtoa@x 0035  
                              __end_of_toupper 0D53                                  ?_enviar_trama 006F  
                                 _toupper$1068 007C                                __initialization 07F6  
                                 __end_of_atoi 1000                                   __end_of_main 0162  
                                 __end_of_xtoa 02B7                                 ??_EUSART_Write 0070  
                                       ??_atoi 0078                                         ??_main 00EB  
                                       ??_xtoa 0036                                 __CFG_PLLEN$OFF 0000  
                       __end_of_WDT_Initialize 0C11              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0122                                         ?_fputc 0072  
                                       ?_fputs 007A                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _APFCON 011D  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELD 018F  
                                       _ANSELE 0190                                         _BORCON 0116  
                                       _OSCCON 0099                                  vfpfcnvrt@done 0063  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                 ??_enviar_trama 00E5  
                             __end_of___xxtofl 0F5F                               __end_of_checksum 0E12  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 00DC  
                                       ___wmul 0CDE                                      ??___fldiv 002E  
                               __CFG_STVREN$ON 0000                                      ??___flmul 0048  
                                       _trama2 00CA                                         _printf 0C54  
                                       pad@buf 0024                                         _strlen 0C97  
                                       fputc@c 0072                                         fputs@c 0020  
                                       fputs@i 0021                                         fputs@s 0023  
                                    ??_isalpha 0072                                      ??_isdigit 0072  
                           __size_of__Umul8_16 001F                                      ??_islower 0072  
                                    ??_isspace 0072                                ?_WDT_Initialize 0070  
                                    ??_isupper 0072                       ADC_GetConversion@channel 0073  
                             __end_of_vfprintf 0E44                                         xtoa@fp 0044  
                                    ??_toupper 0078                                   ___xxtofl@arg 0022  
                                 ___xxtofl@exp 0021                              _SYSTEM_Initialize 0C45  
                                 ___xxtofl@val 0074                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                  __end_of_fputc 0E79  
                                __end_of_fputs 0DBC                                  __end_of_putch 0C16  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                                      ??_fputc 0075                      __end_of_SYSTEM_Initialize 0C54  
                                      ??_fputs 007B                                        ??_putch 0071  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0C45  
                              __CFG_VCAPEN$OFF 0000                              __end_of__Umul8_16 0023  
                                   __pmaintext 0023                                        ?___wmul 0070  
                                      _BAUDCON 019F                                        ?_printf 00DE  
                      __size_of_ADC_Initialize 0008                                        ?_strlen 0070  
                         __end_of_enviar_trama 0DE3                                      ?___xxtofl 0074  
                                    ?_checksum 0070                             __size_of_vfpfcnvrt 0199  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                                      ___fldiv 02B7                                        ___flmul 05CA  
                              __size_of___wmul 001B                                      ?_vfprintf 0069  
                                      __ptext1 0DBC                                        __ptext2 0C54  
                                      __ptext3 0E12                                        __ptext4 0431  
                                      __ptext5 0162                                        __ptext6 0D32  
                                      __ptext7 0CAE                                        __ptext8 0E79  
                                      __ptext9 0C97                                __size_of_printf 0015  
                              __size_of_strlen 0017                                        _entrada 00A8  
                        _OSCILLATOR_Initialize 0C2E                                   __size_of_pad 0050  
                                      _isalpha 0D15                                        _isdigit 0C69  
                                   ??___xxtofl 0078                                     ??_checksum 0071  
                                      _islower 0CAE                       ??_PIN_MANAGER_Initialize 0070  
                                      _isspace 0CF9                                        _isupper 0C80  
                                      atoi@neg 0020                     __size_of_SYSTEM_Initialize 000F  
                                      clrloop0 0C29                                        _toupper 0D32  
                         end_of_initialization 07FD          __end_of_EUSART_SetOverrunErrorHandler 0C28  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0C22  
                                      fputc@fp 0074                                        fputs@fp 007A  
                            _EUSART_Initialize 0D53                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 05CA                                      _RCSTAbits 019D  
                                   ??_vfprintf 006C                                        strlen@a 0073  
                                      strlen@s 0074                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                         enviar_trama@size_trama 006F  
                                ___xxtofl@sign 0020                          __size_of_EUSART_Write 0008  
                                  ___fldiv@grs 003A                                    ___fldiv@rem 0033  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 004E  
                    __end_of_EUSART_Initialize 0D75                                      _TXSTAbits 019E  
                           checksum@size_trama 0070                          __size_of_enviar_trama 0027  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 0054  
                                  vfpfcnvrt@fp 0068                                 __end_of___wmul 0CF9  
                                 _EUSART_Write 0C3D                                 _ADC_Initialize 0C35  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 0C69  
                               __end_of_strlen 0CAE                            start_initialization 07F6  
              __size_of_PIN_MANAGER_Initialize 0022                                    __end_of_pad 0EC9  
                              checksum@puntero 0074                                    putch@txData 0071  
                                 _enviar_trama 0DBC                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  vfprintf@fmt 0069                     _EUSART_FramingErrorHandler 0124  
                                     ??___wmul 0074                         _EUSART_SetErrorHandler 0C16  
                       __end_of_ADC_Initialize 0C3D                                      __Umul8_16 0004  
                                     ??_printf 006E                                       ??_strlen 0072  
                                    ___fldiv@a 0026                                      ___fldiv@b 002A  
                                    ___flmul@a 0044                                      ___flmul@b 0040  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00DB                                  enviar_trama@i 00EA  
                            __size_of___xxtofl 0096                              __size_of_checksum 002F  
                   __size_of_EUSART_Initialize 0022                                      __pnvBANK2 0120  
                       _PIN_MANAGER_Initialize 0D75                                       ?___fldiv 0026  
                                     ?___flmul 0040                                     ?__Umul8_16 0070  
                              ?_ADC_Initialize 0070                              __size_of_vfprintf 0032  
                                 checksum@data 0073                                       ?_isalpha 0070  
                                     ?_isdigit 0070                                       ?_islower 0070  
                                     ?_isspace 0070                                       ?_isupper 0070  
                               __size_of_fputc 0035                                 __size_of_fputs 0025  
                                     ?_toupper 0076                                 __size_of_putch 0005  
                                    checksum@i 0075                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 0070                                      clear_ram0 0C28  
                            _eusartRxLastError 00A9                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072              _EUSART_DefaultOverrunErrorHandler 0000  
                                    _vfpfcnvrt 0431                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0070                                   _isspace$1003 0074  
                                   vfpfcnvrt@c 0067                                     vfprintf@ap 006B  
                                   vfprintf@fp 00DB                              _ADC_GetConversion 0CC5  
                      ??_OSCILLATOR_Initialize 0070                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0120                             ?_ADC_GetConversion 0070  
                             __size_of___fldiv 017A                               __size_of___flmul 022C  
                                   ?_vfpfcnvrt 0053                            enviar_trama@puntero 00E8  
                          ??_ADC_GetConversion 0072                                       ___xxtofl 0EC9  
                                     _atoi$976 0022                                       _atoi$977 0026  
                                     _atoi$978 0024                                       _checksum 0DE3  
                             __size_of_isalpha 001D                               __size_of_isdigit 0017  
                             __size_of_islower 0017                               __size_of_isspace 001C  
                                     __ptext10 0D97                                       __ptext11 0E44  
                                     __ptext20 0DE3                                       __ptext12 0C11  
                                     __ptext21 0EC9                                       __ptext13 0C3D  
                                     __ptext30 0C22                                       __ptext22 05CA  
                                     __ptext14 0C80                                       __ptext31 0C1C  
                                     __ptext23 0004                                       __ptext15 0D15  
                                     __ptext32 0C16                                       __ptext24 02B7  
                                     __ptext16 0F5F                                       __ptext33 0C35  
                                     __ptext25 0C45                                       __ptext17 0CF9  
                                     __ptext34 0CC5                                       __ptext26 0C0D  
                                     __ptext18 0C69                                       __ptext27 0D75  
                                     __ptext19 0CDE                                       __ptext28 0C2E  
                                     __ptext29 0D53                               __size_of_isupper 0017  
                             __size_of_toupper 0021                                  __size_of_atoi 00A1  
                                __size_of_main 013F                                  __size_of_xtoa 0155  
                    __end_of_ADC_GetConversion 0CDE                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                       _xtoa$667 003E  
                                     _xtoa$668 0040                                       _vfprintf 0E12  
                                    printf@fmt 00DE          __end_of_EUSART_SetFramingErrorHandler 0C22  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0C1C  
                                     isalpha@c 0070                                       isdigit@c 0070  
                      __size_of_WDT_Initialize 0004                                       islower@c 0070  
                                     isspace@c 0070                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0C1C                              __CFG_CLKOUTEN$OFF 0000  
                                     isupper@c 0070                               ??_ADC_Initialize 0070  
                                     printf@ap 00E4  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                  ??_vfpfcnvrt 0055                                  _vfpfcnvrt$683 0065  
                                __pstringtext1 1000                                  __pstringtext2 0000  
                       __Umul8_16@multiplicand 0070                                       toupper@c 0076  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 0D97  
                         __Umul8_16@multiplier 0078                     __size_of_ADC_GetConversion 0019  
                            __Umul8_16@product 0074  
